#!/bin/sh
# -*- tab-width: 4; sh-basic-offset: 4; indent-tabs-mode: t -*-
# vim: tabstop=4 shiftwidth=4 noexpandtab

# Copyright 2023 Yushun Cheng <chengys@disroot.org>
# LICENSE: MIT
#
# This file is now 100% POSIX-compatible.  Please read the POSIX standard
# carefully before making any changes!
#
# FYI, you can find the standard here:
# https://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html

# Get OS.
_UNAME="$(uname)"

runnable() {
	type "$1" 1>/dev/null 2>/dev/null
}

# Define resolpath, which should resolve the given path so that the last
# component is not a symbolic link.
if runnable realpath; then
	resolpath() {
		realpath "$1"
	}
else
	if runnable readlink; then
		resolpath() {
			_f="$1"

			while [ -L "$_f" ]; do
				_link="$(readlink "$_f")"
				case "$_link" in
					/* ) _f="$_link";;
					*  ) _f="$(dirname "$f")"/"$_link";;
				esac
			done
			echo "$_f"

			unset -v _f
			unset -v _link
		}
	else
		echo "readlink not installed, so symlink resolving is unsupported" 1>&2
		resolpath() {
			echo "$1"
		}
	fi
fi

# Execute if the executable is executable.
try_run() {
	runnable "$1" && exec "$@"
}

# Find the directory that contains `main.py`.
exe_path="$(resolpath "$0")"
parent_path="$(dirname "$exe_path")"
script_path="$parent_path/main.py"
while ! [ -f "$script_path" ]; do
	parent_path=$parent_path/..
	script_path=$parent_path/main.py
done
unset -v parent_path
unset -v exe_path

# Find python and run it.
for python in pypy3 python3; do
	try_run "$python" "$script_path" "$@"
done
_MAC_PY_HOME="/Library/Frameworks/Python.framework/Versions"
if [ "$_UNAME" = "Darwin" ] && [ -d "$_MAC_PY_HOME" ]; then
	# Search through MAC OS specific paths.
	for path in "$_MAC_PY_HOME"/*; do
		case $(basename "$path" | tr '[:upper:]' '[:lower:]') in
			*pypy*) try_run "$path/bin/python3" "$script_path" "$@";;
		esac
	done
	for path in "$_MAC_PY_HOME"/*; do
		case $(basename "$path" | tr '[:upper:]' '[:lower:]') in
			*pypy*) ;;
			*) try_run "$path/bin/python3" "$script_path" "$@";;
		esac
	done
fi
unset -v _MAC_PY_HOME

# If we cannot find python3, we should output a warning message.
echo "cannot find python3 on your computer" 1>&2
echo "please make sure python3 is installed and added to your PATH" 1>&2
exit 1
