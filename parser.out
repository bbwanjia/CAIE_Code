Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DEFINE
    GETRECORD
    LEFT_BRACE
    NEWLINE
    PUTRECORD
    RIGHT_BRACE
    SUPER

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> DELETE ID
Rule 4     statement -> DECLARE ID COLON ID
Rule 5     statement -> PUBLIC ID COLON ID
Rule 6     statement -> DECLARE ids COLON ID
Rule 7     statement -> PUBLIC ids COLON ID
Rule 8     ids -> ids COMMA ID
Rule 9     ids -> ID
Rule 10    statement -> PRIVATE ID COLON ID
Rule 11    statement -> PRIVATE ids COLON ID
Rule 12    statement -> CONSTANT ID EQUAL expression
Rule 13    statement -> CONSTANT ID ASSIGN expression
Rule 14    statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 15    statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 16    statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 17    dimensions -> dimensions COMMA dimension
Rule 18    dimensions -> dimension
Rule 19    dimension -> expression COLON expression
Rule 20    statement -> expression ASSIGN expression
Rule 21    indexes -> indexes COMMA expression
Rule 22    indexes -> expression
Rule 23    expression -> LEFT_SQUARE array_items RIGHT_SQUARE
Rule 24    expression -> LEFT_SQUARE RIGHT_SQUARE
Rule 25    array_items -> array_items COMMA expression
Rule 26    array_items -> expression
Rule 27    statement -> INPUT expression
Rule 28    statement -> OUTPUT output_expression
Rule 29    statement -> _OUTPUT output_expression
Rule 30    output_expression -> output_expression COMMA expression
Rule 31    output_expression -> expression
Rule 32    statement -> IF expression THEN statements ELSE statements ENDIF
Rule 33    statement -> IF expression THEN statements ENDIF
Rule 34    statement -> CASE OF expression cases ENDCASE
Rule 35    cases -> cases case
Rule 36    cases -> case
Rule 37    case -> case_expression COLON statements SEMICOLON
Rule 38    case -> otherwise_statement SEMICOLON
Rule 39    case_expression -> expression TO expression
Rule 40    case_expression -> expression
Rule 41    otherwise_statement -> OTHERWISE COLON statements
Rule 42    statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
Rule 43    statement -> FOR ID ASSIGN expression TO expression statements NEXT ID
Rule 44    statement -> REPEAT statements UNTIL expression
Rule 45    statement -> WHILE expression DO statements ENDWHILE
Rule 46    statement -> WHILE expression statements ENDWHILE
Rule 47    statement -> expression
Rule 48    expression -> ID
Rule 49    expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 50    expression -> expression OR expression
Rule 51    expression -> expression AND expression
Rule 52    expression -> NOT expression
Rule 53    expression -> expression EQUAL expression
Rule 54    expression -> expression NOT_EQUAL expression
Rule 55    expression -> expression LESS expression
Rule 56    expression -> expression GREATER expression
Rule 57    expression -> expression LESS_EQUAL expression
Rule 58    expression -> expression GREATER_EQUAL expression
Rule 59    expression -> expression MOD expression
Rule 60    expression -> expression DIV expression
Rule 61    expression -> expression MUL expression
Rule 62    expression -> expression N_DIV expression
Rule 63    expression -> MINUS expression
Rule 64    expression -> PLUS expression
Rule 65    expression -> expression PLUS expression
Rule 66    expression -> expression MINUS expression
Rule 67    expression -> expression CONNECT expression
Rule 68    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 69    expression -> DATE
Rule 70    expression -> BOOLEAN
Rule 71    expression -> CHAR
Rule 72    expression -> STRING
Rule 73    expression -> REAL
Rule 74    expression -> INTEGER
Rule 75    declare_parameters -> declare_parameters COMMA declare_parameter
Rule 76    declare_parameters -> declare_parameter
Rule 77    declare_parameter -> ID COLON ID
Rule 78    declare_parameter -> ID COLON ARRAY
Rule 79    declare_parameter -> BYREF ID COLON ID
Rule 80    declare_parameter -> BYREF ID COLON ARRAY
Rule 81    declare_parameter -> BYVAL ID COLON ID
Rule 82    declare_parameter -> BYVAL ID COLON ARRAY
Rule 83    declare_parameter -> ID COLON ARRAY OF ID
Rule 84    declare_parameter -> BYREF ID COLON ARRAY OF ID
Rule 85    declare_parameter -> BYVAL ID COLON ARRAY OF ID
Rule 86    declare_parameter -> ID LEFT_SQUARE RIGHT_SQUARE COLON ID
Rule 87    declare_parameter -> BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
Rule 88    declare_parameter -> BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID
Rule 89    parameters -> parameters COMMA expression
Rule 90    parameters -> expression
Rule 91    statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 92    statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 93    statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
Rule 94    statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
Rule 95    statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 96    statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 97    statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
Rule 98    statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
Rule 99    statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 100   statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 101   statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
Rule 102   statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
Rule 103   statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN
Rule 104   statement -> CALL ID LEFT_PAREN RIGHT_PAREN
Rule 105   statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 106   statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 107   statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 108   statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 109   statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 110   statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 111   statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 112   statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 113   statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 114   statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 115   statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 116   statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 117   statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
Rule 118   statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
Rule 119   statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
Rule 120   statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
Rule 121   statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
Rule 122   statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
Rule 123   expression -> ID LEFT_PAREN parameters RIGHT_PAREN
Rule 124   expression -> MOD LEFT_PAREN parameters RIGHT_PAREN
Rule 125   expression -> DIV LEFT_PAREN parameters RIGHT_PAREN
Rule 126   expression -> ID LEFT_PAREN RIGHT_PAREN
Rule 127   statement -> RETURN expression
Rule 128   statement -> OPENFILE expression FOR READ
Rule 129   statement -> OPENFILE expression FOR WRITE
Rule 130   statement -> OPENFILE expression FOR APPEND
Rule 131   statement -> OPENFILE expression FOR RANDOM
Rule 132   statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 133   statement -> READFILE expression COMMA ID
Rule 134   statement -> WRITEFILE expression COMMA expression
Rule 135   statement -> CLOSEFILE expression
Rule 136   statement -> SEEK expression COMMA expression
Rule 137   statement -> TYPE ID statements ENDTYPE
Rule 138   expression -> expression DOT expression
Rule 139   statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
Rule 140   enumerate_items -> enumerate_items COMMA ID
Rule 141   enumerate_items -> ID
Rule 142   expression -> POINTER expression
Rule 143   expression -> expression POINTER
Rule 144   statement -> TYPE ID EQUAL POINTER ID
Rule 145   statement -> PASS
Rule 146   statement -> IMPORT expression
Rule 147   statement -> CLASS ID statements ENDCLASS
Rule 148   statement -> CLASS ID INHERITS ID statements ENDCLASS
Rule 149   expression -> NEW ID
Rule 150   expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN
Rule 151   statement -> TYPE ID EQUAL SET OF ID

Terminals, with rules where they appear

AND                  : 51
APPEND               : 130
ARRAY                : 14 15 16 78 80 82 83 84 85 106 108 110 112 114 116 117 118 119 120 121 122
ASSIGN               : 13 20 42 43
BOOLEAN              : 70
BYREF                : 79 80 84 87
BYVAL                : 81 82 85 88
CALL                 : 103 104
CASE                 : 34
CHAR                 : 71
CLASS                : 147 148
CLOSEFILE            : 135
COLON                : 4 5 6 7 10 11 14 15 16 19 37 41 77 78 79 80 81 82 83 84 85 86 87 88
COMMA                : 8 17 21 25 30 75 89 132 133 134 136 140
CONNECT              : 67
CONSTANT             : 12 13
DATE                 : 69
DECLARE              : 4 6 14
DEFINE               : 
DELETE               : 3
DIV                  : 60 125
DO                   : 45
DOT                  : 138
ELSE                 : 32
ENDCASE              : 34
ENDCLASS             : 147 148
ENDFUNCTION          : 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122
ENDIF                : 32 33
ENDPROCEDURE         : 91 92 93 94 95 96 97 98 99 100 101 102
ENDTYPE              : 137
ENDWHILE             : 45 46
EQUAL                : 12 53 139 144 151
FOR                  : 42 43 128 129 130 131
FUNCTION             : 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122
GETRECORD            : 
GREATER              : 56
GREATER_EQUAL        : 58
ID                   : 3 4 4 5 5 6 7 8 9 10 10 11 12 13 14 14 15 15 16 16 42 42 43 43 48 49 77 77 78 79 79 80 81 81 82 83 83 84 84 85 85 86 86 87 87 88 88 91 93 95 97 99 101 103 104 105 105 106 107 107 108 109 109 110 111 111 112 113 113 114 115 115 116 117 117 118 118 119 119 120 120 121 121 122 122 123 126 132 133 137 139 140 141 144 144 147 148 148 149 150 151 151
IF                   : 32 33
IMPORT               : 146
INHERITS             : 148
INPUT                : 27
INTEGER              : 74
LEFT_BRACE           : 
LEFT_PAREN           : 68 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 139 150
LEFT_SQUARE          : 14 15 16 23 24 49 86 87 88 132
LESS                 : 55
LESS_EQUAL           : 57
MINUS                : 63 66
MOD                  : 59 124
MUL                  : 61
NEW                  : 92 94 96 98 100 102 149 150
NEWLINE              : 
NEXT                 : 42 43
NOT                  : 52
NOT_EQUAL            : 54
N_DIV                : 62
OF                   : 14 15 16 34 83 84 85 117 118 119 120 121 122 151
OPENFILE             : 128 129 130 131
OR                   : 50
OTHERWISE            : 41
OUTPUT               : 28
PASS                 : 145
PLUS                 : 64 65
POINTER              : 142 143 144
PRIVATE              : 10 11 16 99 100 101 102 113 114 115 116 121 122
PROCEDURE            : 91 92 93 94 95 96 97 98 99 100 101 102
PUBLIC               : 5 7 15 95 96 97 98 109 110 111 112 119 120
PUTRECORD            : 
RANDOM               : 131
READ                 : 128
READFILE             : 132 133
REAL                 : 73
REPEAT               : 44
RETURN               : 127
RETURNS              : 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122
RIGHT_BRACE          : 
RIGHT_PAREN          : 68 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 139 150
RIGHT_SQUARE         : 14 15 16 23 24 49 86 87 88 132
SEEK                 : 136
SEMICOLON            : 37 38
SET                  : 151
STEP                 : 42
STRING               : 72
SUPER                : 
THEN                 : 32 33
TO                   : 39 42 43
TYPE                 : 137 139 144 151
UNTIL                : 44
WHILE                : 45 46
WRITE                : 129
WRITEFILE            : 134
_OUTPUT              : 29
error                : 

Nonterminals, with rules where they appear

array_items          : 23 25
case                 : 35 36
case_expression      : 37
cases                : 34 35
declare_parameter    : 75 76
declare_parameters   : 75 91 92 95 96 99 100 105 106 109 110 113 114 117 119 121
dimension            : 17 18
dimensions           : 14 15 16 17
enumerate_items      : 139 140
expression           : 12 13 19 19 20 20 21 22 25 26 27 30 31 32 33 34 39 39 40 42 42 42 43 43 44 45 46 47 50 50 51 51 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 64 65 65 66 66 67 67 68 89 90 127 128 129 130 131 132 133 134 134 135 136 136 138 138 142 143 146
ids                  : 6 7 8 11
indexes              : 21 49 132
otherwise_statement  : 38
output_expression    : 28 29 30
parameters           : 89 103 123 124 125 150
statement            : 1 2
statements           : 1 32 32 33 37 41 42 43 44 45 46 91 92 93 94 95 96 97 98 99 100 101 102 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 137 147 148 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 2

    (2) statements -> statement .

    DELETE          reduce using rule 2 (statements -> statement .)
    DECLARE         reduce using rule 2 (statements -> statement .)
    PUBLIC          reduce using rule 2 (statements -> statement .)
    PRIVATE         reduce using rule 2 (statements -> statement .)
    CONSTANT        reduce using rule 2 (statements -> statement .)
    INPUT           reduce using rule 2 (statements -> statement .)
    OUTPUT          reduce using rule 2 (statements -> statement .)
    _OUTPUT         reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CASE            reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    REPEAT          reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    PROCEDURE       reduce using rule 2 (statements -> statement .)
    CALL            reduce using rule 2 (statements -> statement .)
    FUNCTION        reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)
    OPENFILE        reduce using rule 2 (statements -> statement .)
    READFILE        reduce using rule 2 (statements -> statement .)
    WRITEFILE       reduce using rule 2 (statements -> statement .)
    CLOSEFILE       reduce using rule 2 (statements -> statement .)
    SEEK            reduce using rule 2 (statements -> statement .)
    TYPE            reduce using rule 2 (statements -> statement .)
    PASS            reduce using rule 2 (statements -> statement .)
    IMPORT          reduce using rule 2 (statements -> statement .)
    CLASS           reduce using rule 2 (statements -> statement .)
    LEFT_SQUARE     reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    NOT             reduce using rule 2 (statements -> statement .)
    MINUS           reduce using rule 2 (statements -> statement .)
    PLUS            reduce using rule 2 (statements -> statement .)
    LEFT_PAREN      reduce using rule 2 (statements -> statement .)
    DATE            reduce using rule 2 (statements -> statement .)
    BOOLEAN         reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    REAL            reduce using rule 2 (statements -> statement .)
    INTEGER         reduce using rule 2 (statements -> statement .)
    MOD             reduce using rule 2 (statements -> statement .)
    DIV             reduce using rule 2 (statements -> statement .)
    POINTER         reduce using rule 2 (statements -> statement .)
    NEW             reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    UNTIL           reduce using rule 2 (statements -> statement .)
    ENDWHILE        reduce using rule 2 (statements -> statement .)
    ENDTYPE         reduce using rule 2 (statements -> statement .)
    ENDCLASS        reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ENDIF           reduce using rule 2 (statements -> statement .)
    ENDPROCEDURE    reduce using rule 2 (statements -> statement .)
    SEMICOLON       reduce using rule 2 (statements -> statement .)
    NEXT            reduce using rule 2 (statements -> statement .)
    ENDFUNCTION     reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> DELETE . ID

    ID              shift and go to state 47


state 4

    (48) expression -> ID .
    (49) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (123) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> ID . LEFT_PAREN RIGHT_PAREN

  ! shift/reduce conflict for LEFT_SQUARE resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    ASSIGN          reduce using rule 48 (expression -> ID .)
    OR              reduce using rule 48 (expression -> ID .)
    AND             reduce using rule 48 (expression -> ID .)
    EQUAL           reduce using rule 48 (expression -> ID .)
    NOT_EQUAL       reduce using rule 48 (expression -> ID .)
    LESS            reduce using rule 48 (expression -> ID .)
    GREATER         reduce using rule 48 (expression -> ID .)
    LESS_EQUAL      reduce using rule 48 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 48 (expression -> ID .)
    MOD             reduce using rule 48 (expression -> ID .)
    DIV             reduce using rule 48 (expression -> ID .)
    MUL             reduce using rule 48 (expression -> ID .)
    N_DIV           reduce using rule 48 (expression -> ID .)
    PLUS            reduce using rule 48 (expression -> ID .)
    MINUS           reduce using rule 48 (expression -> ID .)
    CONNECT         reduce using rule 48 (expression -> ID .)
    DOT             reduce using rule 48 (expression -> ID .)
    POINTER         reduce using rule 48 (expression -> ID .)
    DELETE          reduce using rule 48 (expression -> ID .)
    DECLARE         reduce using rule 48 (expression -> ID .)
    PUBLIC          reduce using rule 48 (expression -> ID .)
    PRIVATE         reduce using rule 48 (expression -> ID .)
    CONSTANT        reduce using rule 48 (expression -> ID .)
    INPUT           reduce using rule 48 (expression -> ID .)
    OUTPUT          reduce using rule 48 (expression -> ID .)
    _OUTPUT         reduce using rule 48 (expression -> ID .)
    IF              reduce using rule 48 (expression -> ID .)
    CASE            reduce using rule 48 (expression -> ID .)
    FOR             reduce using rule 48 (expression -> ID .)
    REPEAT          reduce using rule 48 (expression -> ID .)
    WHILE           reduce using rule 48 (expression -> ID .)
    PROCEDURE       reduce using rule 48 (expression -> ID .)
    CALL            reduce using rule 48 (expression -> ID .)
    FUNCTION        reduce using rule 48 (expression -> ID .)
    RETURN          reduce using rule 48 (expression -> ID .)
    OPENFILE        reduce using rule 48 (expression -> ID .)
    READFILE        reduce using rule 48 (expression -> ID .)
    WRITEFILE       reduce using rule 48 (expression -> ID .)
    CLOSEFILE       reduce using rule 48 (expression -> ID .)
    SEEK            reduce using rule 48 (expression -> ID .)
    TYPE            reduce using rule 48 (expression -> ID .)
    PASS            reduce using rule 48 (expression -> ID .)
    IMPORT          reduce using rule 48 (expression -> ID .)
    CLASS           reduce using rule 48 (expression -> ID .)
    ID              reduce using rule 48 (expression -> ID .)
    NOT             reduce using rule 48 (expression -> ID .)
    DATE            reduce using rule 48 (expression -> ID .)
    BOOLEAN         reduce using rule 48 (expression -> ID .)
    CHAR            reduce using rule 48 (expression -> ID .)
    STRING          reduce using rule 48 (expression -> ID .)
    REAL            reduce using rule 48 (expression -> ID .)
    INTEGER         reduce using rule 48 (expression -> ID .)
    NEW             reduce using rule 48 (expression -> ID .)
    $end            reduce using rule 48 (expression -> ID .)
    RIGHT_SQUARE    reduce using rule 48 (expression -> ID .)
    COMMA           reduce using rule 48 (expression -> ID .)
    UNTIL           reduce using rule 48 (expression -> ID .)
    ENDWHILE        reduce using rule 48 (expression -> ID .)
    ENDTYPE         reduce using rule 48 (expression -> ID .)
    ENDCLASS        reduce using rule 48 (expression -> ID .)
    ELSE            reduce using rule 48 (expression -> ID .)
    ENDIF           reduce using rule 48 (expression -> ID .)
    ENDPROCEDURE    reduce using rule 48 (expression -> ID .)
    SEMICOLON       reduce using rule 48 (expression -> ID .)
    NEXT            reduce using rule 48 (expression -> ID .)
    ENDFUNCTION     reduce using rule 48 (expression -> ID .)
    THEN            reduce using rule 48 (expression -> ID .)
    DO              reduce using rule 48 (expression -> ID .)
    RIGHT_PAREN     reduce using rule 48 (expression -> ID .)
    OTHERWISE       reduce using rule 48 (expression -> ID .)
    TO              reduce using rule 48 (expression -> ID .)
    COLON           reduce using rule 48 (expression -> ID .)
    STEP            reduce using rule 48 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 48
    LEFT_PAREN      shift and go to state 49

  ! LEFT_SQUARE     [ reduce using rule 48 (expression -> ID .) ]
  ! LEFT_PAREN      [ reduce using rule 48 (expression -> ID .) ]


state 5

    (4) statement -> DECLARE . ID COLON ID
    (6) statement -> DECLARE . ids COLON ID
    (14) statement -> DECLARE . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (8) ids -> . ids COMMA ID
    (9) ids -> . ID

    ID              shift and go to state 50

    ids                            shift and go to state 51

state 6

    (5) statement -> PUBLIC . ID COLON ID
    (7) statement -> PUBLIC . ids COLON ID
    (15) statement -> PUBLIC . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (95) statement -> PUBLIC . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> PUBLIC . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> PUBLIC . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> PUBLIC . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (109) statement -> PUBLIC . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> PUBLIC . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> PUBLIC . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> PUBLIC . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (119) statement -> PUBLIC . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> PUBLIC . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (8) ids -> . ids COMMA ID
    (9) ids -> . ID

    ID              shift and go to state 52
    PROCEDURE       shift and go to state 54
    FUNCTION        shift and go to state 55

    ids                            shift and go to state 53

state 7

    (10) statement -> PRIVATE . ID COLON ID
    (11) statement -> PRIVATE . ids COLON ID
    (16) statement -> PRIVATE . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (99) statement -> PRIVATE . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> PRIVATE . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> PRIVATE . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> PRIVATE . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (113) statement -> PRIVATE . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> PRIVATE . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> PRIVATE . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> PRIVATE . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (121) statement -> PRIVATE . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> PRIVATE . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (8) ids -> . ids COMMA ID
    (9) ids -> . ID

    ID              shift and go to state 56
    PROCEDURE       shift and go to state 58
    FUNCTION        shift and go to state 59

    ids                            shift and go to state 57

state 8

    (12) statement -> CONSTANT . ID EQUAL expression
    (13) statement -> CONSTANT . ID ASSIGN expression

    ID              shift and go to state 60


state 9

    (20) statement -> expression . ASSIGN expression
    (47) statement -> expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    ASSIGN          shift and go to state 61
    DELETE          reduce using rule 47 (statement -> expression .)
    DECLARE         reduce using rule 47 (statement -> expression .)
    PUBLIC          reduce using rule 47 (statement -> expression .)
    PRIVATE         reduce using rule 47 (statement -> expression .)
    CONSTANT        reduce using rule 47 (statement -> expression .)
    INPUT           reduce using rule 47 (statement -> expression .)
    OUTPUT          reduce using rule 47 (statement -> expression .)
    _OUTPUT         reduce using rule 47 (statement -> expression .)
    IF              reduce using rule 47 (statement -> expression .)
    CASE            reduce using rule 47 (statement -> expression .)
    FOR             reduce using rule 47 (statement -> expression .)
    REPEAT          reduce using rule 47 (statement -> expression .)
    WHILE           reduce using rule 47 (statement -> expression .)
    PROCEDURE       reduce using rule 47 (statement -> expression .)
    CALL            reduce using rule 47 (statement -> expression .)
    FUNCTION        reduce using rule 47 (statement -> expression .)
    RETURN          reduce using rule 47 (statement -> expression .)
    OPENFILE        reduce using rule 47 (statement -> expression .)
    READFILE        reduce using rule 47 (statement -> expression .)
    WRITEFILE       reduce using rule 47 (statement -> expression .)
    CLOSEFILE       reduce using rule 47 (statement -> expression .)
    SEEK            reduce using rule 47 (statement -> expression .)
    TYPE            reduce using rule 47 (statement -> expression .)
    PASS            reduce using rule 47 (statement -> expression .)
    IMPORT          reduce using rule 47 (statement -> expression .)
    CLASS           reduce using rule 47 (statement -> expression .)
    LEFT_SQUARE     reduce using rule 47 (statement -> expression .)
    ID              reduce using rule 47 (statement -> expression .)
    NOT             reduce using rule 47 (statement -> expression .)
    LEFT_PAREN      reduce using rule 47 (statement -> expression .)
    DATE            reduce using rule 47 (statement -> expression .)
    BOOLEAN         reduce using rule 47 (statement -> expression .)
    CHAR            reduce using rule 47 (statement -> expression .)
    STRING          reduce using rule 47 (statement -> expression .)
    REAL            reduce using rule 47 (statement -> expression .)
    INTEGER         reduce using rule 47 (statement -> expression .)
    NEW             reduce using rule 47 (statement -> expression .)
    $end            reduce using rule 47 (statement -> expression .)
    UNTIL           reduce using rule 47 (statement -> expression .)
    ENDWHILE        reduce using rule 47 (statement -> expression .)
    ENDTYPE         reduce using rule 47 (statement -> expression .)
    ENDCLASS        reduce using rule 47 (statement -> expression .)
    ELSE            reduce using rule 47 (statement -> expression .)
    ENDIF           reduce using rule 47 (statement -> expression .)
    ENDPROCEDURE    reduce using rule 47 (statement -> expression .)
    SEMICOLON       reduce using rule 47 (statement -> expression .)
    NEXT            reduce using rule 47 (statement -> expression .)
    ENDFUNCTION     reduce using rule 47 (statement -> expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 47 (statement -> expression .) ]
  ! PLUS            [ reduce using rule 47 (statement -> expression .) ]
  ! MOD             [ reduce using rule 47 (statement -> expression .) ]
  ! DIV             [ reduce using rule 47 (statement -> expression .) ]
  ! POINTER         [ reduce using rule 47 (statement -> expression .) ]


state 10

    (23) expression -> LEFT_SQUARE . array_items RIGHT_SQUARE
    (24) expression -> LEFT_SQUARE . RIGHT_SQUARE
    (25) array_items -> . array_items COMMA expression
    (26) array_items -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    RIGHT_SQUARE    shift and go to state 80
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    array_items                    shift and go to state 79
    expression                     shift and go to state 81

state 11

    (27) statement -> INPUT . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 82

state 12

    (28) statement -> OUTPUT . output_expression
    (30) output_expression -> . output_expression COMMA expression
    (31) output_expression -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    output_expression              shift and go to state 83
    expression                     shift and go to state 84

state 13

    (29) statement -> _OUTPUT . output_expression
    (30) output_expression -> . output_expression COMMA expression
    (31) output_expression -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    output_expression              shift and go to state 85
    expression                     shift and go to state 84

state 14

    (32) statement -> IF . expression THEN statements ELSE statements ENDIF
    (33) statement -> IF . expression THEN statements ENDIF
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 86

state 15

    (34) statement -> CASE . OF expression cases ENDCASE

    OF              shift and go to state 87


state 16

    (42) statement -> FOR . ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> FOR . ID ASSIGN expression TO expression statements NEXT ID

    ID              shift and go to state 88


state 17

    (44) statement -> REPEAT . statements UNTIL expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 89
    expression                     shift and go to state 9
    statement                      shift and go to state 2

state 18

    (45) statement -> WHILE . expression DO statements ENDWHILE
    (46) statement -> WHILE . expression statements ENDWHILE
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 90

state 19

    (91) statement -> PROCEDURE . ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> PROCEDURE . NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> PROCEDURE . ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> PROCEDURE . NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    ID              shift and go to state 91
    NEW             shift and go to state 92


state 20

    (68) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 93

state 21

    (149) expression -> NEW . ID
    (150) expression -> NEW . ID LEFT_PAREN parameters RIGHT_PAREN

    ID              shift and go to state 94


state 22

    (103) statement -> CALL . ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> CALL . ID LEFT_PAREN RIGHT_PAREN

    ID              shift and go to state 95


state 23

    (105) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 96


state 24

    (127) statement -> RETURN . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 97

state 25

    (128) statement -> OPENFILE . expression FOR READ
    (129) statement -> OPENFILE . expression FOR WRITE
    (130) statement -> OPENFILE . expression FOR APPEND
    (131) statement -> OPENFILE . expression FOR RANDOM
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 98

state 26

    (132) statement -> READFILE . expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> READFILE . expression COMMA ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 99

state 27

    (134) statement -> WRITEFILE . expression COMMA expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 100

state 28

    (135) statement -> CLOSEFILE . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 101

state 29

    (136) statement -> SEEK . expression COMMA expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 102

state 30

    (137) statement -> TYPE . ID statements ENDTYPE
    (139) statement -> TYPE . ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> TYPE . ID EQUAL POINTER ID
    (151) statement -> TYPE . ID EQUAL SET OF ID

    ID              shift and go to state 103


state 31

    (142) expression -> POINTER . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 104

state 32

    (145) statement -> PASS .

    DELETE          reduce using rule 145 (statement -> PASS .)
    DECLARE         reduce using rule 145 (statement -> PASS .)
    PUBLIC          reduce using rule 145 (statement -> PASS .)
    PRIVATE         reduce using rule 145 (statement -> PASS .)
    CONSTANT        reduce using rule 145 (statement -> PASS .)
    INPUT           reduce using rule 145 (statement -> PASS .)
    OUTPUT          reduce using rule 145 (statement -> PASS .)
    _OUTPUT         reduce using rule 145 (statement -> PASS .)
    IF              reduce using rule 145 (statement -> PASS .)
    CASE            reduce using rule 145 (statement -> PASS .)
    FOR             reduce using rule 145 (statement -> PASS .)
    REPEAT          reduce using rule 145 (statement -> PASS .)
    WHILE           reduce using rule 145 (statement -> PASS .)
    PROCEDURE       reduce using rule 145 (statement -> PASS .)
    CALL            reduce using rule 145 (statement -> PASS .)
    FUNCTION        reduce using rule 145 (statement -> PASS .)
    RETURN          reduce using rule 145 (statement -> PASS .)
    OPENFILE        reduce using rule 145 (statement -> PASS .)
    READFILE        reduce using rule 145 (statement -> PASS .)
    WRITEFILE       reduce using rule 145 (statement -> PASS .)
    CLOSEFILE       reduce using rule 145 (statement -> PASS .)
    SEEK            reduce using rule 145 (statement -> PASS .)
    TYPE            reduce using rule 145 (statement -> PASS .)
    PASS            reduce using rule 145 (statement -> PASS .)
    IMPORT          reduce using rule 145 (statement -> PASS .)
    CLASS           reduce using rule 145 (statement -> PASS .)
    LEFT_SQUARE     reduce using rule 145 (statement -> PASS .)
    ID              reduce using rule 145 (statement -> PASS .)
    NOT             reduce using rule 145 (statement -> PASS .)
    MINUS           reduce using rule 145 (statement -> PASS .)
    PLUS            reduce using rule 145 (statement -> PASS .)
    LEFT_PAREN      reduce using rule 145 (statement -> PASS .)
    DATE            reduce using rule 145 (statement -> PASS .)
    BOOLEAN         reduce using rule 145 (statement -> PASS .)
    CHAR            reduce using rule 145 (statement -> PASS .)
    STRING          reduce using rule 145 (statement -> PASS .)
    REAL            reduce using rule 145 (statement -> PASS .)
    INTEGER         reduce using rule 145 (statement -> PASS .)
    MOD             reduce using rule 145 (statement -> PASS .)
    DIV             reduce using rule 145 (statement -> PASS .)
    POINTER         reduce using rule 145 (statement -> PASS .)
    NEW             reduce using rule 145 (statement -> PASS .)
    $end            reduce using rule 145 (statement -> PASS .)
    UNTIL           reduce using rule 145 (statement -> PASS .)
    ENDWHILE        reduce using rule 145 (statement -> PASS .)
    ENDTYPE         reduce using rule 145 (statement -> PASS .)
    ENDCLASS        reduce using rule 145 (statement -> PASS .)
    ELSE            reduce using rule 145 (statement -> PASS .)
    ENDIF           reduce using rule 145 (statement -> PASS .)
    ENDPROCEDURE    reduce using rule 145 (statement -> PASS .)
    SEMICOLON       reduce using rule 145 (statement -> PASS .)
    NEXT            reduce using rule 145 (statement -> PASS .)
    ENDFUNCTION     reduce using rule 145 (statement -> PASS .)


state 33

    (146) statement -> IMPORT . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 105

state 34

    (147) statement -> CLASS . ID statements ENDCLASS
    (148) statement -> CLASS . ID INHERITS ID statements ENDCLASS

    ID              shift and go to state 106


state 35

    (52) expression -> NOT . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 107

state 36

    (124) expression -> MOD . LEFT_PAREN parameters RIGHT_PAREN

    LEFT_PAREN      shift and go to state 108


state 37

    (125) expression -> DIV . LEFT_PAREN parameters RIGHT_PAREN

    LEFT_PAREN      shift and go to state 109


state 38

    (63) expression -> MINUS . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 110

state 39

    (64) expression -> PLUS . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 111

state 40

    (69) expression -> DATE .

    ASSIGN          reduce using rule 69 (expression -> DATE .)
    OR              reduce using rule 69 (expression -> DATE .)
    AND             reduce using rule 69 (expression -> DATE .)
    EQUAL           reduce using rule 69 (expression -> DATE .)
    NOT_EQUAL       reduce using rule 69 (expression -> DATE .)
    LESS            reduce using rule 69 (expression -> DATE .)
    GREATER         reduce using rule 69 (expression -> DATE .)
    LESS_EQUAL      reduce using rule 69 (expression -> DATE .)
    GREATER_EQUAL   reduce using rule 69 (expression -> DATE .)
    MOD             reduce using rule 69 (expression -> DATE .)
    DIV             reduce using rule 69 (expression -> DATE .)
    MUL             reduce using rule 69 (expression -> DATE .)
    N_DIV           reduce using rule 69 (expression -> DATE .)
    PLUS            reduce using rule 69 (expression -> DATE .)
    MINUS           reduce using rule 69 (expression -> DATE .)
    CONNECT         reduce using rule 69 (expression -> DATE .)
    DOT             reduce using rule 69 (expression -> DATE .)
    POINTER         reduce using rule 69 (expression -> DATE .)
    DELETE          reduce using rule 69 (expression -> DATE .)
    DECLARE         reduce using rule 69 (expression -> DATE .)
    PUBLIC          reduce using rule 69 (expression -> DATE .)
    PRIVATE         reduce using rule 69 (expression -> DATE .)
    CONSTANT        reduce using rule 69 (expression -> DATE .)
    INPUT           reduce using rule 69 (expression -> DATE .)
    OUTPUT          reduce using rule 69 (expression -> DATE .)
    _OUTPUT         reduce using rule 69 (expression -> DATE .)
    IF              reduce using rule 69 (expression -> DATE .)
    CASE            reduce using rule 69 (expression -> DATE .)
    FOR             reduce using rule 69 (expression -> DATE .)
    REPEAT          reduce using rule 69 (expression -> DATE .)
    WHILE           reduce using rule 69 (expression -> DATE .)
    PROCEDURE       reduce using rule 69 (expression -> DATE .)
    CALL            reduce using rule 69 (expression -> DATE .)
    FUNCTION        reduce using rule 69 (expression -> DATE .)
    RETURN          reduce using rule 69 (expression -> DATE .)
    OPENFILE        reduce using rule 69 (expression -> DATE .)
    READFILE        reduce using rule 69 (expression -> DATE .)
    WRITEFILE       reduce using rule 69 (expression -> DATE .)
    CLOSEFILE       reduce using rule 69 (expression -> DATE .)
    SEEK            reduce using rule 69 (expression -> DATE .)
    TYPE            reduce using rule 69 (expression -> DATE .)
    PASS            reduce using rule 69 (expression -> DATE .)
    IMPORT          reduce using rule 69 (expression -> DATE .)
    CLASS           reduce using rule 69 (expression -> DATE .)
    LEFT_SQUARE     reduce using rule 69 (expression -> DATE .)
    ID              reduce using rule 69 (expression -> DATE .)
    NOT             reduce using rule 69 (expression -> DATE .)
    LEFT_PAREN      reduce using rule 69 (expression -> DATE .)
    DATE            reduce using rule 69 (expression -> DATE .)
    BOOLEAN         reduce using rule 69 (expression -> DATE .)
    CHAR            reduce using rule 69 (expression -> DATE .)
    STRING          reduce using rule 69 (expression -> DATE .)
    REAL            reduce using rule 69 (expression -> DATE .)
    INTEGER         reduce using rule 69 (expression -> DATE .)
    NEW             reduce using rule 69 (expression -> DATE .)
    $end            reduce using rule 69 (expression -> DATE .)
    RIGHT_SQUARE    reduce using rule 69 (expression -> DATE .)
    COMMA           reduce using rule 69 (expression -> DATE .)
    UNTIL           reduce using rule 69 (expression -> DATE .)
    ENDWHILE        reduce using rule 69 (expression -> DATE .)
    ENDTYPE         reduce using rule 69 (expression -> DATE .)
    ENDCLASS        reduce using rule 69 (expression -> DATE .)
    ELSE            reduce using rule 69 (expression -> DATE .)
    ENDIF           reduce using rule 69 (expression -> DATE .)
    ENDPROCEDURE    reduce using rule 69 (expression -> DATE .)
    SEMICOLON       reduce using rule 69 (expression -> DATE .)
    NEXT            reduce using rule 69 (expression -> DATE .)
    ENDFUNCTION     reduce using rule 69 (expression -> DATE .)
    THEN            reduce using rule 69 (expression -> DATE .)
    DO              reduce using rule 69 (expression -> DATE .)
    RIGHT_PAREN     reduce using rule 69 (expression -> DATE .)
    OTHERWISE       reduce using rule 69 (expression -> DATE .)
    TO              reduce using rule 69 (expression -> DATE .)
    COLON           reduce using rule 69 (expression -> DATE .)
    STEP            reduce using rule 69 (expression -> DATE .)


state 41

    (70) expression -> BOOLEAN .

    ASSIGN          reduce using rule 70 (expression -> BOOLEAN .)
    OR              reduce using rule 70 (expression -> BOOLEAN .)
    AND             reduce using rule 70 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 70 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 70 (expression -> BOOLEAN .)
    LESS            reduce using rule 70 (expression -> BOOLEAN .)
    GREATER         reduce using rule 70 (expression -> BOOLEAN .)
    LESS_EQUAL      reduce using rule 70 (expression -> BOOLEAN .)
    GREATER_EQUAL   reduce using rule 70 (expression -> BOOLEAN .)
    MOD             reduce using rule 70 (expression -> BOOLEAN .)
    DIV             reduce using rule 70 (expression -> BOOLEAN .)
    MUL             reduce using rule 70 (expression -> BOOLEAN .)
    N_DIV           reduce using rule 70 (expression -> BOOLEAN .)
    PLUS            reduce using rule 70 (expression -> BOOLEAN .)
    MINUS           reduce using rule 70 (expression -> BOOLEAN .)
    CONNECT         reduce using rule 70 (expression -> BOOLEAN .)
    DOT             reduce using rule 70 (expression -> BOOLEAN .)
    POINTER         reduce using rule 70 (expression -> BOOLEAN .)
    DELETE          reduce using rule 70 (expression -> BOOLEAN .)
    DECLARE         reduce using rule 70 (expression -> BOOLEAN .)
    PUBLIC          reduce using rule 70 (expression -> BOOLEAN .)
    PRIVATE         reduce using rule 70 (expression -> BOOLEAN .)
    CONSTANT        reduce using rule 70 (expression -> BOOLEAN .)
    INPUT           reduce using rule 70 (expression -> BOOLEAN .)
    OUTPUT          reduce using rule 70 (expression -> BOOLEAN .)
    _OUTPUT         reduce using rule 70 (expression -> BOOLEAN .)
    IF              reduce using rule 70 (expression -> BOOLEAN .)
    CASE            reduce using rule 70 (expression -> BOOLEAN .)
    FOR             reduce using rule 70 (expression -> BOOLEAN .)
    REPEAT          reduce using rule 70 (expression -> BOOLEAN .)
    WHILE           reduce using rule 70 (expression -> BOOLEAN .)
    PROCEDURE       reduce using rule 70 (expression -> BOOLEAN .)
    CALL            reduce using rule 70 (expression -> BOOLEAN .)
    FUNCTION        reduce using rule 70 (expression -> BOOLEAN .)
    RETURN          reduce using rule 70 (expression -> BOOLEAN .)
    OPENFILE        reduce using rule 70 (expression -> BOOLEAN .)
    READFILE        reduce using rule 70 (expression -> BOOLEAN .)
    WRITEFILE       reduce using rule 70 (expression -> BOOLEAN .)
    CLOSEFILE       reduce using rule 70 (expression -> BOOLEAN .)
    SEEK            reduce using rule 70 (expression -> BOOLEAN .)
    TYPE            reduce using rule 70 (expression -> BOOLEAN .)
    PASS            reduce using rule 70 (expression -> BOOLEAN .)
    IMPORT          reduce using rule 70 (expression -> BOOLEAN .)
    CLASS           reduce using rule 70 (expression -> BOOLEAN .)
    LEFT_SQUARE     reduce using rule 70 (expression -> BOOLEAN .)
    ID              reduce using rule 70 (expression -> BOOLEAN .)
    NOT             reduce using rule 70 (expression -> BOOLEAN .)
    LEFT_PAREN      reduce using rule 70 (expression -> BOOLEAN .)
    DATE            reduce using rule 70 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 70 (expression -> BOOLEAN .)
    CHAR            reduce using rule 70 (expression -> BOOLEAN .)
    STRING          reduce using rule 70 (expression -> BOOLEAN .)
    REAL            reduce using rule 70 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 70 (expression -> BOOLEAN .)
    NEW             reduce using rule 70 (expression -> BOOLEAN .)
    $end            reduce using rule 70 (expression -> BOOLEAN .)
    RIGHT_SQUARE    reduce using rule 70 (expression -> BOOLEAN .)
    COMMA           reduce using rule 70 (expression -> BOOLEAN .)
    UNTIL           reduce using rule 70 (expression -> BOOLEAN .)
    ENDWHILE        reduce using rule 70 (expression -> BOOLEAN .)
    ENDTYPE         reduce using rule 70 (expression -> BOOLEAN .)
    ENDCLASS        reduce using rule 70 (expression -> BOOLEAN .)
    ELSE            reduce using rule 70 (expression -> BOOLEAN .)
    ENDIF           reduce using rule 70 (expression -> BOOLEAN .)
    ENDPROCEDURE    reduce using rule 70 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 70 (expression -> BOOLEAN .)
    NEXT            reduce using rule 70 (expression -> BOOLEAN .)
    ENDFUNCTION     reduce using rule 70 (expression -> BOOLEAN .)
    THEN            reduce using rule 70 (expression -> BOOLEAN .)
    DO              reduce using rule 70 (expression -> BOOLEAN .)
    RIGHT_PAREN     reduce using rule 70 (expression -> BOOLEAN .)
    OTHERWISE       reduce using rule 70 (expression -> BOOLEAN .)
    TO              reduce using rule 70 (expression -> BOOLEAN .)
    COLON           reduce using rule 70 (expression -> BOOLEAN .)
    STEP            reduce using rule 70 (expression -> BOOLEAN .)


state 42

    (71) expression -> CHAR .

    ASSIGN          reduce using rule 71 (expression -> CHAR .)
    OR              reduce using rule 71 (expression -> CHAR .)
    AND             reduce using rule 71 (expression -> CHAR .)
    EQUAL           reduce using rule 71 (expression -> CHAR .)
    NOT_EQUAL       reduce using rule 71 (expression -> CHAR .)
    LESS            reduce using rule 71 (expression -> CHAR .)
    GREATER         reduce using rule 71 (expression -> CHAR .)
    LESS_EQUAL      reduce using rule 71 (expression -> CHAR .)
    GREATER_EQUAL   reduce using rule 71 (expression -> CHAR .)
    MOD             reduce using rule 71 (expression -> CHAR .)
    DIV             reduce using rule 71 (expression -> CHAR .)
    MUL             reduce using rule 71 (expression -> CHAR .)
    N_DIV           reduce using rule 71 (expression -> CHAR .)
    PLUS            reduce using rule 71 (expression -> CHAR .)
    MINUS           reduce using rule 71 (expression -> CHAR .)
    CONNECT         reduce using rule 71 (expression -> CHAR .)
    DOT             reduce using rule 71 (expression -> CHAR .)
    POINTER         reduce using rule 71 (expression -> CHAR .)
    DELETE          reduce using rule 71 (expression -> CHAR .)
    DECLARE         reduce using rule 71 (expression -> CHAR .)
    PUBLIC          reduce using rule 71 (expression -> CHAR .)
    PRIVATE         reduce using rule 71 (expression -> CHAR .)
    CONSTANT        reduce using rule 71 (expression -> CHAR .)
    INPUT           reduce using rule 71 (expression -> CHAR .)
    OUTPUT          reduce using rule 71 (expression -> CHAR .)
    _OUTPUT         reduce using rule 71 (expression -> CHAR .)
    IF              reduce using rule 71 (expression -> CHAR .)
    CASE            reduce using rule 71 (expression -> CHAR .)
    FOR             reduce using rule 71 (expression -> CHAR .)
    REPEAT          reduce using rule 71 (expression -> CHAR .)
    WHILE           reduce using rule 71 (expression -> CHAR .)
    PROCEDURE       reduce using rule 71 (expression -> CHAR .)
    CALL            reduce using rule 71 (expression -> CHAR .)
    FUNCTION        reduce using rule 71 (expression -> CHAR .)
    RETURN          reduce using rule 71 (expression -> CHAR .)
    OPENFILE        reduce using rule 71 (expression -> CHAR .)
    READFILE        reduce using rule 71 (expression -> CHAR .)
    WRITEFILE       reduce using rule 71 (expression -> CHAR .)
    CLOSEFILE       reduce using rule 71 (expression -> CHAR .)
    SEEK            reduce using rule 71 (expression -> CHAR .)
    TYPE            reduce using rule 71 (expression -> CHAR .)
    PASS            reduce using rule 71 (expression -> CHAR .)
    IMPORT          reduce using rule 71 (expression -> CHAR .)
    CLASS           reduce using rule 71 (expression -> CHAR .)
    LEFT_SQUARE     reduce using rule 71 (expression -> CHAR .)
    ID              reduce using rule 71 (expression -> CHAR .)
    NOT             reduce using rule 71 (expression -> CHAR .)
    LEFT_PAREN      reduce using rule 71 (expression -> CHAR .)
    DATE            reduce using rule 71 (expression -> CHAR .)
    BOOLEAN         reduce using rule 71 (expression -> CHAR .)
    CHAR            reduce using rule 71 (expression -> CHAR .)
    STRING          reduce using rule 71 (expression -> CHAR .)
    REAL            reduce using rule 71 (expression -> CHAR .)
    INTEGER         reduce using rule 71 (expression -> CHAR .)
    NEW             reduce using rule 71 (expression -> CHAR .)
    $end            reduce using rule 71 (expression -> CHAR .)
    RIGHT_SQUARE    reduce using rule 71 (expression -> CHAR .)
    COMMA           reduce using rule 71 (expression -> CHAR .)
    UNTIL           reduce using rule 71 (expression -> CHAR .)
    ENDWHILE        reduce using rule 71 (expression -> CHAR .)
    ENDTYPE         reduce using rule 71 (expression -> CHAR .)
    ENDCLASS        reduce using rule 71 (expression -> CHAR .)
    ELSE            reduce using rule 71 (expression -> CHAR .)
    ENDIF           reduce using rule 71 (expression -> CHAR .)
    ENDPROCEDURE    reduce using rule 71 (expression -> CHAR .)
    SEMICOLON       reduce using rule 71 (expression -> CHAR .)
    NEXT            reduce using rule 71 (expression -> CHAR .)
    ENDFUNCTION     reduce using rule 71 (expression -> CHAR .)
    THEN            reduce using rule 71 (expression -> CHAR .)
    DO              reduce using rule 71 (expression -> CHAR .)
    RIGHT_PAREN     reduce using rule 71 (expression -> CHAR .)
    OTHERWISE       reduce using rule 71 (expression -> CHAR .)
    TO              reduce using rule 71 (expression -> CHAR .)
    COLON           reduce using rule 71 (expression -> CHAR .)
    STEP            reduce using rule 71 (expression -> CHAR .)


state 43

    (72) expression -> STRING .

    ASSIGN          reduce using rule 72 (expression -> STRING .)
    OR              reduce using rule 72 (expression -> STRING .)
    AND             reduce using rule 72 (expression -> STRING .)
    EQUAL           reduce using rule 72 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 72 (expression -> STRING .)
    LESS            reduce using rule 72 (expression -> STRING .)
    GREATER         reduce using rule 72 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 72 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 72 (expression -> STRING .)
    MOD             reduce using rule 72 (expression -> STRING .)
    DIV             reduce using rule 72 (expression -> STRING .)
    MUL             reduce using rule 72 (expression -> STRING .)
    N_DIV           reduce using rule 72 (expression -> STRING .)
    PLUS            reduce using rule 72 (expression -> STRING .)
    MINUS           reduce using rule 72 (expression -> STRING .)
    CONNECT         reduce using rule 72 (expression -> STRING .)
    DOT             reduce using rule 72 (expression -> STRING .)
    POINTER         reduce using rule 72 (expression -> STRING .)
    DELETE          reduce using rule 72 (expression -> STRING .)
    DECLARE         reduce using rule 72 (expression -> STRING .)
    PUBLIC          reduce using rule 72 (expression -> STRING .)
    PRIVATE         reduce using rule 72 (expression -> STRING .)
    CONSTANT        reduce using rule 72 (expression -> STRING .)
    INPUT           reduce using rule 72 (expression -> STRING .)
    OUTPUT          reduce using rule 72 (expression -> STRING .)
    _OUTPUT         reduce using rule 72 (expression -> STRING .)
    IF              reduce using rule 72 (expression -> STRING .)
    CASE            reduce using rule 72 (expression -> STRING .)
    FOR             reduce using rule 72 (expression -> STRING .)
    REPEAT          reduce using rule 72 (expression -> STRING .)
    WHILE           reduce using rule 72 (expression -> STRING .)
    PROCEDURE       reduce using rule 72 (expression -> STRING .)
    CALL            reduce using rule 72 (expression -> STRING .)
    FUNCTION        reduce using rule 72 (expression -> STRING .)
    RETURN          reduce using rule 72 (expression -> STRING .)
    OPENFILE        reduce using rule 72 (expression -> STRING .)
    READFILE        reduce using rule 72 (expression -> STRING .)
    WRITEFILE       reduce using rule 72 (expression -> STRING .)
    CLOSEFILE       reduce using rule 72 (expression -> STRING .)
    SEEK            reduce using rule 72 (expression -> STRING .)
    TYPE            reduce using rule 72 (expression -> STRING .)
    PASS            reduce using rule 72 (expression -> STRING .)
    IMPORT          reduce using rule 72 (expression -> STRING .)
    CLASS           reduce using rule 72 (expression -> STRING .)
    LEFT_SQUARE     reduce using rule 72 (expression -> STRING .)
    ID              reduce using rule 72 (expression -> STRING .)
    NOT             reduce using rule 72 (expression -> STRING .)
    LEFT_PAREN      reduce using rule 72 (expression -> STRING .)
    DATE            reduce using rule 72 (expression -> STRING .)
    BOOLEAN         reduce using rule 72 (expression -> STRING .)
    CHAR            reduce using rule 72 (expression -> STRING .)
    STRING          reduce using rule 72 (expression -> STRING .)
    REAL            reduce using rule 72 (expression -> STRING .)
    INTEGER         reduce using rule 72 (expression -> STRING .)
    NEW             reduce using rule 72 (expression -> STRING .)
    $end            reduce using rule 72 (expression -> STRING .)
    RIGHT_SQUARE    reduce using rule 72 (expression -> STRING .)
    COMMA           reduce using rule 72 (expression -> STRING .)
    UNTIL           reduce using rule 72 (expression -> STRING .)
    ENDWHILE        reduce using rule 72 (expression -> STRING .)
    ENDTYPE         reduce using rule 72 (expression -> STRING .)
    ENDCLASS        reduce using rule 72 (expression -> STRING .)
    ELSE            reduce using rule 72 (expression -> STRING .)
    ENDIF           reduce using rule 72 (expression -> STRING .)
    ENDPROCEDURE    reduce using rule 72 (expression -> STRING .)
    SEMICOLON       reduce using rule 72 (expression -> STRING .)
    NEXT            reduce using rule 72 (expression -> STRING .)
    ENDFUNCTION     reduce using rule 72 (expression -> STRING .)
    THEN            reduce using rule 72 (expression -> STRING .)
    DO              reduce using rule 72 (expression -> STRING .)
    RIGHT_PAREN     reduce using rule 72 (expression -> STRING .)
    OTHERWISE       reduce using rule 72 (expression -> STRING .)
    TO              reduce using rule 72 (expression -> STRING .)
    COLON           reduce using rule 72 (expression -> STRING .)
    STEP            reduce using rule 72 (expression -> STRING .)


state 44

    (73) expression -> REAL .

    ASSIGN          reduce using rule 73 (expression -> REAL .)
    OR              reduce using rule 73 (expression -> REAL .)
    AND             reduce using rule 73 (expression -> REAL .)
    EQUAL           reduce using rule 73 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 73 (expression -> REAL .)
    LESS            reduce using rule 73 (expression -> REAL .)
    GREATER         reduce using rule 73 (expression -> REAL .)
    LESS_EQUAL      reduce using rule 73 (expression -> REAL .)
    GREATER_EQUAL   reduce using rule 73 (expression -> REAL .)
    MOD             reduce using rule 73 (expression -> REAL .)
    DIV             reduce using rule 73 (expression -> REAL .)
    MUL             reduce using rule 73 (expression -> REAL .)
    N_DIV           reduce using rule 73 (expression -> REAL .)
    PLUS            reduce using rule 73 (expression -> REAL .)
    MINUS           reduce using rule 73 (expression -> REAL .)
    CONNECT         reduce using rule 73 (expression -> REAL .)
    DOT             reduce using rule 73 (expression -> REAL .)
    POINTER         reduce using rule 73 (expression -> REAL .)
    DELETE          reduce using rule 73 (expression -> REAL .)
    DECLARE         reduce using rule 73 (expression -> REAL .)
    PUBLIC          reduce using rule 73 (expression -> REAL .)
    PRIVATE         reduce using rule 73 (expression -> REAL .)
    CONSTANT        reduce using rule 73 (expression -> REAL .)
    INPUT           reduce using rule 73 (expression -> REAL .)
    OUTPUT          reduce using rule 73 (expression -> REAL .)
    _OUTPUT         reduce using rule 73 (expression -> REAL .)
    IF              reduce using rule 73 (expression -> REAL .)
    CASE            reduce using rule 73 (expression -> REAL .)
    FOR             reduce using rule 73 (expression -> REAL .)
    REPEAT          reduce using rule 73 (expression -> REAL .)
    WHILE           reduce using rule 73 (expression -> REAL .)
    PROCEDURE       reduce using rule 73 (expression -> REAL .)
    CALL            reduce using rule 73 (expression -> REAL .)
    FUNCTION        reduce using rule 73 (expression -> REAL .)
    RETURN          reduce using rule 73 (expression -> REAL .)
    OPENFILE        reduce using rule 73 (expression -> REAL .)
    READFILE        reduce using rule 73 (expression -> REAL .)
    WRITEFILE       reduce using rule 73 (expression -> REAL .)
    CLOSEFILE       reduce using rule 73 (expression -> REAL .)
    SEEK            reduce using rule 73 (expression -> REAL .)
    TYPE            reduce using rule 73 (expression -> REAL .)
    PASS            reduce using rule 73 (expression -> REAL .)
    IMPORT          reduce using rule 73 (expression -> REAL .)
    CLASS           reduce using rule 73 (expression -> REAL .)
    LEFT_SQUARE     reduce using rule 73 (expression -> REAL .)
    ID              reduce using rule 73 (expression -> REAL .)
    NOT             reduce using rule 73 (expression -> REAL .)
    LEFT_PAREN      reduce using rule 73 (expression -> REAL .)
    DATE            reduce using rule 73 (expression -> REAL .)
    BOOLEAN         reduce using rule 73 (expression -> REAL .)
    CHAR            reduce using rule 73 (expression -> REAL .)
    STRING          reduce using rule 73 (expression -> REAL .)
    REAL            reduce using rule 73 (expression -> REAL .)
    INTEGER         reduce using rule 73 (expression -> REAL .)
    NEW             reduce using rule 73 (expression -> REAL .)
    $end            reduce using rule 73 (expression -> REAL .)
    RIGHT_SQUARE    reduce using rule 73 (expression -> REAL .)
    COMMA           reduce using rule 73 (expression -> REAL .)
    UNTIL           reduce using rule 73 (expression -> REAL .)
    ENDWHILE        reduce using rule 73 (expression -> REAL .)
    ENDTYPE         reduce using rule 73 (expression -> REAL .)
    ENDCLASS        reduce using rule 73 (expression -> REAL .)
    ELSE            reduce using rule 73 (expression -> REAL .)
    ENDIF           reduce using rule 73 (expression -> REAL .)
    ENDPROCEDURE    reduce using rule 73 (expression -> REAL .)
    SEMICOLON       reduce using rule 73 (expression -> REAL .)
    NEXT            reduce using rule 73 (expression -> REAL .)
    ENDFUNCTION     reduce using rule 73 (expression -> REAL .)
    THEN            reduce using rule 73 (expression -> REAL .)
    DO              reduce using rule 73 (expression -> REAL .)
    RIGHT_PAREN     reduce using rule 73 (expression -> REAL .)
    OTHERWISE       reduce using rule 73 (expression -> REAL .)
    TO              reduce using rule 73 (expression -> REAL .)
    COLON           reduce using rule 73 (expression -> REAL .)
    STEP            reduce using rule 73 (expression -> REAL .)


state 45

    (74) expression -> INTEGER .

    ASSIGN          reduce using rule 74 (expression -> INTEGER .)
    OR              reduce using rule 74 (expression -> INTEGER .)
    AND             reduce using rule 74 (expression -> INTEGER .)
    EQUAL           reduce using rule 74 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 74 (expression -> INTEGER .)
    LESS            reduce using rule 74 (expression -> INTEGER .)
    GREATER         reduce using rule 74 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 74 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 74 (expression -> INTEGER .)
    MOD             reduce using rule 74 (expression -> INTEGER .)
    DIV             reduce using rule 74 (expression -> INTEGER .)
    MUL             reduce using rule 74 (expression -> INTEGER .)
    N_DIV           reduce using rule 74 (expression -> INTEGER .)
    PLUS            reduce using rule 74 (expression -> INTEGER .)
    MINUS           reduce using rule 74 (expression -> INTEGER .)
    CONNECT         reduce using rule 74 (expression -> INTEGER .)
    DOT             reduce using rule 74 (expression -> INTEGER .)
    POINTER         reduce using rule 74 (expression -> INTEGER .)
    DELETE          reduce using rule 74 (expression -> INTEGER .)
    DECLARE         reduce using rule 74 (expression -> INTEGER .)
    PUBLIC          reduce using rule 74 (expression -> INTEGER .)
    PRIVATE         reduce using rule 74 (expression -> INTEGER .)
    CONSTANT        reduce using rule 74 (expression -> INTEGER .)
    INPUT           reduce using rule 74 (expression -> INTEGER .)
    OUTPUT          reduce using rule 74 (expression -> INTEGER .)
    _OUTPUT         reduce using rule 74 (expression -> INTEGER .)
    IF              reduce using rule 74 (expression -> INTEGER .)
    CASE            reduce using rule 74 (expression -> INTEGER .)
    FOR             reduce using rule 74 (expression -> INTEGER .)
    REPEAT          reduce using rule 74 (expression -> INTEGER .)
    WHILE           reduce using rule 74 (expression -> INTEGER .)
    PROCEDURE       reduce using rule 74 (expression -> INTEGER .)
    CALL            reduce using rule 74 (expression -> INTEGER .)
    FUNCTION        reduce using rule 74 (expression -> INTEGER .)
    RETURN          reduce using rule 74 (expression -> INTEGER .)
    OPENFILE        reduce using rule 74 (expression -> INTEGER .)
    READFILE        reduce using rule 74 (expression -> INTEGER .)
    WRITEFILE       reduce using rule 74 (expression -> INTEGER .)
    CLOSEFILE       reduce using rule 74 (expression -> INTEGER .)
    SEEK            reduce using rule 74 (expression -> INTEGER .)
    TYPE            reduce using rule 74 (expression -> INTEGER .)
    PASS            reduce using rule 74 (expression -> INTEGER .)
    IMPORT          reduce using rule 74 (expression -> INTEGER .)
    CLASS           reduce using rule 74 (expression -> INTEGER .)
    LEFT_SQUARE     reduce using rule 74 (expression -> INTEGER .)
    ID              reduce using rule 74 (expression -> INTEGER .)
    NOT             reduce using rule 74 (expression -> INTEGER .)
    LEFT_PAREN      reduce using rule 74 (expression -> INTEGER .)
    DATE            reduce using rule 74 (expression -> INTEGER .)
    BOOLEAN         reduce using rule 74 (expression -> INTEGER .)
    CHAR            reduce using rule 74 (expression -> INTEGER .)
    STRING          reduce using rule 74 (expression -> INTEGER .)
    REAL            reduce using rule 74 (expression -> INTEGER .)
    INTEGER         reduce using rule 74 (expression -> INTEGER .)
    NEW             reduce using rule 74 (expression -> INTEGER .)
    $end            reduce using rule 74 (expression -> INTEGER .)
    RIGHT_SQUARE    reduce using rule 74 (expression -> INTEGER .)
    COMMA           reduce using rule 74 (expression -> INTEGER .)
    UNTIL           reduce using rule 74 (expression -> INTEGER .)
    ENDWHILE        reduce using rule 74 (expression -> INTEGER .)
    ENDTYPE         reduce using rule 74 (expression -> INTEGER .)
    ENDCLASS        reduce using rule 74 (expression -> INTEGER .)
    ELSE            reduce using rule 74 (expression -> INTEGER .)
    ENDIF           reduce using rule 74 (expression -> INTEGER .)
    ENDPROCEDURE    reduce using rule 74 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 74 (expression -> INTEGER .)
    NEXT            reduce using rule 74 (expression -> INTEGER .)
    ENDFUNCTION     reduce using rule 74 (expression -> INTEGER .)
    THEN            reduce using rule 74 (expression -> INTEGER .)
    DO              reduce using rule 74 (expression -> INTEGER .)
    RIGHT_PAREN     reduce using rule 74 (expression -> INTEGER .)
    OTHERWISE       reduce using rule 74 (expression -> INTEGER .)
    TO              reduce using rule 74 (expression -> INTEGER .)
    COLON           reduce using rule 74 (expression -> INTEGER .)
    STEP            reduce using rule 74 (expression -> INTEGER .)


state 46

    (1) statements -> statements statement .

    DELETE          reduce using rule 1 (statements -> statements statement .)
    DECLARE         reduce using rule 1 (statements -> statements statement .)
    PUBLIC          reduce using rule 1 (statements -> statements statement .)
    PRIVATE         reduce using rule 1 (statements -> statements statement .)
    CONSTANT        reduce using rule 1 (statements -> statements statement .)
    INPUT           reduce using rule 1 (statements -> statements statement .)
    OUTPUT          reduce using rule 1 (statements -> statements statement .)
    _OUTPUT         reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CASE            reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    REPEAT          reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    PROCEDURE       reduce using rule 1 (statements -> statements statement .)
    CALL            reduce using rule 1 (statements -> statements statement .)
    FUNCTION        reduce using rule 1 (statements -> statements statement .)
    RETURN          reduce using rule 1 (statements -> statements statement .)
    OPENFILE        reduce using rule 1 (statements -> statements statement .)
    READFILE        reduce using rule 1 (statements -> statements statement .)
    WRITEFILE       reduce using rule 1 (statements -> statements statement .)
    CLOSEFILE       reduce using rule 1 (statements -> statements statement .)
    SEEK            reduce using rule 1 (statements -> statements statement .)
    TYPE            reduce using rule 1 (statements -> statements statement .)
    PASS            reduce using rule 1 (statements -> statements statement .)
    IMPORT          reduce using rule 1 (statements -> statements statement .)
    CLASS           reduce using rule 1 (statements -> statements statement .)
    LEFT_SQUARE     reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    NOT             reduce using rule 1 (statements -> statements statement .)
    MINUS           reduce using rule 1 (statements -> statements statement .)
    PLUS            reduce using rule 1 (statements -> statements statement .)
    LEFT_PAREN      reduce using rule 1 (statements -> statements statement .)
    DATE            reduce using rule 1 (statements -> statements statement .)
    BOOLEAN         reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    REAL            reduce using rule 1 (statements -> statements statement .)
    INTEGER         reduce using rule 1 (statements -> statements statement .)
    MOD             reduce using rule 1 (statements -> statements statement .)
    DIV             reduce using rule 1 (statements -> statements statement .)
    POINTER         reduce using rule 1 (statements -> statements statement .)
    NEW             reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    UNTIL           reduce using rule 1 (statements -> statements statement .)
    ENDWHILE        reduce using rule 1 (statements -> statements statement .)
    ENDTYPE         reduce using rule 1 (statements -> statements statement .)
    ENDCLASS        reduce using rule 1 (statements -> statements statement .)
    ELSE            reduce using rule 1 (statements -> statements statement .)
    ENDIF           reduce using rule 1 (statements -> statements statement .)
    ENDPROCEDURE    reduce using rule 1 (statements -> statements statement .)
    SEMICOLON       reduce using rule 1 (statements -> statements statement .)
    NEXT            reduce using rule 1 (statements -> statements statement .)
    ENDFUNCTION     reduce using rule 1 (statements -> statements statement .)


state 47

    (3) statement -> DELETE ID .

    DELETE          reduce using rule 3 (statement -> DELETE ID .)
    DECLARE         reduce using rule 3 (statement -> DELETE ID .)
    PUBLIC          reduce using rule 3 (statement -> DELETE ID .)
    PRIVATE         reduce using rule 3 (statement -> DELETE ID .)
    CONSTANT        reduce using rule 3 (statement -> DELETE ID .)
    INPUT           reduce using rule 3 (statement -> DELETE ID .)
    OUTPUT          reduce using rule 3 (statement -> DELETE ID .)
    _OUTPUT         reduce using rule 3 (statement -> DELETE ID .)
    IF              reduce using rule 3 (statement -> DELETE ID .)
    CASE            reduce using rule 3 (statement -> DELETE ID .)
    FOR             reduce using rule 3 (statement -> DELETE ID .)
    REPEAT          reduce using rule 3 (statement -> DELETE ID .)
    WHILE           reduce using rule 3 (statement -> DELETE ID .)
    PROCEDURE       reduce using rule 3 (statement -> DELETE ID .)
    CALL            reduce using rule 3 (statement -> DELETE ID .)
    FUNCTION        reduce using rule 3 (statement -> DELETE ID .)
    RETURN          reduce using rule 3 (statement -> DELETE ID .)
    OPENFILE        reduce using rule 3 (statement -> DELETE ID .)
    READFILE        reduce using rule 3 (statement -> DELETE ID .)
    WRITEFILE       reduce using rule 3 (statement -> DELETE ID .)
    CLOSEFILE       reduce using rule 3 (statement -> DELETE ID .)
    SEEK            reduce using rule 3 (statement -> DELETE ID .)
    TYPE            reduce using rule 3 (statement -> DELETE ID .)
    PASS            reduce using rule 3 (statement -> DELETE ID .)
    IMPORT          reduce using rule 3 (statement -> DELETE ID .)
    CLASS           reduce using rule 3 (statement -> DELETE ID .)
    LEFT_SQUARE     reduce using rule 3 (statement -> DELETE ID .)
    ID              reduce using rule 3 (statement -> DELETE ID .)
    NOT             reduce using rule 3 (statement -> DELETE ID .)
    MINUS           reduce using rule 3 (statement -> DELETE ID .)
    PLUS            reduce using rule 3 (statement -> DELETE ID .)
    LEFT_PAREN      reduce using rule 3 (statement -> DELETE ID .)
    DATE            reduce using rule 3 (statement -> DELETE ID .)
    BOOLEAN         reduce using rule 3 (statement -> DELETE ID .)
    CHAR            reduce using rule 3 (statement -> DELETE ID .)
    STRING          reduce using rule 3 (statement -> DELETE ID .)
    REAL            reduce using rule 3 (statement -> DELETE ID .)
    INTEGER         reduce using rule 3 (statement -> DELETE ID .)
    MOD             reduce using rule 3 (statement -> DELETE ID .)
    DIV             reduce using rule 3 (statement -> DELETE ID .)
    POINTER         reduce using rule 3 (statement -> DELETE ID .)
    NEW             reduce using rule 3 (statement -> DELETE ID .)
    $end            reduce using rule 3 (statement -> DELETE ID .)
    UNTIL           reduce using rule 3 (statement -> DELETE ID .)
    ENDWHILE        reduce using rule 3 (statement -> DELETE ID .)
    ENDTYPE         reduce using rule 3 (statement -> DELETE ID .)
    ENDCLASS        reduce using rule 3 (statement -> DELETE ID .)
    ELSE            reduce using rule 3 (statement -> DELETE ID .)
    ENDIF           reduce using rule 3 (statement -> DELETE ID .)
    ENDPROCEDURE    reduce using rule 3 (statement -> DELETE ID .)
    SEMICOLON       reduce using rule 3 (statement -> DELETE ID .)
    NEXT            reduce using rule 3 (statement -> DELETE ID .)
    ENDFUNCTION     reduce using rule 3 (statement -> DELETE ID .)


state 48

    (49) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (21) indexes -> . indexes COMMA expression
    (22) indexes -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    indexes                        shift and go to state 112
    expression                     shift and go to state 113

state 49

    (123) expression -> ID LEFT_PAREN . parameters RIGHT_PAREN
    (126) expression -> ID LEFT_PAREN . RIGHT_PAREN
    (89) parameters -> . parameters COMMA expression
    (90) parameters -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 115
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    parameters                     shift and go to state 114
    expression                     shift and go to state 116

state 50

    (4) statement -> DECLARE ID . COLON ID
    (14) statement -> DECLARE ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) ids -> ID .

  ! shift/reduce conflict for COLON resolved as shift
    COLON           shift and go to state 117
    COMMA           reduce using rule 9 (ids -> ID .)

  ! COLON           [ reduce using rule 9 (ids -> ID .) ]


state 51

    (6) statement -> DECLARE ids . COLON ID
    (8) ids -> ids . COMMA ID

    COLON           shift and go to state 118
    COMMA           shift and go to state 119


state 52

    (5) statement -> PUBLIC ID . COLON ID
    (15) statement -> PUBLIC ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) ids -> ID .

  ! shift/reduce conflict for COLON resolved as shift
    COLON           shift and go to state 120
    COMMA           reduce using rule 9 (ids -> ID .)

  ! COLON           [ reduce using rule 9 (ids -> ID .) ]


state 53

    (7) statement -> PUBLIC ids . COLON ID
    (8) ids -> ids . COMMA ID

    COLON           shift and go to state 121
    COMMA           shift and go to state 119


state 54

    (95) statement -> PUBLIC PROCEDURE . ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> PUBLIC PROCEDURE . NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> PUBLIC PROCEDURE . ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> PUBLIC PROCEDURE . NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    ID              shift and go to state 122
    NEW             shift and go to state 123


state 55

    (109) statement -> PUBLIC FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> PUBLIC FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> PUBLIC FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> PUBLIC FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (119) statement -> PUBLIC FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> PUBLIC FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 124


state 56

    (10) statement -> PRIVATE ID . COLON ID
    (16) statement -> PRIVATE ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (9) ids -> ID .

  ! shift/reduce conflict for COLON resolved as shift
    COLON           shift and go to state 125
    COMMA           reduce using rule 9 (ids -> ID .)

  ! COLON           [ reduce using rule 9 (ids -> ID .) ]


state 57

    (11) statement -> PRIVATE ids . COLON ID
    (8) ids -> ids . COMMA ID

    COLON           shift and go to state 126
    COMMA           shift and go to state 119


state 58

    (99) statement -> PRIVATE PROCEDURE . ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> PRIVATE PROCEDURE . NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> PRIVATE PROCEDURE . ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> PRIVATE PROCEDURE . NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    ID              shift and go to state 127
    NEW             shift and go to state 128


state 59

    (113) statement -> PRIVATE FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> PRIVATE FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> PRIVATE FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> PRIVATE FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (121) statement -> PRIVATE FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> PRIVATE FUNCTION . ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 129


state 60

    (12) statement -> CONSTANT ID . EQUAL expression
    (13) statement -> CONSTANT ID . ASSIGN expression

    EQUAL           shift and go to state 130
    ASSIGN          shift and go to state 131


state 61

    (20) statement -> expression ASSIGN . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 132

state 62

    (50) expression -> expression OR . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 133

state 63

    (51) expression -> expression AND . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 134

state 64

    (53) expression -> expression EQUAL . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 135

state 65

    (54) expression -> expression NOT_EQUAL . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 136

state 66

    (55) expression -> expression LESS . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 137

state 67

    (56) expression -> expression GREATER . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 138

state 68

    (57) expression -> expression LESS_EQUAL . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 139

state 69

    (58) expression -> expression GREATER_EQUAL . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 140

state 70

    (59) expression -> expression MOD . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 141

state 71

    (60) expression -> expression DIV . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 142

state 72

    (61) expression -> expression MUL . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 143

state 73

    (62) expression -> expression N_DIV . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 144

state 74

    (65) expression -> expression PLUS . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 145

state 75

    (66) expression -> expression MINUS . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 146

state 76

    (67) expression -> expression CONNECT . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 147

state 77

    (138) expression -> expression DOT . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 148

state 78

    (143) expression -> expression POINTER .

    ASSIGN          reduce using rule 143 (expression -> expression POINTER .)
    OR              reduce using rule 143 (expression -> expression POINTER .)
    AND             reduce using rule 143 (expression -> expression POINTER .)
    EQUAL           reduce using rule 143 (expression -> expression POINTER .)
    NOT_EQUAL       reduce using rule 143 (expression -> expression POINTER .)
    LESS            reduce using rule 143 (expression -> expression POINTER .)
    GREATER         reduce using rule 143 (expression -> expression POINTER .)
    LESS_EQUAL      reduce using rule 143 (expression -> expression POINTER .)
    GREATER_EQUAL   reduce using rule 143 (expression -> expression POINTER .)
    MOD             reduce using rule 143 (expression -> expression POINTER .)
    DIV             reduce using rule 143 (expression -> expression POINTER .)
    MUL             reduce using rule 143 (expression -> expression POINTER .)
    N_DIV           reduce using rule 143 (expression -> expression POINTER .)
    PLUS            reduce using rule 143 (expression -> expression POINTER .)
    MINUS           reduce using rule 143 (expression -> expression POINTER .)
    CONNECT         reduce using rule 143 (expression -> expression POINTER .)
    DOT             reduce using rule 143 (expression -> expression POINTER .)
    POINTER         reduce using rule 143 (expression -> expression POINTER .)
    DELETE          reduce using rule 143 (expression -> expression POINTER .)
    DECLARE         reduce using rule 143 (expression -> expression POINTER .)
    PUBLIC          reduce using rule 143 (expression -> expression POINTER .)
    PRIVATE         reduce using rule 143 (expression -> expression POINTER .)
    CONSTANT        reduce using rule 143 (expression -> expression POINTER .)
    INPUT           reduce using rule 143 (expression -> expression POINTER .)
    OUTPUT          reduce using rule 143 (expression -> expression POINTER .)
    _OUTPUT         reduce using rule 143 (expression -> expression POINTER .)
    IF              reduce using rule 143 (expression -> expression POINTER .)
    CASE            reduce using rule 143 (expression -> expression POINTER .)
    FOR             reduce using rule 143 (expression -> expression POINTER .)
    REPEAT          reduce using rule 143 (expression -> expression POINTER .)
    WHILE           reduce using rule 143 (expression -> expression POINTER .)
    PROCEDURE       reduce using rule 143 (expression -> expression POINTER .)
    CALL            reduce using rule 143 (expression -> expression POINTER .)
    FUNCTION        reduce using rule 143 (expression -> expression POINTER .)
    RETURN          reduce using rule 143 (expression -> expression POINTER .)
    OPENFILE        reduce using rule 143 (expression -> expression POINTER .)
    READFILE        reduce using rule 143 (expression -> expression POINTER .)
    WRITEFILE       reduce using rule 143 (expression -> expression POINTER .)
    CLOSEFILE       reduce using rule 143 (expression -> expression POINTER .)
    SEEK            reduce using rule 143 (expression -> expression POINTER .)
    TYPE            reduce using rule 143 (expression -> expression POINTER .)
    PASS            reduce using rule 143 (expression -> expression POINTER .)
    IMPORT          reduce using rule 143 (expression -> expression POINTER .)
    CLASS           reduce using rule 143 (expression -> expression POINTER .)
    LEFT_SQUARE     reduce using rule 143 (expression -> expression POINTER .)
    ID              reduce using rule 143 (expression -> expression POINTER .)
    NOT             reduce using rule 143 (expression -> expression POINTER .)
    LEFT_PAREN      reduce using rule 143 (expression -> expression POINTER .)
    DATE            reduce using rule 143 (expression -> expression POINTER .)
    BOOLEAN         reduce using rule 143 (expression -> expression POINTER .)
    CHAR            reduce using rule 143 (expression -> expression POINTER .)
    STRING          reduce using rule 143 (expression -> expression POINTER .)
    REAL            reduce using rule 143 (expression -> expression POINTER .)
    INTEGER         reduce using rule 143 (expression -> expression POINTER .)
    NEW             reduce using rule 143 (expression -> expression POINTER .)
    $end            reduce using rule 143 (expression -> expression POINTER .)
    RIGHT_SQUARE    reduce using rule 143 (expression -> expression POINTER .)
    COMMA           reduce using rule 143 (expression -> expression POINTER .)
    UNTIL           reduce using rule 143 (expression -> expression POINTER .)
    ENDWHILE        reduce using rule 143 (expression -> expression POINTER .)
    ENDTYPE         reduce using rule 143 (expression -> expression POINTER .)
    ENDCLASS        reduce using rule 143 (expression -> expression POINTER .)
    ELSE            reduce using rule 143 (expression -> expression POINTER .)
    ENDIF           reduce using rule 143 (expression -> expression POINTER .)
    ENDPROCEDURE    reduce using rule 143 (expression -> expression POINTER .)
    SEMICOLON       reduce using rule 143 (expression -> expression POINTER .)
    NEXT            reduce using rule 143 (expression -> expression POINTER .)
    ENDFUNCTION     reduce using rule 143 (expression -> expression POINTER .)
    THEN            reduce using rule 143 (expression -> expression POINTER .)
    RIGHT_PAREN     reduce using rule 143 (expression -> expression POINTER .)
    DO              reduce using rule 143 (expression -> expression POINTER .)
    OTHERWISE       reduce using rule 143 (expression -> expression POINTER .)
    TO              reduce using rule 143 (expression -> expression POINTER .)
    COLON           reduce using rule 143 (expression -> expression POINTER .)
    STEP            reduce using rule 143 (expression -> expression POINTER .)


state 79

    (23) expression -> LEFT_SQUARE array_items . RIGHT_SQUARE
    (25) array_items -> array_items . COMMA expression

    RIGHT_SQUARE    shift and go to state 149
    COMMA           shift and go to state 150


state 80

    (24) expression -> LEFT_SQUARE RIGHT_SQUARE .

    ASSIGN          reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    OR              reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    AND             reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    EQUAL           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    LESS            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    GREATER         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    MOD             reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DIV             reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    MUL             reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    N_DIV           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    PLUS            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    MINUS           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CONNECT         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DOT             reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    POINTER         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DELETE          reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DECLARE         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    PUBLIC          reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    PRIVATE         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CONSTANT        reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    INPUT           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    OUTPUT          reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    _OUTPUT         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    IF              reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CASE            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    FOR             reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    REPEAT          reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    WHILE           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CALL            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    FUNCTION        reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    RETURN          reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    OPENFILE        reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    READFILE        reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    SEEK            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    TYPE            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    PASS            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    IMPORT          reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CLASS           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ID              reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    NOT             reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DATE            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CHAR            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    STRING          reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    REAL            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    INTEGER         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    NEW             reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    $end            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    COMMA           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    UNTIL           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ELSE            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDIF           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    NEXT            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    THEN            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DO              reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    OTHERWISE       reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    TO              reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    COLON           reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    STEP            reduce using rule 24 (expression -> LEFT_SQUARE RIGHT_SQUARE .)


state 81

    (26) array_items -> expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    RIGHT_SQUARE    reduce using rule 26 (array_items -> expression .)
    COMMA           reduce using rule 26 (array_items -> expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 82

    (27) statement -> INPUT expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 27 (statement -> INPUT expression .)
    DECLARE         reduce using rule 27 (statement -> INPUT expression .)
    PUBLIC          reduce using rule 27 (statement -> INPUT expression .)
    PRIVATE         reduce using rule 27 (statement -> INPUT expression .)
    CONSTANT        reduce using rule 27 (statement -> INPUT expression .)
    INPUT           reduce using rule 27 (statement -> INPUT expression .)
    OUTPUT          reduce using rule 27 (statement -> INPUT expression .)
    _OUTPUT         reduce using rule 27 (statement -> INPUT expression .)
    IF              reduce using rule 27 (statement -> INPUT expression .)
    CASE            reduce using rule 27 (statement -> INPUT expression .)
    FOR             reduce using rule 27 (statement -> INPUT expression .)
    REPEAT          reduce using rule 27 (statement -> INPUT expression .)
    WHILE           reduce using rule 27 (statement -> INPUT expression .)
    PROCEDURE       reduce using rule 27 (statement -> INPUT expression .)
    CALL            reduce using rule 27 (statement -> INPUT expression .)
    FUNCTION        reduce using rule 27 (statement -> INPUT expression .)
    RETURN          reduce using rule 27 (statement -> INPUT expression .)
    OPENFILE        reduce using rule 27 (statement -> INPUT expression .)
    READFILE        reduce using rule 27 (statement -> INPUT expression .)
    WRITEFILE       reduce using rule 27 (statement -> INPUT expression .)
    CLOSEFILE       reduce using rule 27 (statement -> INPUT expression .)
    SEEK            reduce using rule 27 (statement -> INPUT expression .)
    TYPE            reduce using rule 27 (statement -> INPUT expression .)
    PASS            reduce using rule 27 (statement -> INPUT expression .)
    IMPORT          reduce using rule 27 (statement -> INPUT expression .)
    CLASS           reduce using rule 27 (statement -> INPUT expression .)
    LEFT_SQUARE     reduce using rule 27 (statement -> INPUT expression .)
    ID              reduce using rule 27 (statement -> INPUT expression .)
    NOT             reduce using rule 27 (statement -> INPUT expression .)
    LEFT_PAREN      reduce using rule 27 (statement -> INPUT expression .)
    DATE            reduce using rule 27 (statement -> INPUT expression .)
    BOOLEAN         reduce using rule 27 (statement -> INPUT expression .)
    CHAR            reduce using rule 27 (statement -> INPUT expression .)
    STRING          reduce using rule 27 (statement -> INPUT expression .)
    REAL            reduce using rule 27 (statement -> INPUT expression .)
    INTEGER         reduce using rule 27 (statement -> INPUT expression .)
    NEW             reduce using rule 27 (statement -> INPUT expression .)
    $end            reduce using rule 27 (statement -> INPUT expression .)
    UNTIL           reduce using rule 27 (statement -> INPUT expression .)
    ENDWHILE        reduce using rule 27 (statement -> INPUT expression .)
    ENDTYPE         reduce using rule 27 (statement -> INPUT expression .)
    ENDCLASS        reduce using rule 27 (statement -> INPUT expression .)
    ELSE            reduce using rule 27 (statement -> INPUT expression .)
    ENDIF           reduce using rule 27 (statement -> INPUT expression .)
    ENDPROCEDURE    reduce using rule 27 (statement -> INPUT expression .)
    SEMICOLON       reduce using rule 27 (statement -> INPUT expression .)
    NEXT            reduce using rule 27 (statement -> INPUT expression .)
    ENDFUNCTION     reduce using rule 27 (statement -> INPUT expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 27 (statement -> INPUT expression .) ]
  ! PLUS            [ reduce using rule 27 (statement -> INPUT expression .) ]
  ! MOD             [ reduce using rule 27 (statement -> INPUT expression .) ]
  ! DIV             [ reduce using rule 27 (statement -> INPUT expression .) ]
  ! POINTER         [ reduce using rule 27 (statement -> INPUT expression .) ]


state 83

    (28) statement -> OUTPUT output_expression .
    (30) output_expression -> output_expression . COMMA expression

    DELETE          reduce using rule 28 (statement -> OUTPUT output_expression .)
    DECLARE         reduce using rule 28 (statement -> OUTPUT output_expression .)
    PUBLIC          reduce using rule 28 (statement -> OUTPUT output_expression .)
    PRIVATE         reduce using rule 28 (statement -> OUTPUT output_expression .)
    CONSTANT        reduce using rule 28 (statement -> OUTPUT output_expression .)
    INPUT           reduce using rule 28 (statement -> OUTPUT output_expression .)
    OUTPUT          reduce using rule 28 (statement -> OUTPUT output_expression .)
    _OUTPUT         reduce using rule 28 (statement -> OUTPUT output_expression .)
    IF              reduce using rule 28 (statement -> OUTPUT output_expression .)
    CASE            reduce using rule 28 (statement -> OUTPUT output_expression .)
    FOR             reduce using rule 28 (statement -> OUTPUT output_expression .)
    REPEAT          reduce using rule 28 (statement -> OUTPUT output_expression .)
    WHILE           reduce using rule 28 (statement -> OUTPUT output_expression .)
    PROCEDURE       reduce using rule 28 (statement -> OUTPUT output_expression .)
    CALL            reduce using rule 28 (statement -> OUTPUT output_expression .)
    FUNCTION        reduce using rule 28 (statement -> OUTPUT output_expression .)
    RETURN          reduce using rule 28 (statement -> OUTPUT output_expression .)
    OPENFILE        reduce using rule 28 (statement -> OUTPUT output_expression .)
    READFILE        reduce using rule 28 (statement -> OUTPUT output_expression .)
    WRITEFILE       reduce using rule 28 (statement -> OUTPUT output_expression .)
    CLOSEFILE       reduce using rule 28 (statement -> OUTPUT output_expression .)
    SEEK            reduce using rule 28 (statement -> OUTPUT output_expression .)
    TYPE            reduce using rule 28 (statement -> OUTPUT output_expression .)
    PASS            reduce using rule 28 (statement -> OUTPUT output_expression .)
    IMPORT          reduce using rule 28 (statement -> OUTPUT output_expression .)
    CLASS           reduce using rule 28 (statement -> OUTPUT output_expression .)
    LEFT_SQUARE     reduce using rule 28 (statement -> OUTPUT output_expression .)
    ID              reduce using rule 28 (statement -> OUTPUT output_expression .)
    NOT             reduce using rule 28 (statement -> OUTPUT output_expression .)
    MINUS           reduce using rule 28 (statement -> OUTPUT output_expression .)
    PLUS            reduce using rule 28 (statement -> OUTPUT output_expression .)
    LEFT_PAREN      reduce using rule 28 (statement -> OUTPUT output_expression .)
    DATE            reduce using rule 28 (statement -> OUTPUT output_expression .)
    BOOLEAN         reduce using rule 28 (statement -> OUTPUT output_expression .)
    CHAR            reduce using rule 28 (statement -> OUTPUT output_expression .)
    STRING          reduce using rule 28 (statement -> OUTPUT output_expression .)
    REAL            reduce using rule 28 (statement -> OUTPUT output_expression .)
    INTEGER         reduce using rule 28 (statement -> OUTPUT output_expression .)
    MOD             reduce using rule 28 (statement -> OUTPUT output_expression .)
    DIV             reduce using rule 28 (statement -> OUTPUT output_expression .)
    POINTER         reduce using rule 28 (statement -> OUTPUT output_expression .)
    NEW             reduce using rule 28 (statement -> OUTPUT output_expression .)
    $end            reduce using rule 28 (statement -> OUTPUT output_expression .)
    UNTIL           reduce using rule 28 (statement -> OUTPUT output_expression .)
    ENDWHILE        reduce using rule 28 (statement -> OUTPUT output_expression .)
    ENDTYPE         reduce using rule 28 (statement -> OUTPUT output_expression .)
    ENDCLASS        reduce using rule 28 (statement -> OUTPUT output_expression .)
    ELSE            reduce using rule 28 (statement -> OUTPUT output_expression .)
    ENDIF           reduce using rule 28 (statement -> OUTPUT output_expression .)
    ENDPROCEDURE    reduce using rule 28 (statement -> OUTPUT output_expression .)
    SEMICOLON       reduce using rule 28 (statement -> OUTPUT output_expression .)
    NEXT            reduce using rule 28 (statement -> OUTPUT output_expression .)
    ENDFUNCTION     reduce using rule 28 (statement -> OUTPUT output_expression .)
    COMMA           shift and go to state 151


state 84

    (31) output_expression -> expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    COMMA           reduce using rule 31 (output_expression -> expression .)
    DELETE          reduce using rule 31 (output_expression -> expression .)
    DECLARE         reduce using rule 31 (output_expression -> expression .)
    PUBLIC          reduce using rule 31 (output_expression -> expression .)
    PRIVATE         reduce using rule 31 (output_expression -> expression .)
    CONSTANT        reduce using rule 31 (output_expression -> expression .)
    INPUT           reduce using rule 31 (output_expression -> expression .)
    OUTPUT          reduce using rule 31 (output_expression -> expression .)
    _OUTPUT         reduce using rule 31 (output_expression -> expression .)
    IF              reduce using rule 31 (output_expression -> expression .)
    CASE            reduce using rule 31 (output_expression -> expression .)
    FOR             reduce using rule 31 (output_expression -> expression .)
    REPEAT          reduce using rule 31 (output_expression -> expression .)
    WHILE           reduce using rule 31 (output_expression -> expression .)
    PROCEDURE       reduce using rule 31 (output_expression -> expression .)
    CALL            reduce using rule 31 (output_expression -> expression .)
    FUNCTION        reduce using rule 31 (output_expression -> expression .)
    RETURN          reduce using rule 31 (output_expression -> expression .)
    OPENFILE        reduce using rule 31 (output_expression -> expression .)
    READFILE        reduce using rule 31 (output_expression -> expression .)
    WRITEFILE       reduce using rule 31 (output_expression -> expression .)
    CLOSEFILE       reduce using rule 31 (output_expression -> expression .)
    SEEK            reduce using rule 31 (output_expression -> expression .)
    TYPE            reduce using rule 31 (output_expression -> expression .)
    PASS            reduce using rule 31 (output_expression -> expression .)
    IMPORT          reduce using rule 31 (output_expression -> expression .)
    CLASS           reduce using rule 31 (output_expression -> expression .)
    LEFT_SQUARE     reduce using rule 31 (output_expression -> expression .)
    ID              reduce using rule 31 (output_expression -> expression .)
    NOT             reduce using rule 31 (output_expression -> expression .)
    LEFT_PAREN      reduce using rule 31 (output_expression -> expression .)
    DATE            reduce using rule 31 (output_expression -> expression .)
    BOOLEAN         reduce using rule 31 (output_expression -> expression .)
    CHAR            reduce using rule 31 (output_expression -> expression .)
    STRING          reduce using rule 31 (output_expression -> expression .)
    REAL            reduce using rule 31 (output_expression -> expression .)
    INTEGER         reduce using rule 31 (output_expression -> expression .)
    NEW             reduce using rule 31 (output_expression -> expression .)
    $end            reduce using rule 31 (output_expression -> expression .)
    UNTIL           reduce using rule 31 (output_expression -> expression .)
    ENDWHILE        reduce using rule 31 (output_expression -> expression .)
    ENDTYPE         reduce using rule 31 (output_expression -> expression .)
    ENDCLASS        reduce using rule 31 (output_expression -> expression .)
    ELSE            reduce using rule 31 (output_expression -> expression .)
    ENDIF           reduce using rule 31 (output_expression -> expression .)
    ENDPROCEDURE    reduce using rule 31 (output_expression -> expression .)
    SEMICOLON       reduce using rule 31 (output_expression -> expression .)
    NEXT            reduce using rule 31 (output_expression -> expression .)
    ENDFUNCTION     reduce using rule 31 (output_expression -> expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 31 (output_expression -> expression .) ]
  ! PLUS            [ reduce using rule 31 (output_expression -> expression .) ]
  ! MOD             [ reduce using rule 31 (output_expression -> expression .) ]
  ! DIV             [ reduce using rule 31 (output_expression -> expression .) ]
  ! POINTER         [ reduce using rule 31 (output_expression -> expression .) ]


state 85

    (29) statement -> _OUTPUT output_expression .
    (30) output_expression -> output_expression . COMMA expression

    DELETE          reduce using rule 29 (statement -> _OUTPUT output_expression .)
    DECLARE         reduce using rule 29 (statement -> _OUTPUT output_expression .)
    PUBLIC          reduce using rule 29 (statement -> _OUTPUT output_expression .)
    PRIVATE         reduce using rule 29 (statement -> _OUTPUT output_expression .)
    CONSTANT        reduce using rule 29 (statement -> _OUTPUT output_expression .)
    INPUT           reduce using rule 29 (statement -> _OUTPUT output_expression .)
    OUTPUT          reduce using rule 29 (statement -> _OUTPUT output_expression .)
    _OUTPUT         reduce using rule 29 (statement -> _OUTPUT output_expression .)
    IF              reduce using rule 29 (statement -> _OUTPUT output_expression .)
    CASE            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    FOR             reduce using rule 29 (statement -> _OUTPUT output_expression .)
    REPEAT          reduce using rule 29 (statement -> _OUTPUT output_expression .)
    WHILE           reduce using rule 29 (statement -> _OUTPUT output_expression .)
    PROCEDURE       reduce using rule 29 (statement -> _OUTPUT output_expression .)
    CALL            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    FUNCTION        reduce using rule 29 (statement -> _OUTPUT output_expression .)
    RETURN          reduce using rule 29 (statement -> _OUTPUT output_expression .)
    OPENFILE        reduce using rule 29 (statement -> _OUTPUT output_expression .)
    READFILE        reduce using rule 29 (statement -> _OUTPUT output_expression .)
    WRITEFILE       reduce using rule 29 (statement -> _OUTPUT output_expression .)
    CLOSEFILE       reduce using rule 29 (statement -> _OUTPUT output_expression .)
    SEEK            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    TYPE            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    PASS            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    IMPORT          reduce using rule 29 (statement -> _OUTPUT output_expression .)
    CLASS           reduce using rule 29 (statement -> _OUTPUT output_expression .)
    LEFT_SQUARE     reduce using rule 29 (statement -> _OUTPUT output_expression .)
    ID              reduce using rule 29 (statement -> _OUTPUT output_expression .)
    NOT             reduce using rule 29 (statement -> _OUTPUT output_expression .)
    MINUS           reduce using rule 29 (statement -> _OUTPUT output_expression .)
    PLUS            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    LEFT_PAREN      reduce using rule 29 (statement -> _OUTPUT output_expression .)
    DATE            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    BOOLEAN         reduce using rule 29 (statement -> _OUTPUT output_expression .)
    CHAR            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    STRING          reduce using rule 29 (statement -> _OUTPUT output_expression .)
    REAL            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    INTEGER         reduce using rule 29 (statement -> _OUTPUT output_expression .)
    MOD             reduce using rule 29 (statement -> _OUTPUT output_expression .)
    DIV             reduce using rule 29 (statement -> _OUTPUT output_expression .)
    POINTER         reduce using rule 29 (statement -> _OUTPUT output_expression .)
    NEW             reduce using rule 29 (statement -> _OUTPUT output_expression .)
    $end            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    UNTIL           reduce using rule 29 (statement -> _OUTPUT output_expression .)
    ENDWHILE        reduce using rule 29 (statement -> _OUTPUT output_expression .)
    ENDTYPE         reduce using rule 29 (statement -> _OUTPUT output_expression .)
    ENDCLASS        reduce using rule 29 (statement -> _OUTPUT output_expression .)
    ELSE            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    ENDIF           reduce using rule 29 (statement -> _OUTPUT output_expression .)
    ENDPROCEDURE    reduce using rule 29 (statement -> _OUTPUT output_expression .)
    SEMICOLON       reduce using rule 29 (statement -> _OUTPUT output_expression .)
    NEXT            reduce using rule 29 (statement -> _OUTPUT output_expression .)
    ENDFUNCTION     reduce using rule 29 (statement -> _OUTPUT output_expression .)
    COMMA           shift and go to state 151


state 86

    (32) statement -> IF expression . THEN statements ELSE statements ENDIF
    (33) statement -> IF expression . THEN statements ENDIF
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    THEN            shift and go to state 152
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 87

    (34) statement -> CASE OF . expression cases ENDCASE
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 153

state 88

    (42) statement -> FOR ID . ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> FOR ID . ASSIGN expression TO expression statements NEXT ID

    ASSIGN          shift and go to state 154


state 89

    (44) statement -> REPEAT statements . UNTIL expression
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    UNTIL           shift and go to state 155
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statement                      shift and go to state 46

state 90

    (45) statement -> WHILE expression . DO statements ENDWHILE
    (46) statement -> WHILE expression . statements ENDWHILE
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DO              shift and go to state 156
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 158
    DIV             shift and go to state 159
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 160
    MINUS           shift and go to state 161
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 162
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statements                     shift and go to state 157
    statement                      shift and go to state 2

state 91

    (91) statement -> PROCEDURE ID . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> PROCEDURE ID . LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    LEFT_PAREN      shift and go to state 163


state 92

    (92) statement -> PROCEDURE NEW . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> PROCEDURE NEW . LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    LEFT_PAREN      shift and go to state 164


state 93

    (68) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    RIGHT_PAREN     shift and go to state 165
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 94

    (149) expression -> NEW ID .
    (150) expression -> NEW ID . LEFT_PAREN parameters RIGHT_PAREN

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    ASSIGN          reduce using rule 149 (expression -> NEW ID .)
    OR              reduce using rule 149 (expression -> NEW ID .)
    AND             reduce using rule 149 (expression -> NEW ID .)
    EQUAL           reduce using rule 149 (expression -> NEW ID .)
    NOT_EQUAL       reduce using rule 149 (expression -> NEW ID .)
    LESS            reduce using rule 149 (expression -> NEW ID .)
    GREATER         reduce using rule 149 (expression -> NEW ID .)
    LESS_EQUAL      reduce using rule 149 (expression -> NEW ID .)
    GREATER_EQUAL   reduce using rule 149 (expression -> NEW ID .)
    MOD             reduce using rule 149 (expression -> NEW ID .)
    DIV             reduce using rule 149 (expression -> NEW ID .)
    MUL             reduce using rule 149 (expression -> NEW ID .)
    N_DIV           reduce using rule 149 (expression -> NEW ID .)
    PLUS            reduce using rule 149 (expression -> NEW ID .)
    MINUS           reduce using rule 149 (expression -> NEW ID .)
    CONNECT         reduce using rule 149 (expression -> NEW ID .)
    DOT             reduce using rule 149 (expression -> NEW ID .)
    POINTER         reduce using rule 149 (expression -> NEW ID .)
    DELETE          reduce using rule 149 (expression -> NEW ID .)
    DECLARE         reduce using rule 149 (expression -> NEW ID .)
    PUBLIC          reduce using rule 149 (expression -> NEW ID .)
    PRIVATE         reduce using rule 149 (expression -> NEW ID .)
    CONSTANT        reduce using rule 149 (expression -> NEW ID .)
    INPUT           reduce using rule 149 (expression -> NEW ID .)
    OUTPUT          reduce using rule 149 (expression -> NEW ID .)
    _OUTPUT         reduce using rule 149 (expression -> NEW ID .)
    IF              reduce using rule 149 (expression -> NEW ID .)
    CASE            reduce using rule 149 (expression -> NEW ID .)
    FOR             reduce using rule 149 (expression -> NEW ID .)
    REPEAT          reduce using rule 149 (expression -> NEW ID .)
    WHILE           reduce using rule 149 (expression -> NEW ID .)
    PROCEDURE       reduce using rule 149 (expression -> NEW ID .)
    CALL            reduce using rule 149 (expression -> NEW ID .)
    FUNCTION        reduce using rule 149 (expression -> NEW ID .)
    RETURN          reduce using rule 149 (expression -> NEW ID .)
    OPENFILE        reduce using rule 149 (expression -> NEW ID .)
    READFILE        reduce using rule 149 (expression -> NEW ID .)
    WRITEFILE       reduce using rule 149 (expression -> NEW ID .)
    CLOSEFILE       reduce using rule 149 (expression -> NEW ID .)
    SEEK            reduce using rule 149 (expression -> NEW ID .)
    TYPE            reduce using rule 149 (expression -> NEW ID .)
    PASS            reduce using rule 149 (expression -> NEW ID .)
    IMPORT          reduce using rule 149 (expression -> NEW ID .)
    CLASS           reduce using rule 149 (expression -> NEW ID .)
    LEFT_SQUARE     reduce using rule 149 (expression -> NEW ID .)
    ID              reduce using rule 149 (expression -> NEW ID .)
    NOT             reduce using rule 149 (expression -> NEW ID .)
    DATE            reduce using rule 149 (expression -> NEW ID .)
    BOOLEAN         reduce using rule 149 (expression -> NEW ID .)
    CHAR            reduce using rule 149 (expression -> NEW ID .)
    STRING          reduce using rule 149 (expression -> NEW ID .)
    REAL            reduce using rule 149 (expression -> NEW ID .)
    INTEGER         reduce using rule 149 (expression -> NEW ID .)
    NEW             reduce using rule 149 (expression -> NEW ID .)
    $end            reduce using rule 149 (expression -> NEW ID .)
    RIGHT_SQUARE    reduce using rule 149 (expression -> NEW ID .)
    COMMA           reduce using rule 149 (expression -> NEW ID .)
    UNTIL           reduce using rule 149 (expression -> NEW ID .)
    ENDWHILE        reduce using rule 149 (expression -> NEW ID .)
    ENDTYPE         reduce using rule 149 (expression -> NEW ID .)
    ENDCLASS        reduce using rule 149 (expression -> NEW ID .)
    ELSE            reduce using rule 149 (expression -> NEW ID .)
    ENDIF           reduce using rule 149 (expression -> NEW ID .)
    ENDPROCEDURE    reduce using rule 149 (expression -> NEW ID .)
    SEMICOLON       reduce using rule 149 (expression -> NEW ID .)
    NEXT            reduce using rule 149 (expression -> NEW ID .)
    ENDFUNCTION     reduce using rule 149 (expression -> NEW ID .)
    THEN            reduce using rule 149 (expression -> NEW ID .)
    DO              reduce using rule 149 (expression -> NEW ID .)
    RIGHT_PAREN     reduce using rule 149 (expression -> NEW ID .)
    OTHERWISE       reduce using rule 149 (expression -> NEW ID .)
    TO              reduce using rule 149 (expression -> NEW ID .)
    COLON           reduce using rule 149 (expression -> NEW ID .)
    STEP            reduce using rule 149 (expression -> NEW ID .)
    LEFT_PAREN      shift and go to state 166

  ! LEFT_PAREN      [ reduce using rule 149 (expression -> NEW ID .) ]


state 95

    (103) statement -> CALL ID . LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> CALL ID . LEFT_PAREN RIGHT_PAREN

    LEFT_PAREN      shift and go to state 167


state 96

    (105) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION

    LEFT_PAREN      shift and go to state 168


state 97

    (127) statement -> RETURN expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 127 (statement -> RETURN expression .)
    DECLARE         reduce using rule 127 (statement -> RETURN expression .)
    PUBLIC          reduce using rule 127 (statement -> RETURN expression .)
    PRIVATE         reduce using rule 127 (statement -> RETURN expression .)
    CONSTANT        reduce using rule 127 (statement -> RETURN expression .)
    INPUT           reduce using rule 127 (statement -> RETURN expression .)
    OUTPUT          reduce using rule 127 (statement -> RETURN expression .)
    _OUTPUT         reduce using rule 127 (statement -> RETURN expression .)
    IF              reduce using rule 127 (statement -> RETURN expression .)
    CASE            reduce using rule 127 (statement -> RETURN expression .)
    FOR             reduce using rule 127 (statement -> RETURN expression .)
    REPEAT          reduce using rule 127 (statement -> RETURN expression .)
    WHILE           reduce using rule 127 (statement -> RETURN expression .)
    PROCEDURE       reduce using rule 127 (statement -> RETURN expression .)
    CALL            reduce using rule 127 (statement -> RETURN expression .)
    FUNCTION        reduce using rule 127 (statement -> RETURN expression .)
    RETURN          reduce using rule 127 (statement -> RETURN expression .)
    OPENFILE        reduce using rule 127 (statement -> RETURN expression .)
    READFILE        reduce using rule 127 (statement -> RETURN expression .)
    WRITEFILE       reduce using rule 127 (statement -> RETURN expression .)
    CLOSEFILE       reduce using rule 127 (statement -> RETURN expression .)
    SEEK            reduce using rule 127 (statement -> RETURN expression .)
    TYPE            reduce using rule 127 (statement -> RETURN expression .)
    PASS            reduce using rule 127 (statement -> RETURN expression .)
    IMPORT          reduce using rule 127 (statement -> RETURN expression .)
    CLASS           reduce using rule 127 (statement -> RETURN expression .)
    LEFT_SQUARE     reduce using rule 127 (statement -> RETURN expression .)
    ID              reduce using rule 127 (statement -> RETURN expression .)
    NOT             reduce using rule 127 (statement -> RETURN expression .)
    LEFT_PAREN      reduce using rule 127 (statement -> RETURN expression .)
    DATE            reduce using rule 127 (statement -> RETURN expression .)
    BOOLEAN         reduce using rule 127 (statement -> RETURN expression .)
    CHAR            reduce using rule 127 (statement -> RETURN expression .)
    STRING          reduce using rule 127 (statement -> RETURN expression .)
    REAL            reduce using rule 127 (statement -> RETURN expression .)
    INTEGER         reduce using rule 127 (statement -> RETURN expression .)
    NEW             reduce using rule 127 (statement -> RETURN expression .)
    $end            reduce using rule 127 (statement -> RETURN expression .)
    UNTIL           reduce using rule 127 (statement -> RETURN expression .)
    ENDWHILE        reduce using rule 127 (statement -> RETURN expression .)
    ENDTYPE         reduce using rule 127 (statement -> RETURN expression .)
    ENDCLASS        reduce using rule 127 (statement -> RETURN expression .)
    ELSE            reduce using rule 127 (statement -> RETURN expression .)
    ENDIF           reduce using rule 127 (statement -> RETURN expression .)
    ENDPROCEDURE    reduce using rule 127 (statement -> RETURN expression .)
    SEMICOLON       reduce using rule 127 (statement -> RETURN expression .)
    NEXT            reduce using rule 127 (statement -> RETURN expression .)
    ENDFUNCTION     reduce using rule 127 (statement -> RETURN expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 127 (statement -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 127 (statement -> RETURN expression .) ]
  ! MOD             [ reduce using rule 127 (statement -> RETURN expression .) ]
  ! DIV             [ reduce using rule 127 (statement -> RETURN expression .) ]
  ! POINTER         [ reduce using rule 127 (statement -> RETURN expression .) ]


state 98

    (128) statement -> OPENFILE expression . FOR READ
    (129) statement -> OPENFILE expression . FOR WRITE
    (130) statement -> OPENFILE expression . FOR APPEND
    (131) statement -> OPENFILE expression . FOR RANDOM
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    FOR             shift and go to state 169
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 99

    (132) statement -> READFILE expression . COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> READFILE expression . COMMA ID
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    COMMA           shift and go to state 170
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 100

    (134) statement -> WRITEFILE expression . COMMA expression
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    COMMA           shift and go to state 171
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 101

    (135) statement -> CLOSEFILE expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 135 (statement -> CLOSEFILE expression .)
    DECLARE         reduce using rule 135 (statement -> CLOSEFILE expression .)
    PUBLIC          reduce using rule 135 (statement -> CLOSEFILE expression .)
    PRIVATE         reduce using rule 135 (statement -> CLOSEFILE expression .)
    CONSTANT        reduce using rule 135 (statement -> CLOSEFILE expression .)
    INPUT           reduce using rule 135 (statement -> CLOSEFILE expression .)
    OUTPUT          reduce using rule 135 (statement -> CLOSEFILE expression .)
    _OUTPUT         reduce using rule 135 (statement -> CLOSEFILE expression .)
    IF              reduce using rule 135 (statement -> CLOSEFILE expression .)
    CASE            reduce using rule 135 (statement -> CLOSEFILE expression .)
    FOR             reduce using rule 135 (statement -> CLOSEFILE expression .)
    REPEAT          reduce using rule 135 (statement -> CLOSEFILE expression .)
    WHILE           reduce using rule 135 (statement -> CLOSEFILE expression .)
    PROCEDURE       reduce using rule 135 (statement -> CLOSEFILE expression .)
    CALL            reduce using rule 135 (statement -> CLOSEFILE expression .)
    FUNCTION        reduce using rule 135 (statement -> CLOSEFILE expression .)
    RETURN          reduce using rule 135 (statement -> CLOSEFILE expression .)
    OPENFILE        reduce using rule 135 (statement -> CLOSEFILE expression .)
    READFILE        reduce using rule 135 (statement -> CLOSEFILE expression .)
    WRITEFILE       reduce using rule 135 (statement -> CLOSEFILE expression .)
    CLOSEFILE       reduce using rule 135 (statement -> CLOSEFILE expression .)
    SEEK            reduce using rule 135 (statement -> CLOSEFILE expression .)
    TYPE            reduce using rule 135 (statement -> CLOSEFILE expression .)
    PASS            reduce using rule 135 (statement -> CLOSEFILE expression .)
    IMPORT          reduce using rule 135 (statement -> CLOSEFILE expression .)
    CLASS           reduce using rule 135 (statement -> CLOSEFILE expression .)
    LEFT_SQUARE     reduce using rule 135 (statement -> CLOSEFILE expression .)
    ID              reduce using rule 135 (statement -> CLOSEFILE expression .)
    NOT             reduce using rule 135 (statement -> CLOSEFILE expression .)
    LEFT_PAREN      reduce using rule 135 (statement -> CLOSEFILE expression .)
    DATE            reduce using rule 135 (statement -> CLOSEFILE expression .)
    BOOLEAN         reduce using rule 135 (statement -> CLOSEFILE expression .)
    CHAR            reduce using rule 135 (statement -> CLOSEFILE expression .)
    STRING          reduce using rule 135 (statement -> CLOSEFILE expression .)
    REAL            reduce using rule 135 (statement -> CLOSEFILE expression .)
    INTEGER         reduce using rule 135 (statement -> CLOSEFILE expression .)
    NEW             reduce using rule 135 (statement -> CLOSEFILE expression .)
    $end            reduce using rule 135 (statement -> CLOSEFILE expression .)
    UNTIL           reduce using rule 135 (statement -> CLOSEFILE expression .)
    ENDWHILE        reduce using rule 135 (statement -> CLOSEFILE expression .)
    ENDTYPE         reduce using rule 135 (statement -> CLOSEFILE expression .)
    ENDCLASS        reduce using rule 135 (statement -> CLOSEFILE expression .)
    ELSE            reduce using rule 135 (statement -> CLOSEFILE expression .)
    ENDIF           reduce using rule 135 (statement -> CLOSEFILE expression .)
    ENDPROCEDURE    reduce using rule 135 (statement -> CLOSEFILE expression .)
    SEMICOLON       reduce using rule 135 (statement -> CLOSEFILE expression .)
    NEXT            reduce using rule 135 (statement -> CLOSEFILE expression .)
    ENDFUNCTION     reduce using rule 135 (statement -> CLOSEFILE expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 135 (statement -> CLOSEFILE expression .) ]
  ! PLUS            [ reduce using rule 135 (statement -> CLOSEFILE expression .) ]
  ! MOD             [ reduce using rule 135 (statement -> CLOSEFILE expression .) ]
  ! DIV             [ reduce using rule 135 (statement -> CLOSEFILE expression .) ]
  ! POINTER         [ reduce using rule 135 (statement -> CLOSEFILE expression .) ]


state 102

    (136) statement -> SEEK expression . COMMA expression
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    COMMA           shift and go to state 172
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 103

    (137) statement -> TYPE ID . statements ENDTYPE
    (139) statement -> TYPE ID . EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> TYPE ID . EQUAL POINTER ID
    (151) statement -> TYPE ID . EQUAL SET OF ID
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    EQUAL           shift and go to state 174
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 173
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 104

    (142) expression -> POINTER expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    ASSIGN          reduce using rule 142 (expression -> POINTER expression .)
    DELETE          reduce using rule 142 (expression -> POINTER expression .)
    DECLARE         reduce using rule 142 (expression -> POINTER expression .)
    PUBLIC          reduce using rule 142 (expression -> POINTER expression .)
    PRIVATE         reduce using rule 142 (expression -> POINTER expression .)
    CONSTANT        reduce using rule 142 (expression -> POINTER expression .)
    INPUT           reduce using rule 142 (expression -> POINTER expression .)
    OUTPUT          reduce using rule 142 (expression -> POINTER expression .)
    _OUTPUT         reduce using rule 142 (expression -> POINTER expression .)
    IF              reduce using rule 142 (expression -> POINTER expression .)
    CASE            reduce using rule 142 (expression -> POINTER expression .)
    FOR             reduce using rule 142 (expression -> POINTER expression .)
    REPEAT          reduce using rule 142 (expression -> POINTER expression .)
    WHILE           reduce using rule 142 (expression -> POINTER expression .)
    PROCEDURE       reduce using rule 142 (expression -> POINTER expression .)
    CALL            reduce using rule 142 (expression -> POINTER expression .)
    FUNCTION        reduce using rule 142 (expression -> POINTER expression .)
    RETURN          reduce using rule 142 (expression -> POINTER expression .)
    OPENFILE        reduce using rule 142 (expression -> POINTER expression .)
    READFILE        reduce using rule 142 (expression -> POINTER expression .)
    WRITEFILE       reduce using rule 142 (expression -> POINTER expression .)
    CLOSEFILE       reduce using rule 142 (expression -> POINTER expression .)
    SEEK            reduce using rule 142 (expression -> POINTER expression .)
    TYPE            reduce using rule 142 (expression -> POINTER expression .)
    PASS            reduce using rule 142 (expression -> POINTER expression .)
    IMPORT          reduce using rule 142 (expression -> POINTER expression .)
    CLASS           reduce using rule 142 (expression -> POINTER expression .)
    LEFT_SQUARE     reduce using rule 142 (expression -> POINTER expression .)
    ID              reduce using rule 142 (expression -> POINTER expression .)
    NOT             reduce using rule 142 (expression -> POINTER expression .)
    LEFT_PAREN      reduce using rule 142 (expression -> POINTER expression .)
    DATE            reduce using rule 142 (expression -> POINTER expression .)
    BOOLEAN         reduce using rule 142 (expression -> POINTER expression .)
    CHAR            reduce using rule 142 (expression -> POINTER expression .)
    STRING          reduce using rule 142 (expression -> POINTER expression .)
    REAL            reduce using rule 142 (expression -> POINTER expression .)
    INTEGER         reduce using rule 142 (expression -> POINTER expression .)
    NEW             reduce using rule 142 (expression -> POINTER expression .)
    $end            reduce using rule 142 (expression -> POINTER expression .)
    RIGHT_SQUARE    reduce using rule 142 (expression -> POINTER expression .)
    COMMA           reduce using rule 142 (expression -> POINTER expression .)
    UNTIL           reduce using rule 142 (expression -> POINTER expression .)
    ENDWHILE        reduce using rule 142 (expression -> POINTER expression .)
    ENDTYPE         reduce using rule 142 (expression -> POINTER expression .)
    ENDCLASS        reduce using rule 142 (expression -> POINTER expression .)
    ELSE            reduce using rule 142 (expression -> POINTER expression .)
    ENDIF           reduce using rule 142 (expression -> POINTER expression .)
    ENDPROCEDURE    reduce using rule 142 (expression -> POINTER expression .)
    SEMICOLON       reduce using rule 142 (expression -> POINTER expression .)
    NEXT            reduce using rule 142 (expression -> POINTER expression .)
    ENDFUNCTION     reduce using rule 142 (expression -> POINTER expression .)
    THEN            reduce using rule 142 (expression -> POINTER expression .)
    DO              reduce using rule 142 (expression -> POINTER expression .)
    RIGHT_PAREN     reduce using rule 142 (expression -> POINTER expression .)
    OTHERWISE       reduce using rule 142 (expression -> POINTER expression .)
    TO              reduce using rule 142 (expression -> POINTER expression .)
    COLON           reduce using rule 142 (expression -> POINTER expression .)
    STEP            reduce using rule 142 (expression -> POINTER expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! OR              [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! AND             [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! EQUAL           [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! NOT_EQUAL       [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! LESS            [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! GREATER         [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! LESS_EQUAL      [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! MOD             [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! DIV             [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! MUL             [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! N_DIV           [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! PLUS            [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! MINUS           [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! CONNECT         [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! DOT             [ reduce using rule 142 (expression -> POINTER expression .) ]
  ! POINTER         [ reduce using rule 142 (expression -> POINTER expression .) ]


state 105

    (146) statement -> IMPORT expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 146 (statement -> IMPORT expression .)
    DECLARE         reduce using rule 146 (statement -> IMPORT expression .)
    PUBLIC          reduce using rule 146 (statement -> IMPORT expression .)
    PRIVATE         reduce using rule 146 (statement -> IMPORT expression .)
    CONSTANT        reduce using rule 146 (statement -> IMPORT expression .)
    INPUT           reduce using rule 146 (statement -> IMPORT expression .)
    OUTPUT          reduce using rule 146 (statement -> IMPORT expression .)
    _OUTPUT         reduce using rule 146 (statement -> IMPORT expression .)
    IF              reduce using rule 146 (statement -> IMPORT expression .)
    CASE            reduce using rule 146 (statement -> IMPORT expression .)
    FOR             reduce using rule 146 (statement -> IMPORT expression .)
    REPEAT          reduce using rule 146 (statement -> IMPORT expression .)
    WHILE           reduce using rule 146 (statement -> IMPORT expression .)
    PROCEDURE       reduce using rule 146 (statement -> IMPORT expression .)
    CALL            reduce using rule 146 (statement -> IMPORT expression .)
    FUNCTION        reduce using rule 146 (statement -> IMPORT expression .)
    RETURN          reduce using rule 146 (statement -> IMPORT expression .)
    OPENFILE        reduce using rule 146 (statement -> IMPORT expression .)
    READFILE        reduce using rule 146 (statement -> IMPORT expression .)
    WRITEFILE       reduce using rule 146 (statement -> IMPORT expression .)
    CLOSEFILE       reduce using rule 146 (statement -> IMPORT expression .)
    SEEK            reduce using rule 146 (statement -> IMPORT expression .)
    TYPE            reduce using rule 146 (statement -> IMPORT expression .)
    PASS            reduce using rule 146 (statement -> IMPORT expression .)
    IMPORT          reduce using rule 146 (statement -> IMPORT expression .)
    CLASS           reduce using rule 146 (statement -> IMPORT expression .)
    LEFT_SQUARE     reduce using rule 146 (statement -> IMPORT expression .)
    ID              reduce using rule 146 (statement -> IMPORT expression .)
    NOT             reduce using rule 146 (statement -> IMPORT expression .)
    LEFT_PAREN      reduce using rule 146 (statement -> IMPORT expression .)
    DATE            reduce using rule 146 (statement -> IMPORT expression .)
    BOOLEAN         reduce using rule 146 (statement -> IMPORT expression .)
    CHAR            reduce using rule 146 (statement -> IMPORT expression .)
    STRING          reduce using rule 146 (statement -> IMPORT expression .)
    REAL            reduce using rule 146 (statement -> IMPORT expression .)
    INTEGER         reduce using rule 146 (statement -> IMPORT expression .)
    NEW             reduce using rule 146 (statement -> IMPORT expression .)
    $end            reduce using rule 146 (statement -> IMPORT expression .)
    UNTIL           reduce using rule 146 (statement -> IMPORT expression .)
    ENDWHILE        reduce using rule 146 (statement -> IMPORT expression .)
    ENDTYPE         reduce using rule 146 (statement -> IMPORT expression .)
    ENDCLASS        reduce using rule 146 (statement -> IMPORT expression .)
    ELSE            reduce using rule 146 (statement -> IMPORT expression .)
    ENDIF           reduce using rule 146 (statement -> IMPORT expression .)
    ENDPROCEDURE    reduce using rule 146 (statement -> IMPORT expression .)
    SEMICOLON       reduce using rule 146 (statement -> IMPORT expression .)
    NEXT            reduce using rule 146 (statement -> IMPORT expression .)
    ENDFUNCTION     reduce using rule 146 (statement -> IMPORT expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 146 (statement -> IMPORT expression .) ]
  ! PLUS            [ reduce using rule 146 (statement -> IMPORT expression .) ]
  ! MOD             [ reduce using rule 146 (statement -> IMPORT expression .) ]
  ! DIV             [ reduce using rule 146 (statement -> IMPORT expression .) ]
  ! POINTER         [ reduce using rule 146 (statement -> IMPORT expression .) ]


state 106

    (147) statement -> CLASS ID . statements ENDCLASS
    (148) statement -> CLASS ID . INHERITS ID statements ENDCLASS
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    INHERITS        shift and go to state 176
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 175
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 107

    (52) expression -> NOT expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 52 (expression -> NOT expression .)
    OR              reduce using rule 52 (expression -> NOT expression .)
    AND             reduce using rule 52 (expression -> NOT expression .)
    CONNECT         reduce using rule 52 (expression -> NOT expression .)
    DOT             reduce using rule 52 (expression -> NOT expression .)
    POINTER         reduce using rule 52 (expression -> NOT expression .)
    DELETE          reduce using rule 52 (expression -> NOT expression .)
    DECLARE         reduce using rule 52 (expression -> NOT expression .)
    PUBLIC          reduce using rule 52 (expression -> NOT expression .)
    PRIVATE         reduce using rule 52 (expression -> NOT expression .)
    CONSTANT        reduce using rule 52 (expression -> NOT expression .)
    INPUT           reduce using rule 52 (expression -> NOT expression .)
    OUTPUT          reduce using rule 52 (expression -> NOT expression .)
    _OUTPUT         reduce using rule 52 (expression -> NOT expression .)
    IF              reduce using rule 52 (expression -> NOT expression .)
    CASE            reduce using rule 52 (expression -> NOT expression .)
    FOR             reduce using rule 52 (expression -> NOT expression .)
    REPEAT          reduce using rule 52 (expression -> NOT expression .)
    WHILE           reduce using rule 52 (expression -> NOT expression .)
    PROCEDURE       reduce using rule 52 (expression -> NOT expression .)
    CALL            reduce using rule 52 (expression -> NOT expression .)
    FUNCTION        reduce using rule 52 (expression -> NOT expression .)
    RETURN          reduce using rule 52 (expression -> NOT expression .)
    OPENFILE        reduce using rule 52 (expression -> NOT expression .)
    READFILE        reduce using rule 52 (expression -> NOT expression .)
    WRITEFILE       reduce using rule 52 (expression -> NOT expression .)
    CLOSEFILE       reduce using rule 52 (expression -> NOT expression .)
    SEEK            reduce using rule 52 (expression -> NOT expression .)
    TYPE            reduce using rule 52 (expression -> NOT expression .)
    PASS            reduce using rule 52 (expression -> NOT expression .)
    IMPORT          reduce using rule 52 (expression -> NOT expression .)
    CLASS           reduce using rule 52 (expression -> NOT expression .)
    LEFT_SQUARE     reduce using rule 52 (expression -> NOT expression .)
    ID              reduce using rule 52 (expression -> NOT expression .)
    NOT             reduce using rule 52 (expression -> NOT expression .)
    LEFT_PAREN      reduce using rule 52 (expression -> NOT expression .)
    DATE            reduce using rule 52 (expression -> NOT expression .)
    BOOLEAN         reduce using rule 52 (expression -> NOT expression .)
    CHAR            reduce using rule 52 (expression -> NOT expression .)
    STRING          reduce using rule 52 (expression -> NOT expression .)
    REAL            reduce using rule 52 (expression -> NOT expression .)
    INTEGER         reduce using rule 52 (expression -> NOT expression .)
    NEW             reduce using rule 52 (expression -> NOT expression .)
    $end            reduce using rule 52 (expression -> NOT expression .)
    RIGHT_SQUARE    reduce using rule 52 (expression -> NOT expression .)
    COMMA           reduce using rule 52 (expression -> NOT expression .)
    UNTIL           reduce using rule 52 (expression -> NOT expression .)
    ENDWHILE        reduce using rule 52 (expression -> NOT expression .)
    ENDTYPE         reduce using rule 52 (expression -> NOT expression .)
    ENDCLASS        reduce using rule 52 (expression -> NOT expression .)
    ELSE            reduce using rule 52 (expression -> NOT expression .)
    ENDIF           reduce using rule 52 (expression -> NOT expression .)
    ENDPROCEDURE    reduce using rule 52 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 52 (expression -> NOT expression .)
    NEXT            reduce using rule 52 (expression -> NOT expression .)
    ENDFUNCTION     reduce using rule 52 (expression -> NOT expression .)
    THEN            reduce using rule 52 (expression -> NOT expression .)
    DO              reduce using rule 52 (expression -> NOT expression .)
    RIGHT_PAREN     reduce using rule 52 (expression -> NOT expression .)
    OTHERWISE       reduce using rule 52 (expression -> NOT expression .)
    TO              reduce using rule 52 (expression -> NOT expression .)
    COLON           reduce using rule 52 (expression -> NOT expression .)
    STEP            reduce using rule 52 (expression -> NOT expression .)
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! EQUAL           [ reduce using rule 52 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 52 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 52 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 52 (expression -> NOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 52 (expression -> NOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 52 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 52 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 52 (expression -> NOT expression .) ]
  ! MUL             [ reduce using rule 52 (expression -> NOT expression .) ]
  ! N_DIV           [ reduce using rule 52 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> NOT expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 108

    (124) expression -> MOD LEFT_PAREN . parameters RIGHT_PAREN
    (89) parameters -> . parameters COMMA expression
    (90) parameters -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    parameters                     shift and go to state 177
    expression                     shift and go to state 116

state 109

    (125) expression -> DIV LEFT_PAREN . parameters RIGHT_PAREN
    (89) parameters -> . parameters COMMA expression
    (90) parameters -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    parameters                     shift and go to state 178
    expression                     shift and go to state 116

state 110

    (63) expression -> MINUS expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 63 (expression -> MINUS expression .)
    OR              reduce using rule 63 (expression -> MINUS expression .)
    AND             reduce using rule 63 (expression -> MINUS expression .)
    EQUAL           reduce using rule 63 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 63 (expression -> MINUS expression .)
    LESS            reduce using rule 63 (expression -> MINUS expression .)
    GREATER         reduce using rule 63 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 63 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 63 (expression -> MINUS expression .)
    MOD             reduce using rule 63 (expression -> MINUS expression .)
    DIV             reduce using rule 63 (expression -> MINUS expression .)
    MUL             reduce using rule 63 (expression -> MINUS expression .)
    N_DIV           reduce using rule 63 (expression -> MINUS expression .)
    PLUS            reduce using rule 63 (expression -> MINUS expression .)
    MINUS           reduce using rule 63 (expression -> MINUS expression .)
    CONNECT         reduce using rule 63 (expression -> MINUS expression .)
    DOT             reduce using rule 63 (expression -> MINUS expression .)
    POINTER         reduce using rule 63 (expression -> MINUS expression .)
    DELETE          reduce using rule 63 (expression -> MINUS expression .)
    DECLARE         reduce using rule 63 (expression -> MINUS expression .)
    PUBLIC          reduce using rule 63 (expression -> MINUS expression .)
    PRIVATE         reduce using rule 63 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 63 (expression -> MINUS expression .)
    INPUT           reduce using rule 63 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 63 (expression -> MINUS expression .)
    _OUTPUT         reduce using rule 63 (expression -> MINUS expression .)
    IF              reduce using rule 63 (expression -> MINUS expression .)
    CASE            reduce using rule 63 (expression -> MINUS expression .)
    FOR             reduce using rule 63 (expression -> MINUS expression .)
    REPEAT          reduce using rule 63 (expression -> MINUS expression .)
    WHILE           reduce using rule 63 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 63 (expression -> MINUS expression .)
    CALL            reduce using rule 63 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 63 (expression -> MINUS expression .)
    RETURN          reduce using rule 63 (expression -> MINUS expression .)
    OPENFILE        reduce using rule 63 (expression -> MINUS expression .)
    READFILE        reduce using rule 63 (expression -> MINUS expression .)
    WRITEFILE       reduce using rule 63 (expression -> MINUS expression .)
    CLOSEFILE       reduce using rule 63 (expression -> MINUS expression .)
    SEEK            reduce using rule 63 (expression -> MINUS expression .)
    TYPE            reduce using rule 63 (expression -> MINUS expression .)
    PASS            reduce using rule 63 (expression -> MINUS expression .)
    IMPORT          reduce using rule 63 (expression -> MINUS expression .)
    CLASS           reduce using rule 63 (expression -> MINUS expression .)
    LEFT_SQUARE     reduce using rule 63 (expression -> MINUS expression .)
    ID              reduce using rule 63 (expression -> MINUS expression .)
    NOT             reduce using rule 63 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 63 (expression -> MINUS expression .)
    DATE            reduce using rule 63 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 63 (expression -> MINUS expression .)
    CHAR            reduce using rule 63 (expression -> MINUS expression .)
    STRING          reduce using rule 63 (expression -> MINUS expression .)
    REAL            reduce using rule 63 (expression -> MINUS expression .)
    INTEGER         reduce using rule 63 (expression -> MINUS expression .)
    NEW             reduce using rule 63 (expression -> MINUS expression .)
    $end            reduce using rule 63 (expression -> MINUS expression .)
    RIGHT_SQUARE    reduce using rule 63 (expression -> MINUS expression .)
    COMMA           reduce using rule 63 (expression -> MINUS expression .)
    UNTIL           reduce using rule 63 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 63 (expression -> MINUS expression .)
    ENDTYPE         reduce using rule 63 (expression -> MINUS expression .)
    ENDCLASS        reduce using rule 63 (expression -> MINUS expression .)
    ELSE            reduce using rule 63 (expression -> MINUS expression .)
    ENDIF           reduce using rule 63 (expression -> MINUS expression .)
    ENDPROCEDURE    reduce using rule 63 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 63 (expression -> MINUS expression .)
    NEXT            reduce using rule 63 (expression -> MINUS expression .)
    ENDFUNCTION     reduce using rule 63 (expression -> MINUS expression .)
    THEN            reduce using rule 63 (expression -> MINUS expression .)
    DO              reduce using rule 63 (expression -> MINUS expression .)
    RIGHT_PAREN     reduce using rule 63 (expression -> MINUS expression .)
    OTHERWISE       reduce using rule 63 (expression -> MINUS expression .)
    TO              reduce using rule 63 (expression -> MINUS expression .)
    COLON           reduce using rule 63 (expression -> MINUS expression .)
    STEP            reduce using rule 63 (expression -> MINUS expression .)

  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! MOD             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! MUL             [ shift and go to state 72 ]
  ! N_DIV           [ shift and go to state 73 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 111

    (64) expression -> PLUS expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 64 (expression -> PLUS expression .)
    OR              reduce using rule 64 (expression -> PLUS expression .)
    AND             reduce using rule 64 (expression -> PLUS expression .)
    EQUAL           reduce using rule 64 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 64 (expression -> PLUS expression .)
    LESS            reduce using rule 64 (expression -> PLUS expression .)
    GREATER         reduce using rule 64 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 64 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 64 (expression -> PLUS expression .)
    MOD             reduce using rule 64 (expression -> PLUS expression .)
    DIV             reduce using rule 64 (expression -> PLUS expression .)
    MUL             reduce using rule 64 (expression -> PLUS expression .)
    N_DIV           reduce using rule 64 (expression -> PLUS expression .)
    PLUS            reduce using rule 64 (expression -> PLUS expression .)
    MINUS           reduce using rule 64 (expression -> PLUS expression .)
    CONNECT         reduce using rule 64 (expression -> PLUS expression .)
    DOT             reduce using rule 64 (expression -> PLUS expression .)
    POINTER         reduce using rule 64 (expression -> PLUS expression .)
    DELETE          reduce using rule 64 (expression -> PLUS expression .)
    DECLARE         reduce using rule 64 (expression -> PLUS expression .)
    PUBLIC          reduce using rule 64 (expression -> PLUS expression .)
    PRIVATE         reduce using rule 64 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 64 (expression -> PLUS expression .)
    INPUT           reduce using rule 64 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 64 (expression -> PLUS expression .)
    _OUTPUT         reduce using rule 64 (expression -> PLUS expression .)
    IF              reduce using rule 64 (expression -> PLUS expression .)
    CASE            reduce using rule 64 (expression -> PLUS expression .)
    FOR             reduce using rule 64 (expression -> PLUS expression .)
    REPEAT          reduce using rule 64 (expression -> PLUS expression .)
    WHILE           reduce using rule 64 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 64 (expression -> PLUS expression .)
    CALL            reduce using rule 64 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 64 (expression -> PLUS expression .)
    RETURN          reduce using rule 64 (expression -> PLUS expression .)
    OPENFILE        reduce using rule 64 (expression -> PLUS expression .)
    READFILE        reduce using rule 64 (expression -> PLUS expression .)
    WRITEFILE       reduce using rule 64 (expression -> PLUS expression .)
    CLOSEFILE       reduce using rule 64 (expression -> PLUS expression .)
    SEEK            reduce using rule 64 (expression -> PLUS expression .)
    TYPE            reduce using rule 64 (expression -> PLUS expression .)
    PASS            reduce using rule 64 (expression -> PLUS expression .)
    IMPORT          reduce using rule 64 (expression -> PLUS expression .)
    CLASS           reduce using rule 64 (expression -> PLUS expression .)
    LEFT_SQUARE     reduce using rule 64 (expression -> PLUS expression .)
    ID              reduce using rule 64 (expression -> PLUS expression .)
    NOT             reduce using rule 64 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 64 (expression -> PLUS expression .)
    DATE            reduce using rule 64 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 64 (expression -> PLUS expression .)
    CHAR            reduce using rule 64 (expression -> PLUS expression .)
    STRING          reduce using rule 64 (expression -> PLUS expression .)
    REAL            reduce using rule 64 (expression -> PLUS expression .)
    INTEGER         reduce using rule 64 (expression -> PLUS expression .)
    NEW             reduce using rule 64 (expression -> PLUS expression .)
    $end            reduce using rule 64 (expression -> PLUS expression .)
    RIGHT_SQUARE    reduce using rule 64 (expression -> PLUS expression .)
    COMMA           reduce using rule 64 (expression -> PLUS expression .)
    UNTIL           reduce using rule 64 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 64 (expression -> PLUS expression .)
    ENDTYPE         reduce using rule 64 (expression -> PLUS expression .)
    ENDCLASS        reduce using rule 64 (expression -> PLUS expression .)
    ELSE            reduce using rule 64 (expression -> PLUS expression .)
    ENDIF           reduce using rule 64 (expression -> PLUS expression .)
    ENDPROCEDURE    reduce using rule 64 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 64 (expression -> PLUS expression .)
    NEXT            reduce using rule 64 (expression -> PLUS expression .)
    ENDFUNCTION     reduce using rule 64 (expression -> PLUS expression .)
    THEN            reduce using rule 64 (expression -> PLUS expression .)
    DO              reduce using rule 64 (expression -> PLUS expression .)
    RIGHT_PAREN     reduce using rule 64 (expression -> PLUS expression .)
    OTHERWISE       reduce using rule 64 (expression -> PLUS expression .)
    TO              reduce using rule 64 (expression -> PLUS expression .)
    COLON           reduce using rule 64 (expression -> PLUS expression .)
    STEP            reduce using rule 64 (expression -> PLUS expression .)

  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! MOD             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! MUL             [ shift and go to state 72 ]
  ! N_DIV           [ shift and go to state 73 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 112

    (49) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (21) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 179
    COMMA           shift and go to state 180


state 113

    (22) indexes -> expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    RIGHT_SQUARE    reduce using rule 22 (indexes -> expression .)
    COMMA           reduce using rule 22 (indexes -> expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 114

    (123) expression -> ID LEFT_PAREN parameters . RIGHT_PAREN
    (89) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 181
    COMMA           shift and go to state 182


state 115

    (126) expression -> ID LEFT_PAREN RIGHT_PAREN .

    ASSIGN          reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OR              reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    AND             reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    EQUAL           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MOD             reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DIV             reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MUL             reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    N_DIV           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PLUS            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MINUS           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONNECT         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DOT             reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    POINTER         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DELETE          reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DECLARE         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PUBLIC          reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PRIVATE         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONSTANT        reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INPUT           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OUTPUT          reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    _OUTPUT         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    IF              reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CASE            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FOR             reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REPEAT          reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WHILE           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PROCEDURE       reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CALL            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FUNCTION        reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RETURN          reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OPENFILE        reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    READFILE        reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WRITEFILE       reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEEK            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TYPE            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PASS            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    IMPORT          reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CLASS           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ID              reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT             reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DATE            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    BOOLEAN         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CHAR            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STRING          reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REAL            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INTEGER         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NEW             reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    $end            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COMMA           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    UNTIL           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDWHILE        reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDTYPE         reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDCLASS        reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ELSE            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDIF           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEMICOLON       reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NEXT            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    THEN            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DO              reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OTHERWISE       reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TO              reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COLON           reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STEP            reduce using rule 126 (expression -> ID LEFT_PAREN RIGHT_PAREN .)


state 116

    (90) parameters -> expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    RIGHT_PAREN     reduce using rule 90 (parameters -> expression .)
    COMMA           reduce using rule 90 (parameters -> expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 117

    (4) statement -> DECLARE ID COLON . ID
    (14) statement -> DECLARE ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 183
    ARRAY           shift and go to state 184


state 118

    (6) statement -> DECLARE ids COLON . ID

    ID              shift and go to state 185


state 119

    (8) ids -> ids COMMA . ID

    ID              shift and go to state 186


state 120

    (5) statement -> PUBLIC ID COLON . ID
    (15) statement -> PUBLIC ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 187
    ARRAY           shift and go to state 188


state 121

    (7) statement -> PUBLIC ids COLON . ID

    ID              shift and go to state 189


state 122

    (95) statement -> PUBLIC PROCEDURE ID . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> PUBLIC PROCEDURE ID . LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    LEFT_PAREN      shift and go to state 190


state 123

    (96) statement -> PUBLIC PROCEDURE NEW . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> PUBLIC PROCEDURE NEW . LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    LEFT_PAREN      shift and go to state 191


state 124

    (109) statement -> PUBLIC FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> PUBLIC FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> PUBLIC FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> PUBLIC FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (119) statement -> PUBLIC FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> PUBLIC FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION

    LEFT_PAREN      shift and go to state 192


state 125

    (10) statement -> PRIVATE ID COLON . ID
    (16) statement -> PRIVATE ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 193
    ARRAY           shift and go to state 194


state 126

    (11) statement -> PRIVATE ids COLON . ID

    ID              shift and go to state 195


state 127

    (99) statement -> PRIVATE PROCEDURE ID . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> PRIVATE PROCEDURE ID . LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    LEFT_PAREN      shift and go to state 196


state 128

    (100) statement -> PRIVATE PROCEDURE NEW . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> PRIVATE PROCEDURE NEW . LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE

    LEFT_PAREN      shift and go to state 197


state 129

    (113) statement -> PRIVATE FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> PRIVATE FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> PRIVATE FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> PRIVATE FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (121) statement -> PRIVATE FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> PRIVATE FUNCTION ID . LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION

    LEFT_PAREN      shift and go to state 198


state 130

    (12) statement -> CONSTANT ID EQUAL . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 199

state 131

    (13) statement -> CONSTANT ID ASSIGN . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 200

state 132

    (20) statement -> expression ASSIGN expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 20 (statement -> expression ASSIGN expression .)
    DECLARE         reduce using rule 20 (statement -> expression ASSIGN expression .)
    PUBLIC          reduce using rule 20 (statement -> expression ASSIGN expression .)
    PRIVATE         reduce using rule 20 (statement -> expression ASSIGN expression .)
    CONSTANT        reduce using rule 20 (statement -> expression ASSIGN expression .)
    INPUT           reduce using rule 20 (statement -> expression ASSIGN expression .)
    OUTPUT          reduce using rule 20 (statement -> expression ASSIGN expression .)
    _OUTPUT         reduce using rule 20 (statement -> expression ASSIGN expression .)
    IF              reduce using rule 20 (statement -> expression ASSIGN expression .)
    CASE            reduce using rule 20 (statement -> expression ASSIGN expression .)
    FOR             reduce using rule 20 (statement -> expression ASSIGN expression .)
    REPEAT          reduce using rule 20 (statement -> expression ASSIGN expression .)
    WHILE           reduce using rule 20 (statement -> expression ASSIGN expression .)
    PROCEDURE       reduce using rule 20 (statement -> expression ASSIGN expression .)
    CALL            reduce using rule 20 (statement -> expression ASSIGN expression .)
    FUNCTION        reduce using rule 20 (statement -> expression ASSIGN expression .)
    RETURN          reduce using rule 20 (statement -> expression ASSIGN expression .)
    OPENFILE        reduce using rule 20 (statement -> expression ASSIGN expression .)
    READFILE        reduce using rule 20 (statement -> expression ASSIGN expression .)
    WRITEFILE       reduce using rule 20 (statement -> expression ASSIGN expression .)
    CLOSEFILE       reduce using rule 20 (statement -> expression ASSIGN expression .)
    SEEK            reduce using rule 20 (statement -> expression ASSIGN expression .)
    TYPE            reduce using rule 20 (statement -> expression ASSIGN expression .)
    PASS            reduce using rule 20 (statement -> expression ASSIGN expression .)
    IMPORT          reduce using rule 20 (statement -> expression ASSIGN expression .)
    CLASS           reduce using rule 20 (statement -> expression ASSIGN expression .)
    LEFT_SQUARE     reduce using rule 20 (statement -> expression ASSIGN expression .)
    ID              reduce using rule 20 (statement -> expression ASSIGN expression .)
    NOT             reduce using rule 20 (statement -> expression ASSIGN expression .)
    LEFT_PAREN      reduce using rule 20 (statement -> expression ASSIGN expression .)
    DATE            reduce using rule 20 (statement -> expression ASSIGN expression .)
    BOOLEAN         reduce using rule 20 (statement -> expression ASSIGN expression .)
    CHAR            reduce using rule 20 (statement -> expression ASSIGN expression .)
    STRING          reduce using rule 20 (statement -> expression ASSIGN expression .)
    REAL            reduce using rule 20 (statement -> expression ASSIGN expression .)
    INTEGER         reduce using rule 20 (statement -> expression ASSIGN expression .)
    NEW             reduce using rule 20 (statement -> expression ASSIGN expression .)
    $end            reduce using rule 20 (statement -> expression ASSIGN expression .)
    UNTIL           reduce using rule 20 (statement -> expression ASSIGN expression .)
    ENDWHILE        reduce using rule 20 (statement -> expression ASSIGN expression .)
    ENDTYPE         reduce using rule 20 (statement -> expression ASSIGN expression .)
    ENDCLASS        reduce using rule 20 (statement -> expression ASSIGN expression .)
    ELSE            reduce using rule 20 (statement -> expression ASSIGN expression .)
    ENDIF           reduce using rule 20 (statement -> expression ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 20 (statement -> expression ASSIGN expression .)
    SEMICOLON       reduce using rule 20 (statement -> expression ASSIGN expression .)
    NEXT            reduce using rule 20 (statement -> expression ASSIGN expression .)
    ENDFUNCTION     reduce using rule 20 (statement -> expression ASSIGN expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 20 (statement -> expression ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 20 (statement -> expression ASSIGN expression .) ]
  ! MOD             [ reduce using rule 20 (statement -> expression ASSIGN expression .) ]
  ! DIV             [ reduce using rule 20 (statement -> expression ASSIGN expression .) ]
  ! POINTER         [ reduce using rule 20 (statement -> expression ASSIGN expression .) ]


state 133

    (50) expression -> expression OR expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 50 (expression -> expression OR expression .)
    OR              reduce using rule 50 (expression -> expression OR expression .)
    AND             reduce using rule 50 (expression -> expression OR expression .)
    CONNECT         reduce using rule 50 (expression -> expression OR expression .)
    DOT             reduce using rule 50 (expression -> expression OR expression .)
    POINTER         reduce using rule 50 (expression -> expression OR expression .)
    DELETE          reduce using rule 50 (expression -> expression OR expression .)
    DECLARE         reduce using rule 50 (expression -> expression OR expression .)
    PUBLIC          reduce using rule 50 (expression -> expression OR expression .)
    PRIVATE         reduce using rule 50 (expression -> expression OR expression .)
    CONSTANT        reduce using rule 50 (expression -> expression OR expression .)
    INPUT           reduce using rule 50 (expression -> expression OR expression .)
    OUTPUT          reduce using rule 50 (expression -> expression OR expression .)
    _OUTPUT         reduce using rule 50 (expression -> expression OR expression .)
    IF              reduce using rule 50 (expression -> expression OR expression .)
    CASE            reduce using rule 50 (expression -> expression OR expression .)
    FOR             reduce using rule 50 (expression -> expression OR expression .)
    REPEAT          reduce using rule 50 (expression -> expression OR expression .)
    WHILE           reduce using rule 50 (expression -> expression OR expression .)
    PROCEDURE       reduce using rule 50 (expression -> expression OR expression .)
    CALL            reduce using rule 50 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 50 (expression -> expression OR expression .)
    RETURN          reduce using rule 50 (expression -> expression OR expression .)
    OPENFILE        reduce using rule 50 (expression -> expression OR expression .)
    READFILE        reduce using rule 50 (expression -> expression OR expression .)
    WRITEFILE       reduce using rule 50 (expression -> expression OR expression .)
    CLOSEFILE       reduce using rule 50 (expression -> expression OR expression .)
    SEEK            reduce using rule 50 (expression -> expression OR expression .)
    TYPE            reduce using rule 50 (expression -> expression OR expression .)
    PASS            reduce using rule 50 (expression -> expression OR expression .)
    IMPORT          reduce using rule 50 (expression -> expression OR expression .)
    CLASS           reduce using rule 50 (expression -> expression OR expression .)
    LEFT_SQUARE     reduce using rule 50 (expression -> expression OR expression .)
    ID              reduce using rule 50 (expression -> expression OR expression .)
    NOT             reduce using rule 50 (expression -> expression OR expression .)
    LEFT_PAREN      reduce using rule 50 (expression -> expression OR expression .)
    DATE            reduce using rule 50 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 50 (expression -> expression OR expression .)
    CHAR            reduce using rule 50 (expression -> expression OR expression .)
    STRING          reduce using rule 50 (expression -> expression OR expression .)
    REAL            reduce using rule 50 (expression -> expression OR expression .)
    INTEGER         reduce using rule 50 (expression -> expression OR expression .)
    NEW             reduce using rule 50 (expression -> expression OR expression .)
    $end            reduce using rule 50 (expression -> expression OR expression .)
    RIGHT_SQUARE    reduce using rule 50 (expression -> expression OR expression .)
    COMMA           reduce using rule 50 (expression -> expression OR expression .)
    UNTIL           reduce using rule 50 (expression -> expression OR expression .)
    ENDWHILE        reduce using rule 50 (expression -> expression OR expression .)
    ENDTYPE         reduce using rule 50 (expression -> expression OR expression .)
    ENDCLASS        reduce using rule 50 (expression -> expression OR expression .)
    ELSE            reduce using rule 50 (expression -> expression OR expression .)
    ENDIF           reduce using rule 50 (expression -> expression OR expression .)
    ENDPROCEDURE    reduce using rule 50 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 50 (expression -> expression OR expression .)
    NEXT            reduce using rule 50 (expression -> expression OR expression .)
    ENDFUNCTION     reduce using rule 50 (expression -> expression OR expression .)
    THEN            reduce using rule 50 (expression -> expression OR expression .)
    DO              reduce using rule 50 (expression -> expression OR expression .)
    RIGHT_PAREN     reduce using rule 50 (expression -> expression OR expression .)
    OTHERWISE       reduce using rule 50 (expression -> expression OR expression .)
    TO              reduce using rule 50 (expression -> expression OR expression .)
    COLON           reduce using rule 50 (expression -> expression OR expression .)
    STEP            reduce using rule 50 (expression -> expression OR expression .)
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! EQUAL           [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! MUL             [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! N_DIV           [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 134

    (51) expression -> expression AND expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 51 (expression -> expression AND expression .)
    AND             reduce using rule 51 (expression -> expression AND expression .)
    CONNECT         reduce using rule 51 (expression -> expression AND expression .)
    DOT             reduce using rule 51 (expression -> expression AND expression .)
    POINTER         reduce using rule 51 (expression -> expression AND expression .)
    DELETE          reduce using rule 51 (expression -> expression AND expression .)
    DECLARE         reduce using rule 51 (expression -> expression AND expression .)
    PUBLIC          reduce using rule 51 (expression -> expression AND expression .)
    PRIVATE         reduce using rule 51 (expression -> expression AND expression .)
    CONSTANT        reduce using rule 51 (expression -> expression AND expression .)
    INPUT           reduce using rule 51 (expression -> expression AND expression .)
    OUTPUT          reduce using rule 51 (expression -> expression AND expression .)
    _OUTPUT         reduce using rule 51 (expression -> expression AND expression .)
    IF              reduce using rule 51 (expression -> expression AND expression .)
    CASE            reduce using rule 51 (expression -> expression AND expression .)
    FOR             reduce using rule 51 (expression -> expression AND expression .)
    REPEAT          reduce using rule 51 (expression -> expression AND expression .)
    WHILE           reduce using rule 51 (expression -> expression AND expression .)
    PROCEDURE       reduce using rule 51 (expression -> expression AND expression .)
    CALL            reduce using rule 51 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 51 (expression -> expression AND expression .)
    RETURN          reduce using rule 51 (expression -> expression AND expression .)
    OPENFILE        reduce using rule 51 (expression -> expression AND expression .)
    READFILE        reduce using rule 51 (expression -> expression AND expression .)
    WRITEFILE       reduce using rule 51 (expression -> expression AND expression .)
    CLOSEFILE       reduce using rule 51 (expression -> expression AND expression .)
    SEEK            reduce using rule 51 (expression -> expression AND expression .)
    TYPE            reduce using rule 51 (expression -> expression AND expression .)
    PASS            reduce using rule 51 (expression -> expression AND expression .)
    IMPORT          reduce using rule 51 (expression -> expression AND expression .)
    CLASS           reduce using rule 51 (expression -> expression AND expression .)
    LEFT_SQUARE     reduce using rule 51 (expression -> expression AND expression .)
    ID              reduce using rule 51 (expression -> expression AND expression .)
    NOT             reduce using rule 51 (expression -> expression AND expression .)
    LEFT_PAREN      reduce using rule 51 (expression -> expression AND expression .)
    DATE            reduce using rule 51 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 51 (expression -> expression AND expression .)
    CHAR            reduce using rule 51 (expression -> expression AND expression .)
    STRING          reduce using rule 51 (expression -> expression AND expression .)
    REAL            reduce using rule 51 (expression -> expression AND expression .)
    INTEGER         reduce using rule 51 (expression -> expression AND expression .)
    NEW             reduce using rule 51 (expression -> expression AND expression .)
    $end            reduce using rule 51 (expression -> expression AND expression .)
    RIGHT_SQUARE    reduce using rule 51 (expression -> expression AND expression .)
    COMMA           reduce using rule 51 (expression -> expression AND expression .)
    UNTIL           reduce using rule 51 (expression -> expression AND expression .)
    ENDWHILE        reduce using rule 51 (expression -> expression AND expression .)
    ENDTYPE         reduce using rule 51 (expression -> expression AND expression .)
    ENDCLASS        reduce using rule 51 (expression -> expression AND expression .)
    ELSE            reduce using rule 51 (expression -> expression AND expression .)
    ENDIF           reduce using rule 51 (expression -> expression AND expression .)
    ENDPROCEDURE    reduce using rule 51 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 51 (expression -> expression AND expression .)
    NEXT            reduce using rule 51 (expression -> expression AND expression .)
    ENDFUNCTION     reduce using rule 51 (expression -> expression AND expression .)
    THEN            reduce using rule 51 (expression -> expression AND expression .)
    DO              reduce using rule 51 (expression -> expression AND expression .)
    RIGHT_PAREN     reduce using rule 51 (expression -> expression AND expression .)
    OTHERWISE       reduce using rule 51 (expression -> expression AND expression .)
    TO              reduce using rule 51 (expression -> expression AND expression .)
    COLON           reduce using rule 51 (expression -> expression AND expression .)
    STEP            reduce using rule 51 (expression -> expression AND expression .)
    OR              shift and go to state 62
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! OR              [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! MUL             [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! N_DIV           [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 63 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 135

    (53) expression -> expression EQUAL expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 53 (expression -> expression EQUAL expression .)
    OR              reduce using rule 53 (expression -> expression EQUAL expression .)
    AND             reduce using rule 53 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 53 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 53 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 53 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 53 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 53 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 53 (expression -> expression EQUAL expression .)
    CONNECT         reduce using rule 53 (expression -> expression EQUAL expression .)
    DOT             reduce using rule 53 (expression -> expression EQUAL expression .)
    POINTER         reduce using rule 53 (expression -> expression EQUAL expression .)
    DELETE          reduce using rule 53 (expression -> expression EQUAL expression .)
    DECLARE         reduce using rule 53 (expression -> expression EQUAL expression .)
    PUBLIC          reduce using rule 53 (expression -> expression EQUAL expression .)
    PRIVATE         reduce using rule 53 (expression -> expression EQUAL expression .)
    CONSTANT        reduce using rule 53 (expression -> expression EQUAL expression .)
    INPUT           reduce using rule 53 (expression -> expression EQUAL expression .)
    OUTPUT          reduce using rule 53 (expression -> expression EQUAL expression .)
    _OUTPUT         reduce using rule 53 (expression -> expression EQUAL expression .)
    IF              reduce using rule 53 (expression -> expression EQUAL expression .)
    CASE            reduce using rule 53 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 53 (expression -> expression EQUAL expression .)
    REPEAT          reduce using rule 53 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 53 (expression -> expression EQUAL expression .)
    PROCEDURE       reduce using rule 53 (expression -> expression EQUAL expression .)
    CALL            reduce using rule 53 (expression -> expression EQUAL expression .)
    FUNCTION        reduce using rule 53 (expression -> expression EQUAL expression .)
    RETURN          reduce using rule 53 (expression -> expression EQUAL expression .)
    OPENFILE        reduce using rule 53 (expression -> expression EQUAL expression .)
    READFILE        reduce using rule 53 (expression -> expression EQUAL expression .)
    WRITEFILE       reduce using rule 53 (expression -> expression EQUAL expression .)
    CLOSEFILE       reduce using rule 53 (expression -> expression EQUAL expression .)
    SEEK            reduce using rule 53 (expression -> expression EQUAL expression .)
    TYPE            reduce using rule 53 (expression -> expression EQUAL expression .)
    PASS            reduce using rule 53 (expression -> expression EQUAL expression .)
    IMPORT          reduce using rule 53 (expression -> expression EQUAL expression .)
    CLASS           reduce using rule 53 (expression -> expression EQUAL expression .)
    LEFT_SQUARE     reduce using rule 53 (expression -> expression EQUAL expression .)
    ID              reduce using rule 53 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 53 (expression -> expression EQUAL expression .)
    LEFT_PAREN      reduce using rule 53 (expression -> expression EQUAL expression .)
    DATE            reduce using rule 53 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 53 (expression -> expression EQUAL expression .)
    CHAR            reduce using rule 53 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 53 (expression -> expression EQUAL expression .)
    REAL            reduce using rule 53 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 53 (expression -> expression EQUAL expression .)
    NEW             reduce using rule 53 (expression -> expression EQUAL expression .)
    $end            reduce using rule 53 (expression -> expression EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 53 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 53 (expression -> expression EQUAL expression .)
    UNTIL           reduce using rule 53 (expression -> expression EQUAL expression .)
    ENDWHILE        reduce using rule 53 (expression -> expression EQUAL expression .)
    ENDTYPE         reduce using rule 53 (expression -> expression EQUAL expression .)
    ENDCLASS        reduce using rule 53 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 53 (expression -> expression EQUAL expression .)
    ENDIF           reduce using rule 53 (expression -> expression EQUAL expression .)
    ENDPROCEDURE    reduce using rule 53 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 53 (expression -> expression EQUAL expression .)
    NEXT            reduce using rule 53 (expression -> expression EQUAL expression .)
    ENDFUNCTION     reduce using rule 53 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 53 (expression -> expression EQUAL expression .)
    DO              reduce using rule 53 (expression -> expression EQUAL expression .)
    RIGHT_PAREN     reduce using rule 53 (expression -> expression EQUAL expression .)
    OTHERWISE       reduce using rule 53 (expression -> expression EQUAL expression .)
    TO              reduce using rule 53 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 53 (expression -> expression EQUAL expression .)
    STEP            reduce using rule 53 (expression -> expression EQUAL expression .)
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! MOD             [ reduce using rule 53 (expression -> expression EQUAL expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> expression EQUAL expression .) ]
  ! MUL             [ reduce using rule 53 (expression -> expression EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 53 (expression -> expression EQUAL expression .) ]
  ! PLUS            [ reduce using rule 53 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression EQUAL expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 136

    (54) expression -> expression NOT_EQUAL expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    LESS            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    GREATER         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    CONNECT         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    DOT             reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    POINTER         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    DELETE          reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    DECLARE         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    PUBLIC          reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    PRIVATE         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    CONSTANT        reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    INPUT           reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    OUTPUT          reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    _OUTPUT         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    CASE            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    FOR             reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    REPEAT          reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    PROCEDURE       reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    CALL            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    FUNCTION        reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    RETURN          reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    OPENFILE        reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    READFILE        reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    WRITEFILE       reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    CLOSEFILE       reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    SEEK            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    TYPE            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    PASS            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    IMPORT          reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    CLASS           reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    LEFT_SQUARE     reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    ID              reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    LEFT_PAREN      reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    DATE            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    BOOLEAN         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    CHAR            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    REAL            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    NEW             reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    UNTIL           reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    ENDWHILE        reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    ENDTYPE         reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    ENDCLASS        reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    ENDIF           reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    NEXT            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    ENDFUNCTION     reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    DO              reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    OTHERWISE       reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    TO              reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    STEP            reduce using rule 54 (expression -> expression NOT_EQUAL expression .)
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! MOD             [ reduce using rule 54 (expression -> expression NOT_EQUAL expression .) ]
  ! DIV             [ reduce using rule 54 (expression -> expression NOT_EQUAL expression .) ]
  ! MUL             [ reduce using rule 54 (expression -> expression NOT_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 54 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 54 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression NOT_EQUAL expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 137

    (55) expression -> expression LESS expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 55 (expression -> expression LESS expression .)
    OR              reduce using rule 55 (expression -> expression LESS expression .)
    AND             reduce using rule 55 (expression -> expression LESS expression .)
    EQUAL           reduce using rule 55 (expression -> expression LESS expression .)
    NOT_EQUAL       reduce using rule 55 (expression -> expression LESS expression .)
    LESS            reduce using rule 55 (expression -> expression LESS expression .)
    GREATER         reduce using rule 55 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 55 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 55 (expression -> expression LESS expression .)
    CONNECT         reduce using rule 55 (expression -> expression LESS expression .)
    DOT             reduce using rule 55 (expression -> expression LESS expression .)
    POINTER         reduce using rule 55 (expression -> expression LESS expression .)
    DELETE          reduce using rule 55 (expression -> expression LESS expression .)
    DECLARE         reduce using rule 55 (expression -> expression LESS expression .)
    PUBLIC          reduce using rule 55 (expression -> expression LESS expression .)
    PRIVATE         reduce using rule 55 (expression -> expression LESS expression .)
    CONSTANT        reduce using rule 55 (expression -> expression LESS expression .)
    INPUT           reduce using rule 55 (expression -> expression LESS expression .)
    OUTPUT          reduce using rule 55 (expression -> expression LESS expression .)
    _OUTPUT         reduce using rule 55 (expression -> expression LESS expression .)
    IF              reduce using rule 55 (expression -> expression LESS expression .)
    CASE            reduce using rule 55 (expression -> expression LESS expression .)
    FOR             reduce using rule 55 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 55 (expression -> expression LESS expression .)
    WHILE           reduce using rule 55 (expression -> expression LESS expression .)
    PROCEDURE       reduce using rule 55 (expression -> expression LESS expression .)
    CALL            reduce using rule 55 (expression -> expression LESS expression .)
    FUNCTION        reduce using rule 55 (expression -> expression LESS expression .)
    RETURN          reduce using rule 55 (expression -> expression LESS expression .)
    OPENFILE        reduce using rule 55 (expression -> expression LESS expression .)
    READFILE        reduce using rule 55 (expression -> expression LESS expression .)
    WRITEFILE       reduce using rule 55 (expression -> expression LESS expression .)
    CLOSEFILE       reduce using rule 55 (expression -> expression LESS expression .)
    SEEK            reduce using rule 55 (expression -> expression LESS expression .)
    TYPE            reduce using rule 55 (expression -> expression LESS expression .)
    PASS            reduce using rule 55 (expression -> expression LESS expression .)
    IMPORT          reduce using rule 55 (expression -> expression LESS expression .)
    CLASS           reduce using rule 55 (expression -> expression LESS expression .)
    LEFT_SQUARE     reduce using rule 55 (expression -> expression LESS expression .)
    ID              reduce using rule 55 (expression -> expression LESS expression .)
    NOT             reduce using rule 55 (expression -> expression LESS expression .)
    LEFT_PAREN      reduce using rule 55 (expression -> expression LESS expression .)
    DATE            reduce using rule 55 (expression -> expression LESS expression .)
    BOOLEAN         reduce using rule 55 (expression -> expression LESS expression .)
    CHAR            reduce using rule 55 (expression -> expression LESS expression .)
    STRING          reduce using rule 55 (expression -> expression LESS expression .)
    REAL            reduce using rule 55 (expression -> expression LESS expression .)
    INTEGER         reduce using rule 55 (expression -> expression LESS expression .)
    NEW             reduce using rule 55 (expression -> expression LESS expression .)
    $end            reduce using rule 55 (expression -> expression LESS expression .)
    RIGHT_SQUARE    reduce using rule 55 (expression -> expression LESS expression .)
    COMMA           reduce using rule 55 (expression -> expression LESS expression .)
    UNTIL           reduce using rule 55 (expression -> expression LESS expression .)
    ENDWHILE        reduce using rule 55 (expression -> expression LESS expression .)
    ENDTYPE         reduce using rule 55 (expression -> expression LESS expression .)
    ENDCLASS        reduce using rule 55 (expression -> expression LESS expression .)
    ELSE            reduce using rule 55 (expression -> expression LESS expression .)
    ENDIF           reduce using rule 55 (expression -> expression LESS expression .)
    ENDPROCEDURE    reduce using rule 55 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 55 (expression -> expression LESS expression .)
    NEXT            reduce using rule 55 (expression -> expression LESS expression .)
    ENDFUNCTION     reduce using rule 55 (expression -> expression LESS expression .)
    THEN            reduce using rule 55 (expression -> expression LESS expression .)
    DO              reduce using rule 55 (expression -> expression LESS expression .)
    RIGHT_PAREN     reduce using rule 55 (expression -> expression LESS expression .)
    OTHERWISE       reduce using rule 55 (expression -> expression LESS expression .)
    TO              reduce using rule 55 (expression -> expression LESS expression .)
    COLON           reduce using rule 55 (expression -> expression LESS expression .)
    STEP            reduce using rule 55 (expression -> expression LESS expression .)
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! MOD             [ reduce using rule 55 (expression -> expression LESS expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> expression LESS expression .) ]
  ! MUL             [ reduce using rule 55 (expression -> expression LESS expression .) ]
  ! N_DIV           [ reduce using rule 55 (expression -> expression LESS expression .) ]
  ! PLUS            [ reduce using rule 55 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression LESS expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 138

    (56) expression -> expression GREATER expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 56 (expression -> expression GREATER expression .)
    OR              reduce using rule 56 (expression -> expression GREATER expression .)
    AND             reduce using rule 56 (expression -> expression GREATER expression .)
    EQUAL           reduce using rule 56 (expression -> expression GREATER expression .)
    NOT_EQUAL       reduce using rule 56 (expression -> expression GREATER expression .)
    LESS            reduce using rule 56 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 56 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 56 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 56 (expression -> expression GREATER expression .)
    CONNECT         reduce using rule 56 (expression -> expression GREATER expression .)
    DOT             reduce using rule 56 (expression -> expression GREATER expression .)
    POINTER         reduce using rule 56 (expression -> expression GREATER expression .)
    DELETE          reduce using rule 56 (expression -> expression GREATER expression .)
    DECLARE         reduce using rule 56 (expression -> expression GREATER expression .)
    PUBLIC          reduce using rule 56 (expression -> expression GREATER expression .)
    PRIVATE         reduce using rule 56 (expression -> expression GREATER expression .)
    CONSTANT        reduce using rule 56 (expression -> expression GREATER expression .)
    INPUT           reduce using rule 56 (expression -> expression GREATER expression .)
    OUTPUT          reduce using rule 56 (expression -> expression GREATER expression .)
    _OUTPUT         reduce using rule 56 (expression -> expression GREATER expression .)
    IF              reduce using rule 56 (expression -> expression GREATER expression .)
    CASE            reduce using rule 56 (expression -> expression GREATER expression .)
    FOR             reduce using rule 56 (expression -> expression GREATER expression .)
    REPEAT          reduce using rule 56 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 56 (expression -> expression GREATER expression .)
    PROCEDURE       reduce using rule 56 (expression -> expression GREATER expression .)
    CALL            reduce using rule 56 (expression -> expression GREATER expression .)
    FUNCTION        reduce using rule 56 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 56 (expression -> expression GREATER expression .)
    OPENFILE        reduce using rule 56 (expression -> expression GREATER expression .)
    READFILE        reduce using rule 56 (expression -> expression GREATER expression .)
    WRITEFILE       reduce using rule 56 (expression -> expression GREATER expression .)
    CLOSEFILE       reduce using rule 56 (expression -> expression GREATER expression .)
    SEEK            reduce using rule 56 (expression -> expression GREATER expression .)
    TYPE            reduce using rule 56 (expression -> expression GREATER expression .)
    PASS            reduce using rule 56 (expression -> expression GREATER expression .)
    IMPORT          reduce using rule 56 (expression -> expression GREATER expression .)
    CLASS           reduce using rule 56 (expression -> expression GREATER expression .)
    LEFT_SQUARE     reduce using rule 56 (expression -> expression GREATER expression .)
    ID              reduce using rule 56 (expression -> expression GREATER expression .)
    NOT             reduce using rule 56 (expression -> expression GREATER expression .)
    LEFT_PAREN      reduce using rule 56 (expression -> expression GREATER expression .)
    DATE            reduce using rule 56 (expression -> expression GREATER expression .)
    BOOLEAN         reduce using rule 56 (expression -> expression GREATER expression .)
    CHAR            reduce using rule 56 (expression -> expression GREATER expression .)
    STRING          reduce using rule 56 (expression -> expression GREATER expression .)
    REAL            reduce using rule 56 (expression -> expression GREATER expression .)
    INTEGER         reduce using rule 56 (expression -> expression GREATER expression .)
    NEW             reduce using rule 56 (expression -> expression GREATER expression .)
    $end            reduce using rule 56 (expression -> expression GREATER expression .)
    RIGHT_SQUARE    reduce using rule 56 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 56 (expression -> expression GREATER expression .)
    UNTIL           reduce using rule 56 (expression -> expression GREATER expression .)
    ENDWHILE        reduce using rule 56 (expression -> expression GREATER expression .)
    ENDTYPE         reduce using rule 56 (expression -> expression GREATER expression .)
    ENDCLASS        reduce using rule 56 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 56 (expression -> expression GREATER expression .)
    ENDIF           reduce using rule 56 (expression -> expression GREATER expression .)
    ENDPROCEDURE    reduce using rule 56 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 56 (expression -> expression GREATER expression .)
    NEXT            reduce using rule 56 (expression -> expression GREATER expression .)
    ENDFUNCTION     reduce using rule 56 (expression -> expression GREATER expression .)
    THEN            reduce using rule 56 (expression -> expression GREATER expression .)
    DO              reduce using rule 56 (expression -> expression GREATER expression .)
    RIGHT_PAREN     reduce using rule 56 (expression -> expression GREATER expression .)
    OTHERWISE       reduce using rule 56 (expression -> expression GREATER expression .)
    TO              reduce using rule 56 (expression -> expression GREATER expression .)
    COLON           reduce using rule 56 (expression -> expression GREATER expression .)
    STEP            reduce using rule 56 (expression -> expression GREATER expression .)
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! MOD             [ reduce using rule 56 (expression -> expression GREATER expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> expression GREATER expression .) ]
  ! MUL             [ reduce using rule 56 (expression -> expression GREATER expression .) ]
  ! N_DIV           [ reduce using rule 56 (expression -> expression GREATER expression .) ]
  ! PLUS            [ reduce using rule 56 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 139

    (57) expression -> expression LESS_EQUAL expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    OR              reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    EQUAL           reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    LESS            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    CONNECT         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    DOT             reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    POINTER         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    DELETE          reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    DECLARE         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    PUBLIC          reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    PRIVATE         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    CONSTANT        reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    INPUT           reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    OUTPUT          reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    _OUTPUT         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    CASE            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    REPEAT          reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    PROCEDURE       reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    CALL            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    FUNCTION        reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    RETURN          reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    OPENFILE        reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    READFILE        reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    WRITEFILE       reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    CLOSEFILE       reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    SEEK            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    TYPE            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    PASS            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    IMPORT          reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    CLASS           reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    LEFT_SQUARE     reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    LEFT_PAREN      reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    DATE            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    CHAR            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    REAL            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    NEW             reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    UNTIL           reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    ENDWHILE        reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    ENDTYPE         reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    ENDCLASS        reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    ENDIF           reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    NEXT            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    ENDFUNCTION     reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    THEN            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    DO              reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    OTHERWISE       reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    STEP            reduce using rule 57 (expression -> expression LESS_EQUAL expression .)
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! MOD             [ reduce using rule 57 (expression -> expression LESS_EQUAL expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression LESS_EQUAL expression .) ]
  ! MUL             [ reduce using rule 57 (expression -> expression LESS_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 57 (expression -> expression LESS_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 57 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression LESS_EQUAL expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 140

    (58) expression -> expression GREATER_EQUAL expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    EQUAL           reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    LESS            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    CONNECT         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    DOT             reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    POINTER         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    DELETE          reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    DECLARE         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    PUBLIC          reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    PRIVATE         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    CONSTANT        reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    INPUT           reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    OUTPUT          reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    _OUTPUT         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    CASE            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    REPEAT          reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    PROCEDURE       reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    CALL            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    FUNCTION        reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    RETURN          reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    OPENFILE        reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    READFILE        reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    WRITEFILE       reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    CLOSEFILE       reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    SEEK            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    TYPE            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    PASS            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    IMPORT          reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    CLASS           reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    LEFT_SQUARE     reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    LEFT_PAREN      reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    DATE            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    CHAR            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    REAL            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    NEW             reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    UNTIL           reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    ENDWHILE        reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    ENDTYPE         reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    ENDCLASS        reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    ENDIF           reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    NEXT            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    ENDFUNCTION     reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    THEN            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    DO              reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    OTHERWISE       reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    STEP            reduce using rule 58 (expression -> expression GREATER_EQUAL expression .)
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75

  ! MOD             [ reduce using rule 58 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression GREATER_EQUAL expression .) ]
  ! MUL             [ reduce using rule 58 (expression -> expression GREATER_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 58 (expression -> expression GREATER_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 58 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression GREATER_EQUAL expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 141

    (59) expression -> expression MOD expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 59 (expression -> expression MOD expression .)
    OR              reduce using rule 59 (expression -> expression MOD expression .)
    AND             reduce using rule 59 (expression -> expression MOD expression .)
    EQUAL           reduce using rule 59 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 59 (expression -> expression MOD expression .)
    LESS            reduce using rule 59 (expression -> expression MOD expression .)
    GREATER         reduce using rule 59 (expression -> expression MOD expression .)
    LESS_EQUAL      reduce using rule 59 (expression -> expression MOD expression .)
    GREATER_EQUAL   reduce using rule 59 (expression -> expression MOD expression .)
    MOD             reduce using rule 59 (expression -> expression MOD expression .)
    DIV             reduce using rule 59 (expression -> expression MOD expression .)
    MUL             reduce using rule 59 (expression -> expression MOD expression .)
    N_DIV           reduce using rule 59 (expression -> expression MOD expression .)
    PLUS            reduce using rule 59 (expression -> expression MOD expression .)
    MINUS           reduce using rule 59 (expression -> expression MOD expression .)
    CONNECT         reduce using rule 59 (expression -> expression MOD expression .)
    DOT             reduce using rule 59 (expression -> expression MOD expression .)
    POINTER         reduce using rule 59 (expression -> expression MOD expression .)
    DELETE          reduce using rule 59 (expression -> expression MOD expression .)
    DECLARE         reduce using rule 59 (expression -> expression MOD expression .)
    PUBLIC          reduce using rule 59 (expression -> expression MOD expression .)
    PRIVATE         reduce using rule 59 (expression -> expression MOD expression .)
    CONSTANT        reduce using rule 59 (expression -> expression MOD expression .)
    INPUT           reduce using rule 59 (expression -> expression MOD expression .)
    OUTPUT          reduce using rule 59 (expression -> expression MOD expression .)
    _OUTPUT         reduce using rule 59 (expression -> expression MOD expression .)
    IF              reduce using rule 59 (expression -> expression MOD expression .)
    CASE            reduce using rule 59 (expression -> expression MOD expression .)
    FOR             reduce using rule 59 (expression -> expression MOD expression .)
    REPEAT          reduce using rule 59 (expression -> expression MOD expression .)
    WHILE           reduce using rule 59 (expression -> expression MOD expression .)
    PROCEDURE       reduce using rule 59 (expression -> expression MOD expression .)
    CALL            reduce using rule 59 (expression -> expression MOD expression .)
    FUNCTION        reduce using rule 59 (expression -> expression MOD expression .)
    RETURN          reduce using rule 59 (expression -> expression MOD expression .)
    OPENFILE        reduce using rule 59 (expression -> expression MOD expression .)
    READFILE        reduce using rule 59 (expression -> expression MOD expression .)
    WRITEFILE       reduce using rule 59 (expression -> expression MOD expression .)
    CLOSEFILE       reduce using rule 59 (expression -> expression MOD expression .)
    SEEK            reduce using rule 59 (expression -> expression MOD expression .)
    TYPE            reduce using rule 59 (expression -> expression MOD expression .)
    PASS            reduce using rule 59 (expression -> expression MOD expression .)
    IMPORT          reduce using rule 59 (expression -> expression MOD expression .)
    CLASS           reduce using rule 59 (expression -> expression MOD expression .)
    LEFT_SQUARE     reduce using rule 59 (expression -> expression MOD expression .)
    ID              reduce using rule 59 (expression -> expression MOD expression .)
    NOT             reduce using rule 59 (expression -> expression MOD expression .)
    LEFT_PAREN      reduce using rule 59 (expression -> expression MOD expression .)
    DATE            reduce using rule 59 (expression -> expression MOD expression .)
    BOOLEAN         reduce using rule 59 (expression -> expression MOD expression .)
    CHAR            reduce using rule 59 (expression -> expression MOD expression .)
    STRING          reduce using rule 59 (expression -> expression MOD expression .)
    REAL            reduce using rule 59 (expression -> expression MOD expression .)
    INTEGER         reduce using rule 59 (expression -> expression MOD expression .)
    NEW             reduce using rule 59 (expression -> expression MOD expression .)
    $end            reduce using rule 59 (expression -> expression MOD expression .)
    RIGHT_SQUARE    reduce using rule 59 (expression -> expression MOD expression .)
    COMMA           reduce using rule 59 (expression -> expression MOD expression .)
    UNTIL           reduce using rule 59 (expression -> expression MOD expression .)
    ENDWHILE        reduce using rule 59 (expression -> expression MOD expression .)
    ENDTYPE         reduce using rule 59 (expression -> expression MOD expression .)
    ENDCLASS        reduce using rule 59 (expression -> expression MOD expression .)
    ELSE            reduce using rule 59 (expression -> expression MOD expression .)
    ENDIF           reduce using rule 59 (expression -> expression MOD expression .)
    ENDPROCEDURE    reduce using rule 59 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 59 (expression -> expression MOD expression .)
    NEXT            reduce using rule 59 (expression -> expression MOD expression .)
    ENDFUNCTION     reduce using rule 59 (expression -> expression MOD expression .)
    THEN            reduce using rule 59 (expression -> expression MOD expression .)
    DO              reduce using rule 59 (expression -> expression MOD expression .)
    RIGHT_PAREN     reduce using rule 59 (expression -> expression MOD expression .)
    OTHERWISE       reduce using rule 59 (expression -> expression MOD expression .)
    TO              reduce using rule 59 (expression -> expression MOD expression .)
    COLON           reduce using rule 59 (expression -> expression MOD expression .)
    STEP            reduce using rule 59 (expression -> expression MOD expression .)

  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! MOD             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! MUL             [ shift and go to state 72 ]
  ! N_DIV           [ shift and go to state 73 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 142

    (60) expression -> expression DIV expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 60 (expression -> expression DIV expression .)
    OR              reduce using rule 60 (expression -> expression DIV expression .)
    AND             reduce using rule 60 (expression -> expression DIV expression .)
    EQUAL           reduce using rule 60 (expression -> expression DIV expression .)
    NOT_EQUAL       reduce using rule 60 (expression -> expression DIV expression .)
    LESS            reduce using rule 60 (expression -> expression DIV expression .)
    GREATER         reduce using rule 60 (expression -> expression DIV expression .)
    LESS_EQUAL      reduce using rule 60 (expression -> expression DIV expression .)
    GREATER_EQUAL   reduce using rule 60 (expression -> expression DIV expression .)
    MOD             reduce using rule 60 (expression -> expression DIV expression .)
    DIV             reduce using rule 60 (expression -> expression DIV expression .)
    MUL             reduce using rule 60 (expression -> expression DIV expression .)
    N_DIV           reduce using rule 60 (expression -> expression DIV expression .)
    PLUS            reduce using rule 60 (expression -> expression DIV expression .)
    MINUS           reduce using rule 60 (expression -> expression DIV expression .)
    CONNECT         reduce using rule 60 (expression -> expression DIV expression .)
    DOT             reduce using rule 60 (expression -> expression DIV expression .)
    POINTER         reduce using rule 60 (expression -> expression DIV expression .)
    DELETE          reduce using rule 60 (expression -> expression DIV expression .)
    DECLARE         reduce using rule 60 (expression -> expression DIV expression .)
    PUBLIC          reduce using rule 60 (expression -> expression DIV expression .)
    PRIVATE         reduce using rule 60 (expression -> expression DIV expression .)
    CONSTANT        reduce using rule 60 (expression -> expression DIV expression .)
    INPUT           reduce using rule 60 (expression -> expression DIV expression .)
    OUTPUT          reduce using rule 60 (expression -> expression DIV expression .)
    _OUTPUT         reduce using rule 60 (expression -> expression DIV expression .)
    IF              reduce using rule 60 (expression -> expression DIV expression .)
    CASE            reduce using rule 60 (expression -> expression DIV expression .)
    FOR             reduce using rule 60 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 60 (expression -> expression DIV expression .)
    WHILE           reduce using rule 60 (expression -> expression DIV expression .)
    PROCEDURE       reduce using rule 60 (expression -> expression DIV expression .)
    CALL            reduce using rule 60 (expression -> expression DIV expression .)
    FUNCTION        reduce using rule 60 (expression -> expression DIV expression .)
    RETURN          reduce using rule 60 (expression -> expression DIV expression .)
    OPENFILE        reduce using rule 60 (expression -> expression DIV expression .)
    READFILE        reduce using rule 60 (expression -> expression DIV expression .)
    WRITEFILE       reduce using rule 60 (expression -> expression DIV expression .)
    CLOSEFILE       reduce using rule 60 (expression -> expression DIV expression .)
    SEEK            reduce using rule 60 (expression -> expression DIV expression .)
    TYPE            reduce using rule 60 (expression -> expression DIV expression .)
    PASS            reduce using rule 60 (expression -> expression DIV expression .)
    IMPORT          reduce using rule 60 (expression -> expression DIV expression .)
    CLASS           reduce using rule 60 (expression -> expression DIV expression .)
    LEFT_SQUARE     reduce using rule 60 (expression -> expression DIV expression .)
    ID              reduce using rule 60 (expression -> expression DIV expression .)
    NOT             reduce using rule 60 (expression -> expression DIV expression .)
    LEFT_PAREN      reduce using rule 60 (expression -> expression DIV expression .)
    DATE            reduce using rule 60 (expression -> expression DIV expression .)
    BOOLEAN         reduce using rule 60 (expression -> expression DIV expression .)
    CHAR            reduce using rule 60 (expression -> expression DIV expression .)
    STRING          reduce using rule 60 (expression -> expression DIV expression .)
    REAL            reduce using rule 60 (expression -> expression DIV expression .)
    INTEGER         reduce using rule 60 (expression -> expression DIV expression .)
    NEW             reduce using rule 60 (expression -> expression DIV expression .)
    $end            reduce using rule 60 (expression -> expression DIV expression .)
    RIGHT_SQUARE    reduce using rule 60 (expression -> expression DIV expression .)
    COMMA           reduce using rule 60 (expression -> expression DIV expression .)
    UNTIL           reduce using rule 60 (expression -> expression DIV expression .)
    ENDWHILE        reduce using rule 60 (expression -> expression DIV expression .)
    ENDTYPE         reduce using rule 60 (expression -> expression DIV expression .)
    ENDCLASS        reduce using rule 60 (expression -> expression DIV expression .)
    ELSE            reduce using rule 60 (expression -> expression DIV expression .)
    ENDIF           reduce using rule 60 (expression -> expression DIV expression .)
    ENDPROCEDURE    reduce using rule 60 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 60 (expression -> expression DIV expression .)
    NEXT            reduce using rule 60 (expression -> expression DIV expression .)
    ENDFUNCTION     reduce using rule 60 (expression -> expression DIV expression .)
    THEN            reduce using rule 60 (expression -> expression DIV expression .)
    DO              reduce using rule 60 (expression -> expression DIV expression .)
    RIGHT_PAREN     reduce using rule 60 (expression -> expression DIV expression .)
    OTHERWISE       reduce using rule 60 (expression -> expression DIV expression .)
    TO              reduce using rule 60 (expression -> expression DIV expression .)
    COLON           reduce using rule 60 (expression -> expression DIV expression .)
    STEP            reduce using rule 60 (expression -> expression DIV expression .)

  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! MOD             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! MUL             [ shift and go to state 72 ]
  ! N_DIV           [ shift and go to state 73 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 143

    (61) expression -> expression MUL expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 61 (expression -> expression MUL expression .)
    OR              reduce using rule 61 (expression -> expression MUL expression .)
    AND             reduce using rule 61 (expression -> expression MUL expression .)
    EQUAL           reduce using rule 61 (expression -> expression MUL expression .)
    NOT_EQUAL       reduce using rule 61 (expression -> expression MUL expression .)
    LESS            reduce using rule 61 (expression -> expression MUL expression .)
    GREATER         reduce using rule 61 (expression -> expression MUL expression .)
    LESS_EQUAL      reduce using rule 61 (expression -> expression MUL expression .)
    GREATER_EQUAL   reduce using rule 61 (expression -> expression MUL expression .)
    MOD             reduce using rule 61 (expression -> expression MUL expression .)
    DIV             reduce using rule 61 (expression -> expression MUL expression .)
    MUL             reduce using rule 61 (expression -> expression MUL expression .)
    N_DIV           reduce using rule 61 (expression -> expression MUL expression .)
    PLUS            reduce using rule 61 (expression -> expression MUL expression .)
    MINUS           reduce using rule 61 (expression -> expression MUL expression .)
    CONNECT         reduce using rule 61 (expression -> expression MUL expression .)
    DOT             reduce using rule 61 (expression -> expression MUL expression .)
    POINTER         reduce using rule 61 (expression -> expression MUL expression .)
    DELETE          reduce using rule 61 (expression -> expression MUL expression .)
    DECLARE         reduce using rule 61 (expression -> expression MUL expression .)
    PUBLIC          reduce using rule 61 (expression -> expression MUL expression .)
    PRIVATE         reduce using rule 61 (expression -> expression MUL expression .)
    CONSTANT        reduce using rule 61 (expression -> expression MUL expression .)
    INPUT           reduce using rule 61 (expression -> expression MUL expression .)
    OUTPUT          reduce using rule 61 (expression -> expression MUL expression .)
    _OUTPUT         reduce using rule 61 (expression -> expression MUL expression .)
    IF              reduce using rule 61 (expression -> expression MUL expression .)
    CASE            reduce using rule 61 (expression -> expression MUL expression .)
    FOR             reduce using rule 61 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 61 (expression -> expression MUL expression .)
    WHILE           reduce using rule 61 (expression -> expression MUL expression .)
    PROCEDURE       reduce using rule 61 (expression -> expression MUL expression .)
    CALL            reduce using rule 61 (expression -> expression MUL expression .)
    FUNCTION        reduce using rule 61 (expression -> expression MUL expression .)
    RETURN          reduce using rule 61 (expression -> expression MUL expression .)
    OPENFILE        reduce using rule 61 (expression -> expression MUL expression .)
    READFILE        reduce using rule 61 (expression -> expression MUL expression .)
    WRITEFILE       reduce using rule 61 (expression -> expression MUL expression .)
    CLOSEFILE       reduce using rule 61 (expression -> expression MUL expression .)
    SEEK            reduce using rule 61 (expression -> expression MUL expression .)
    TYPE            reduce using rule 61 (expression -> expression MUL expression .)
    PASS            reduce using rule 61 (expression -> expression MUL expression .)
    IMPORT          reduce using rule 61 (expression -> expression MUL expression .)
    CLASS           reduce using rule 61 (expression -> expression MUL expression .)
    LEFT_SQUARE     reduce using rule 61 (expression -> expression MUL expression .)
    ID              reduce using rule 61 (expression -> expression MUL expression .)
    NOT             reduce using rule 61 (expression -> expression MUL expression .)
    LEFT_PAREN      reduce using rule 61 (expression -> expression MUL expression .)
    DATE            reduce using rule 61 (expression -> expression MUL expression .)
    BOOLEAN         reduce using rule 61 (expression -> expression MUL expression .)
    CHAR            reduce using rule 61 (expression -> expression MUL expression .)
    STRING          reduce using rule 61 (expression -> expression MUL expression .)
    REAL            reduce using rule 61 (expression -> expression MUL expression .)
    INTEGER         reduce using rule 61 (expression -> expression MUL expression .)
    NEW             reduce using rule 61 (expression -> expression MUL expression .)
    $end            reduce using rule 61 (expression -> expression MUL expression .)
    RIGHT_SQUARE    reduce using rule 61 (expression -> expression MUL expression .)
    COMMA           reduce using rule 61 (expression -> expression MUL expression .)
    UNTIL           reduce using rule 61 (expression -> expression MUL expression .)
    ENDWHILE        reduce using rule 61 (expression -> expression MUL expression .)
    ENDTYPE         reduce using rule 61 (expression -> expression MUL expression .)
    ENDCLASS        reduce using rule 61 (expression -> expression MUL expression .)
    ELSE            reduce using rule 61 (expression -> expression MUL expression .)
    ENDIF           reduce using rule 61 (expression -> expression MUL expression .)
    ENDPROCEDURE    reduce using rule 61 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 61 (expression -> expression MUL expression .)
    NEXT            reduce using rule 61 (expression -> expression MUL expression .)
    ENDFUNCTION     reduce using rule 61 (expression -> expression MUL expression .)
    THEN            reduce using rule 61 (expression -> expression MUL expression .)
    DO              reduce using rule 61 (expression -> expression MUL expression .)
    RIGHT_PAREN     reduce using rule 61 (expression -> expression MUL expression .)
    OTHERWISE       reduce using rule 61 (expression -> expression MUL expression .)
    TO              reduce using rule 61 (expression -> expression MUL expression .)
    COLON           reduce using rule 61 (expression -> expression MUL expression .)
    STEP            reduce using rule 61 (expression -> expression MUL expression .)

  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! MOD             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! MUL             [ shift and go to state 72 ]
  ! N_DIV           [ shift and go to state 73 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 144

    (62) expression -> expression N_DIV expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 62 (expression -> expression N_DIV expression .)
    OR              reduce using rule 62 (expression -> expression N_DIV expression .)
    AND             reduce using rule 62 (expression -> expression N_DIV expression .)
    EQUAL           reduce using rule 62 (expression -> expression N_DIV expression .)
    NOT_EQUAL       reduce using rule 62 (expression -> expression N_DIV expression .)
    LESS            reduce using rule 62 (expression -> expression N_DIV expression .)
    GREATER         reduce using rule 62 (expression -> expression N_DIV expression .)
    LESS_EQUAL      reduce using rule 62 (expression -> expression N_DIV expression .)
    GREATER_EQUAL   reduce using rule 62 (expression -> expression N_DIV expression .)
    MOD             reduce using rule 62 (expression -> expression N_DIV expression .)
    DIV             reduce using rule 62 (expression -> expression N_DIV expression .)
    MUL             reduce using rule 62 (expression -> expression N_DIV expression .)
    N_DIV           reduce using rule 62 (expression -> expression N_DIV expression .)
    PLUS            reduce using rule 62 (expression -> expression N_DIV expression .)
    MINUS           reduce using rule 62 (expression -> expression N_DIV expression .)
    CONNECT         reduce using rule 62 (expression -> expression N_DIV expression .)
    DOT             reduce using rule 62 (expression -> expression N_DIV expression .)
    POINTER         reduce using rule 62 (expression -> expression N_DIV expression .)
    DELETE          reduce using rule 62 (expression -> expression N_DIV expression .)
    DECLARE         reduce using rule 62 (expression -> expression N_DIV expression .)
    PUBLIC          reduce using rule 62 (expression -> expression N_DIV expression .)
    PRIVATE         reduce using rule 62 (expression -> expression N_DIV expression .)
    CONSTANT        reduce using rule 62 (expression -> expression N_DIV expression .)
    INPUT           reduce using rule 62 (expression -> expression N_DIV expression .)
    OUTPUT          reduce using rule 62 (expression -> expression N_DIV expression .)
    _OUTPUT         reduce using rule 62 (expression -> expression N_DIV expression .)
    IF              reduce using rule 62 (expression -> expression N_DIV expression .)
    CASE            reduce using rule 62 (expression -> expression N_DIV expression .)
    FOR             reduce using rule 62 (expression -> expression N_DIV expression .)
    REPEAT          reduce using rule 62 (expression -> expression N_DIV expression .)
    WHILE           reduce using rule 62 (expression -> expression N_DIV expression .)
    PROCEDURE       reduce using rule 62 (expression -> expression N_DIV expression .)
    CALL            reduce using rule 62 (expression -> expression N_DIV expression .)
    FUNCTION        reduce using rule 62 (expression -> expression N_DIV expression .)
    RETURN          reduce using rule 62 (expression -> expression N_DIV expression .)
    OPENFILE        reduce using rule 62 (expression -> expression N_DIV expression .)
    READFILE        reduce using rule 62 (expression -> expression N_DIV expression .)
    WRITEFILE       reduce using rule 62 (expression -> expression N_DIV expression .)
    CLOSEFILE       reduce using rule 62 (expression -> expression N_DIV expression .)
    SEEK            reduce using rule 62 (expression -> expression N_DIV expression .)
    TYPE            reduce using rule 62 (expression -> expression N_DIV expression .)
    PASS            reduce using rule 62 (expression -> expression N_DIV expression .)
    IMPORT          reduce using rule 62 (expression -> expression N_DIV expression .)
    CLASS           reduce using rule 62 (expression -> expression N_DIV expression .)
    LEFT_SQUARE     reduce using rule 62 (expression -> expression N_DIV expression .)
    ID              reduce using rule 62 (expression -> expression N_DIV expression .)
    NOT             reduce using rule 62 (expression -> expression N_DIV expression .)
    LEFT_PAREN      reduce using rule 62 (expression -> expression N_DIV expression .)
    DATE            reduce using rule 62 (expression -> expression N_DIV expression .)
    BOOLEAN         reduce using rule 62 (expression -> expression N_DIV expression .)
    CHAR            reduce using rule 62 (expression -> expression N_DIV expression .)
    STRING          reduce using rule 62 (expression -> expression N_DIV expression .)
    REAL            reduce using rule 62 (expression -> expression N_DIV expression .)
    INTEGER         reduce using rule 62 (expression -> expression N_DIV expression .)
    NEW             reduce using rule 62 (expression -> expression N_DIV expression .)
    $end            reduce using rule 62 (expression -> expression N_DIV expression .)
    RIGHT_SQUARE    reduce using rule 62 (expression -> expression N_DIV expression .)
    COMMA           reduce using rule 62 (expression -> expression N_DIV expression .)
    UNTIL           reduce using rule 62 (expression -> expression N_DIV expression .)
    ENDWHILE        reduce using rule 62 (expression -> expression N_DIV expression .)
    ENDTYPE         reduce using rule 62 (expression -> expression N_DIV expression .)
    ENDCLASS        reduce using rule 62 (expression -> expression N_DIV expression .)
    ELSE            reduce using rule 62 (expression -> expression N_DIV expression .)
    ENDIF           reduce using rule 62 (expression -> expression N_DIV expression .)
    ENDPROCEDURE    reduce using rule 62 (expression -> expression N_DIV expression .)
    SEMICOLON       reduce using rule 62 (expression -> expression N_DIV expression .)
    NEXT            reduce using rule 62 (expression -> expression N_DIV expression .)
    ENDFUNCTION     reduce using rule 62 (expression -> expression N_DIV expression .)
    THEN            reduce using rule 62 (expression -> expression N_DIV expression .)
    DO              reduce using rule 62 (expression -> expression N_DIV expression .)
    RIGHT_PAREN     reduce using rule 62 (expression -> expression N_DIV expression .)
    OTHERWISE       reduce using rule 62 (expression -> expression N_DIV expression .)
    TO              reduce using rule 62 (expression -> expression N_DIV expression .)
    COLON           reduce using rule 62 (expression -> expression N_DIV expression .)
    STEP            reduce using rule 62 (expression -> expression N_DIV expression .)

  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! MOD             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! MUL             [ shift and go to state 72 ]
  ! N_DIV           [ shift and go to state 73 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 145

    (65) expression -> expression PLUS expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 65 (expression -> expression PLUS expression .)
    OR              reduce using rule 65 (expression -> expression PLUS expression .)
    AND             reduce using rule 65 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 65 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 65 (expression -> expression PLUS expression .)
    LESS            reduce using rule 65 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 65 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 65 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 65 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 65 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 65 (expression -> expression PLUS expression .)
    CONNECT         reduce using rule 65 (expression -> expression PLUS expression .)
    DOT             reduce using rule 65 (expression -> expression PLUS expression .)
    POINTER         reduce using rule 65 (expression -> expression PLUS expression .)
    DELETE          reduce using rule 65 (expression -> expression PLUS expression .)
    DECLARE         reduce using rule 65 (expression -> expression PLUS expression .)
    PUBLIC          reduce using rule 65 (expression -> expression PLUS expression .)
    PRIVATE         reduce using rule 65 (expression -> expression PLUS expression .)
    CONSTANT        reduce using rule 65 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 65 (expression -> expression PLUS expression .)
    OUTPUT          reduce using rule 65 (expression -> expression PLUS expression .)
    _OUTPUT         reduce using rule 65 (expression -> expression PLUS expression .)
    IF              reduce using rule 65 (expression -> expression PLUS expression .)
    CASE            reduce using rule 65 (expression -> expression PLUS expression .)
    FOR             reduce using rule 65 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 65 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 65 (expression -> expression PLUS expression .)
    PROCEDURE       reduce using rule 65 (expression -> expression PLUS expression .)
    CALL            reduce using rule 65 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 65 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 65 (expression -> expression PLUS expression .)
    OPENFILE        reduce using rule 65 (expression -> expression PLUS expression .)
    READFILE        reduce using rule 65 (expression -> expression PLUS expression .)
    WRITEFILE       reduce using rule 65 (expression -> expression PLUS expression .)
    CLOSEFILE       reduce using rule 65 (expression -> expression PLUS expression .)
    SEEK            reduce using rule 65 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 65 (expression -> expression PLUS expression .)
    PASS            reduce using rule 65 (expression -> expression PLUS expression .)
    IMPORT          reduce using rule 65 (expression -> expression PLUS expression .)
    CLASS           reduce using rule 65 (expression -> expression PLUS expression .)
    LEFT_SQUARE     reduce using rule 65 (expression -> expression PLUS expression .)
    ID              reduce using rule 65 (expression -> expression PLUS expression .)
    NOT             reduce using rule 65 (expression -> expression PLUS expression .)
    LEFT_PAREN      reduce using rule 65 (expression -> expression PLUS expression .)
    DATE            reduce using rule 65 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 65 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 65 (expression -> expression PLUS expression .)
    STRING          reduce using rule 65 (expression -> expression PLUS expression .)
    REAL            reduce using rule 65 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 65 (expression -> expression PLUS expression .)
    NEW             reduce using rule 65 (expression -> expression PLUS expression .)
    $end            reduce using rule 65 (expression -> expression PLUS expression .)
    RIGHT_SQUARE    reduce using rule 65 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 65 (expression -> expression PLUS expression .)
    UNTIL           reduce using rule 65 (expression -> expression PLUS expression .)
    ENDWHILE        reduce using rule 65 (expression -> expression PLUS expression .)
    ENDTYPE         reduce using rule 65 (expression -> expression PLUS expression .)
    ENDCLASS        reduce using rule 65 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 65 (expression -> expression PLUS expression .)
    ENDIF           reduce using rule 65 (expression -> expression PLUS expression .)
    ENDPROCEDURE    reduce using rule 65 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 65 (expression -> expression PLUS expression .)
    NEXT            reduce using rule 65 (expression -> expression PLUS expression .)
    ENDFUNCTION     reduce using rule 65 (expression -> expression PLUS expression .)
    THEN            reduce using rule 65 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 65 (expression -> expression PLUS expression .)
    DO              reduce using rule 65 (expression -> expression PLUS expression .)
    OTHERWISE       reduce using rule 65 (expression -> expression PLUS expression .)
    TO              reduce using rule 65 (expression -> expression PLUS expression .)
    COLON           reduce using rule 65 (expression -> expression PLUS expression .)
    STEP            reduce using rule 65 (expression -> expression PLUS expression .)
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73

  ! MOD             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! N_DIV           [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 146

    (66) expression -> expression MINUS expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    ASSIGN          reduce using rule 66 (expression -> expression MINUS expression .)
    OR              reduce using rule 66 (expression -> expression MINUS expression .)
    AND             reduce using rule 66 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 66 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 66 (expression -> expression MINUS expression .)
    LESS            reduce using rule 66 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 66 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 66 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 66 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 66 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 66 (expression -> expression MINUS expression .)
    CONNECT         reduce using rule 66 (expression -> expression MINUS expression .)
    DOT             reduce using rule 66 (expression -> expression MINUS expression .)
    POINTER         reduce using rule 66 (expression -> expression MINUS expression .)
    DELETE          reduce using rule 66 (expression -> expression MINUS expression .)
    DECLARE         reduce using rule 66 (expression -> expression MINUS expression .)
    PUBLIC          reduce using rule 66 (expression -> expression MINUS expression .)
    PRIVATE         reduce using rule 66 (expression -> expression MINUS expression .)
    CONSTANT        reduce using rule 66 (expression -> expression MINUS expression .)
    INPUT           reduce using rule 66 (expression -> expression MINUS expression .)
    OUTPUT          reduce using rule 66 (expression -> expression MINUS expression .)
    _OUTPUT         reduce using rule 66 (expression -> expression MINUS expression .)
    IF              reduce using rule 66 (expression -> expression MINUS expression .)
    CASE            reduce using rule 66 (expression -> expression MINUS expression .)
    FOR             reduce using rule 66 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 66 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 66 (expression -> expression MINUS expression .)
    PROCEDURE       reduce using rule 66 (expression -> expression MINUS expression .)
    CALL            reduce using rule 66 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 66 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 66 (expression -> expression MINUS expression .)
    OPENFILE        reduce using rule 66 (expression -> expression MINUS expression .)
    READFILE        reduce using rule 66 (expression -> expression MINUS expression .)
    WRITEFILE       reduce using rule 66 (expression -> expression MINUS expression .)
    CLOSEFILE       reduce using rule 66 (expression -> expression MINUS expression .)
    SEEK            reduce using rule 66 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 66 (expression -> expression MINUS expression .)
    PASS            reduce using rule 66 (expression -> expression MINUS expression .)
    IMPORT          reduce using rule 66 (expression -> expression MINUS expression .)
    CLASS           reduce using rule 66 (expression -> expression MINUS expression .)
    LEFT_SQUARE     reduce using rule 66 (expression -> expression MINUS expression .)
    ID              reduce using rule 66 (expression -> expression MINUS expression .)
    NOT             reduce using rule 66 (expression -> expression MINUS expression .)
    LEFT_PAREN      reduce using rule 66 (expression -> expression MINUS expression .)
    DATE            reduce using rule 66 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 66 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 66 (expression -> expression MINUS expression .)
    STRING          reduce using rule 66 (expression -> expression MINUS expression .)
    REAL            reduce using rule 66 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 66 (expression -> expression MINUS expression .)
    NEW             reduce using rule 66 (expression -> expression MINUS expression .)
    $end            reduce using rule 66 (expression -> expression MINUS expression .)
    RIGHT_SQUARE    reduce using rule 66 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 66 (expression -> expression MINUS expression .)
    UNTIL           reduce using rule 66 (expression -> expression MINUS expression .)
    ENDWHILE        reduce using rule 66 (expression -> expression MINUS expression .)
    ENDTYPE         reduce using rule 66 (expression -> expression MINUS expression .)
    ENDCLASS        reduce using rule 66 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 66 (expression -> expression MINUS expression .)
    ENDIF           reduce using rule 66 (expression -> expression MINUS expression .)
    ENDPROCEDURE    reduce using rule 66 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 66 (expression -> expression MINUS expression .)
    NEXT            reduce using rule 66 (expression -> expression MINUS expression .)
    ENDFUNCTION     reduce using rule 66 (expression -> expression MINUS expression .)
    THEN            reduce using rule 66 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 66 (expression -> expression MINUS expression .)
    DO              reduce using rule 66 (expression -> expression MINUS expression .)
    OTHERWISE       reduce using rule 66 (expression -> expression MINUS expression .)
    TO              reduce using rule 66 (expression -> expression MINUS expression .)
    COLON           reduce using rule 66 (expression -> expression MINUS expression .)
    STEP            reduce using rule 66 (expression -> expression MINUS expression .)
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73

  ! MOD             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! N_DIV           [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 147

    (67) expression -> expression CONNECT expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    ASSIGN          reduce using rule 67 (expression -> expression CONNECT expression .)
    DELETE          reduce using rule 67 (expression -> expression CONNECT expression .)
    DECLARE         reduce using rule 67 (expression -> expression CONNECT expression .)
    PUBLIC          reduce using rule 67 (expression -> expression CONNECT expression .)
    PRIVATE         reduce using rule 67 (expression -> expression CONNECT expression .)
    CONSTANT        reduce using rule 67 (expression -> expression CONNECT expression .)
    INPUT           reduce using rule 67 (expression -> expression CONNECT expression .)
    OUTPUT          reduce using rule 67 (expression -> expression CONNECT expression .)
    _OUTPUT         reduce using rule 67 (expression -> expression CONNECT expression .)
    IF              reduce using rule 67 (expression -> expression CONNECT expression .)
    CASE            reduce using rule 67 (expression -> expression CONNECT expression .)
    FOR             reduce using rule 67 (expression -> expression CONNECT expression .)
    REPEAT          reduce using rule 67 (expression -> expression CONNECT expression .)
    WHILE           reduce using rule 67 (expression -> expression CONNECT expression .)
    PROCEDURE       reduce using rule 67 (expression -> expression CONNECT expression .)
    CALL            reduce using rule 67 (expression -> expression CONNECT expression .)
    FUNCTION        reduce using rule 67 (expression -> expression CONNECT expression .)
    RETURN          reduce using rule 67 (expression -> expression CONNECT expression .)
    OPENFILE        reduce using rule 67 (expression -> expression CONNECT expression .)
    READFILE        reduce using rule 67 (expression -> expression CONNECT expression .)
    WRITEFILE       reduce using rule 67 (expression -> expression CONNECT expression .)
    CLOSEFILE       reduce using rule 67 (expression -> expression CONNECT expression .)
    SEEK            reduce using rule 67 (expression -> expression CONNECT expression .)
    TYPE            reduce using rule 67 (expression -> expression CONNECT expression .)
    PASS            reduce using rule 67 (expression -> expression CONNECT expression .)
    IMPORT          reduce using rule 67 (expression -> expression CONNECT expression .)
    CLASS           reduce using rule 67 (expression -> expression CONNECT expression .)
    LEFT_SQUARE     reduce using rule 67 (expression -> expression CONNECT expression .)
    ID              reduce using rule 67 (expression -> expression CONNECT expression .)
    NOT             reduce using rule 67 (expression -> expression CONNECT expression .)
    LEFT_PAREN      reduce using rule 67 (expression -> expression CONNECT expression .)
    DATE            reduce using rule 67 (expression -> expression CONNECT expression .)
    BOOLEAN         reduce using rule 67 (expression -> expression CONNECT expression .)
    CHAR            reduce using rule 67 (expression -> expression CONNECT expression .)
    STRING          reduce using rule 67 (expression -> expression CONNECT expression .)
    REAL            reduce using rule 67 (expression -> expression CONNECT expression .)
    INTEGER         reduce using rule 67 (expression -> expression CONNECT expression .)
    NEW             reduce using rule 67 (expression -> expression CONNECT expression .)
    $end            reduce using rule 67 (expression -> expression CONNECT expression .)
    RIGHT_SQUARE    reduce using rule 67 (expression -> expression CONNECT expression .)
    COMMA           reduce using rule 67 (expression -> expression CONNECT expression .)
    UNTIL           reduce using rule 67 (expression -> expression CONNECT expression .)
    ENDWHILE        reduce using rule 67 (expression -> expression CONNECT expression .)
    ENDTYPE         reduce using rule 67 (expression -> expression CONNECT expression .)
    ENDCLASS        reduce using rule 67 (expression -> expression CONNECT expression .)
    ELSE            reduce using rule 67 (expression -> expression CONNECT expression .)
    ENDIF           reduce using rule 67 (expression -> expression CONNECT expression .)
    ENDPROCEDURE    reduce using rule 67 (expression -> expression CONNECT expression .)
    SEMICOLON       reduce using rule 67 (expression -> expression CONNECT expression .)
    NEXT            reduce using rule 67 (expression -> expression CONNECT expression .)
    ENDFUNCTION     reduce using rule 67 (expression -> expression CONNECT expression .)
    THEN            reduce using rule 67 (expression -> expression CONNECT expression .)
    DO              reduce using rule 67 (expression -> expression CONNECT expression .)
    RIGHT_PAREN     reduce using rule 67 (expression -> expression CONNECT expression .)
    OTHERWISE       reduce using rule 67 (expression -> expression CONNECT expression .)
    TO              reduce using rule 67 (expression -> expression CONNECT expression .)
    COLON           reduce using rule 67 (expression -> expression CONNECT expression .)
    STEP            reduce using rule 67 (expression -> expression CONNECT expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! OR              [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! AND             [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! EQUAL           [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! LESS            [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! GREATER         [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! MOD             [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! DIV             [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! MUL             [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! N_DIV           [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! PLUS            [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! CONNECT         [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! DOT             [ reduce using rule 67 (expression -> expression CONNECT expression .) ]
  ! POINTER         [ reduce using rule 67 (expression -> expression CONNECT expression .) ]


state 148

    (138) expression -> expression DOT expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    ASSIGN          reduce using rule 138 (expression -> expression DOT expression .)
    DELETE          reduce using rule 138 (expression -> expression DOT expression .)
    DECLARE         reduce using rule 138 (expression -> expression DOT expression .)
    PUBLIC          reduce using rule 138 (expression -> expression DOT expression .)
    PRIVATE         reduce using rule 138 (expression -> expression DOT expression .)
    CONSTANT        reduce using rule 138 (expression -> expression DOT expression .)
    INPUT           reduce using rule 138 (expression -> expression DOT expression .)
    OUTPUT          reduce using rule 138 (expression -> expression DOT expression .)
    _OUTPUT         reduce using rule 138 (expression -> expression DOT expression .)
    IF              reduce using rule 138 (expression -> expression DOT expression .)
    CASE            reduce using rule 138 (expression -> expression DOT expression .)
    FOR             reduce using rule 138 (expression -> expression DOT expression .)
    REPEAT          reduce using rule 138 (expression -> expression DOT expression .)
    WHILE           reduce using rule 138 (expression -> expression DOT expression .)
    PROCEDURE       reduce using rule 138 (expression -> expression DOT expression .)
    CALL            reduce using rule 138 (expression -> expression DOT expression .)
    FUNCTION        reduce using rule 138 (expression -> expression DOT expression .)
    RETURN          reduce using rule 138 (expression -> expression DOT expression .)
    OPENFILE        reduce using rule 138 (expression -> expression DOT expression .)
    READFILE        reduce using rule 138 (expression -> expression DOT expression .)
    WRITEFILE       reduce using rule 138 (expression -> expression DOT expression .)
    CLOSEFILE       reduce using rule 138 (expression -> expression DOT expression .)
    SEEK            reduce using rule 138 (expression -> expression DOT expression .)
    TYPE            reduce using rule 138 (expression -> expression DOT expression .)
    PASS            reduce using rule 138 (expression -> expression DOT expression .)
    IMPORT          reduce using rule 138 (expression -> expression DOT expression .)
    CLASS           reduce using rule 138 (expression -> expression DOT expression .)
    LEFT_SQUARE     reduce using rule 138 (expression -> expression DOT expression .)
    ID              reduce using rule 138 (expression -> expression DOT expression .)
    NOT             reduce using rule 138 (expression -> expression DOT expression .)
    LEFT_PAREN      reduce using rule 138 (expression -> expression DOT expression .)
    DATE            reduce using rule 138 (expression -> expression DOT expression .)
    BOOLEAN         reduce using rule 138 (expression -> expression DOT expression .)
    CHAR            reduce using rule 138 (expression -> expression DOT expression .)
    STRING          reduce using rule 138 (expression -> expression DOT expression .)
    REAL            reduce using rule 138 (expression -> expression DOT expression .)
    INTEGER         reduce using rule 138 (expression -> expression DOT expression .)
    NEW             reduce using rule 138 (expression -> expression DOT expression .)
    $end            reduce using rule 138 (expression -> expression DOT expression .)
    RIGHT_SQUARE    reduce using rule 138 (expression -> expression DOT expression .)
    COMMA           reduce using rule 138 (expression -> expression DOT expression .)
    UNTIL           reduce using rule 138 (expression -> expression DOT expression .)
    ENDWHILE        reduce using rule 138 (expression -> expression DOT expression .)
    ENDTYPE         reduce using rule 138 (expression -> expression DOT expression .)
    ENDCLASS        reduce using rule 138 (expression -> expression DOT expression .)
    ELSE            reduce using rule 138 (expression -> expression DOT expression .)
    ENDIF           reduce using rule 138 (expression -> expression DOT expression .)
    ENDPROCEDURE    reduce using rule 138 (expression -> expression DOT expression .)
    SEMICOLON       reduce using rule 138 (expression -> expression DOT expression .)
    NEXT            reduce using rule 138 (expression -> expression DOT expression .)
    ENDFUNCTION     reduce using rule 138 (expression -> expression DOT expression .)
    THEN            reduce using rule 138 (expression -> expression DOT expression .)
    DO              reduce using rule 138 (expression -> expression DOT expression .)
    RIGHT_PAREN     reduce using rule 138 (expression -> expression DOT expression .)
    OTHERWISE       reduce using rule 138 (expression -> expression DOT expression .)
    TO              reduce using rule 138 (expression -> expression DOT expression .)
    COLON           reduce using rule 138 (expression -> expression DOT expression .)
    STEP            reduce using rule 138 (expression -> expression DOT expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! OR              [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! AND             [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! EQUAL           [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! LESS            [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! GREATER         [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! MOD             [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! DIV             [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! MUL             [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! N_DIV           [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! PLUS            [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! MINUS           [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! CONNECT         [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! DOT             [ reduce using rule 138 (expression -> expression DOT expression .) ]
  ! POINTER         [ reduce using rule 138 (expression -> expression DOT expression .) ]


state 149

    (23) expression -> LEFT_SQUARE array_items RIGHT_SQUARE .

    ASSIGN          reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    OR              reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    AND             reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    EQUAL           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    LESS            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    GREATER         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    MOD             reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DIV             reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    MUL             reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    N_DIV           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    PLUS            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    MINUS           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CONNECT         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DOT             reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    POINTER         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DELETE          reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DECLARE         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    PUBLIC          reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    PRIVATE         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CONSTANT        reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    INPUT           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    OUTPUT          reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    _OUTPUT         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    IF              reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CASE            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    FOR             reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    REPEAT          reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    WHILE           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CALL            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    FUNCTION        reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    RETURN          reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    OPENFILE        reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    READFILE        reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    SEEK            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    TYPE            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    PASS            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    IMPORT          reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CLASS           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ID              reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    NOT             reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DATE            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CHAR            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    STRING          reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    REAL            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    INTEGER         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    NEW             reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    $end            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    COMMA           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    UNTIL           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ELSE            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDIF           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    NEXT            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    THEN            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DO              reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    OTHERWISE       reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    TO              reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    COLON           reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    STEP            reduce using rule 23 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)


state 150

    (25) array_items -> array_items COMMA . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 201

state 151

    (30) output_expression -> output_expression COMMA . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 202

state 152

    (32) statement -> IF expression THEN . statements ELSE statements ENDIF
    (33) statement -> IF expression THEN . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statements                     shift and go to state 203
    statement                      shift and go to state 2

state 153

    (34) statement -> CASE OF expression . cases ENDCASE
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER
    (35) cases -> . cases case
    (36) cases -> . case
    (37) case -> . case_expression COLON statements SEMICOLON
    (38) case -> . otherwise_statement SEMICOLON
    (39) case_expression -> . expression TO expression
    (40) case_expression -> . expression
    (41) otherwise_statement -> . OTHERWISE COLON statements
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 158
    DIV             shift and go to state 159
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 160
    MINUS           shift and go to state 161
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 162
    OTHERWISE       shift and go to state 209
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    NEW             shift and go to state 21

    expression                     shift and go to state 204
    cases                          shift and go to state 205
    case                           shift and go to state 206
    case_expression                shift and go to state 207
    otherwise_statement            shift and go to state 208

state 154

    (42) statement -> FOR ID ASSIGN . expression TO expression STEP expression statements NEXT ID
    (43) statement -> FOR ID ASSIGN . expression TO expression statements NEXT ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 210

state 155

    (44) statement -> REPEAT statements UNTIL . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 211

state 156

    (45) statement -> WHILE expression DO . statements ENDWHILE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statements                     shift and go to state 212
    statement                      shift and go to state 2

state 157

    (46) statement -> WHILE expression statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDWHILE        shift and go to state 213
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statement                      shift and go to state 46

state 158

    (59) expression -> expression MOD . expression
    (124) expression -> MOD . LEFT_PAREN parameters RIGHT_PAREN
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_PAREN      shift and go to state 214
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 141

state 159

    (60) expression -> expression DIV . expression
    (125) expression -> DIV . LEFT_PAREN parameters RIGHT_PAREN
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_PAREN      shift and go to state 215
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 142

state 160

    (65) expression -> expression PLUS . expression
    (64) expression -> PLUS . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 216

state 161

    (66) expression -> expression MINUS . expression
    (63) expression -> MINUS . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 217

state 162

    (143) expression -> expression POINTER .
    (142) expression -> POINTER . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

  ! shift/reduce conflict for LEFT_SQUARE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
  ! shift/reduce conflict for DATE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
    DO              reduce using rule 143 (expression -> expression POINTER .)
    OR              reduce using rule 143 (expression -> expression POINTER .)
    AND             reduce using rule 143 (expression -> expression POINTER .)
    EQUAL           reduce using rule 143 (expression -> expression POINTER .)
    NOT_EQUAL       reduce using rule 143 (expression -> expression POINTER .)
    LESS            reduce using rule 143 (expression -> expression POINTER .)
    GREATER         reduce using rule 143 (expression -> expression POINTER .)
    LESS_EQUAL      reduce using rule 143 (expression -> expression POINTER .)
    GREATER_EQUAL   reduce using rule 143 (expression -> expression POINTER .)
    MUL             reduce using rule 143 (expression -> expression POINTER .)
    N_DIV           reduce using rule 143 (expression -> expression POINTER .)
    CONNECT         reduce using rule 143 (expression -> expression POINTER .)
    DOT             reduce using rule 143 (expression -> expression POINTER .)
    DELETE          reduce using rule 143 (expression -> expression POINTER .)
    DECLARE         reduce using rule 143 (expression -> expression POINTER .)
    PUBLIC          reduce using rule 143 (expression -> expression POINTER .)
    PRIVATE         reduce using rule 143 (expression -> expression POINTER .)
    CONSTANT        reduce using rule 143 (expression -> expression POINTER .)
    INPUT           reduce using rule 143 (expression -> expression POINTER .)
    OUTPUT          reduce using rule 143 (expression -> expression POINTER .)
    _OUTPUT         reduce using rule 143 (expression -> expression POINTER .)
    IF              reduce using rule 143 (expression -> expression POINTER .)
    CASE            reduce using rule 143 (expression -> expression POINTER .)
    FOR             reduce using rule 143 (expression -> expression POINTER .)
    REPEAT          reduce using rule 143 (expression -> expression POINTER .)
    WHILE           reduce using rule 143 (expression -> expression POINTER .)
    PROCEDURE       reduce using rule 143 (expression -> expression POINTER .)
    CALL            reduce using rule 143 (expression -> expression POINTER .)
    FUNCTION        reduce using rule 143 (expression -> expression POINTER .)
    RETURN          reduce using rule 143 (expression -> expression POINTER .)
    OPENFILE        reduce using rule 143 (expression -> expression POINTER .)
    READFILE        reduce using rule 143 (expression -> expression POINTER .)
    WRITEFILE       reduce using rule 143 (expression -> expression POINTER .)
    CLOSEFILE       reduce using rule 143 (expression -> expression POINTER .)
    SEEK            reduce using rule 143 (expression -> expression POINTER .)
    TYPE            reduce using rule 143 (expression -> expression POINTER .)
    PASS            reduce using rule 143 (expression -> expression POINTER .)
    IMPORT          reduce using rule 143 (expression -> expression POINTER .)
    CLASS           reduce using rule 143 (expression -> expression POINTER .)
    OTHERWISE       reduce using rule 143 (expression -> expression POINTER .)
    STEP            reduce using rule 143 (expression -> expression POINTER .)
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

  ! MOD             [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! DIV             [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! PLUS            [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! MINUS           [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! POINTER         [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! LEFT_SQUARE     [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! ID              [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! NOT             [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! LEFT_PAREN      [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! DATE            [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! BOOLEAN         [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! CHAR            [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! STRING          [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! REAL            [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! INTEGER         [ reduce using rule 143 (expression -> expression POINTER .) ]
  ! NEW             [ reduce using rule 143 (expression -> expression POINTER .) ]

    expression                     shift and go to state 104

state 163

    (91) statement -> PROCEDURE ID LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> PROCEDURE ID LEFT_PAREN . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 220
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 219
    declare_parameter              shift and go to state 221

state 164

    (92) statement -> PROCEDURE NEW LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> PROCEDURE NEW LEFT_PAREN . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 225
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 224
    declare_parameter              shift and go to state 221

state 165

    (68) expression -> LEFT_PAREN expression RIGHT_PAREN .

    ASSIGN          reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OR              reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    AND             reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUAL           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MOD             reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIV             reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MUL             reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    N_DIV           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONNECT         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DOT             reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    POINTER         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DELETE          reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DECLARE         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PUBLIC          reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PRIVATE         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANT        reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INPUT           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OUTPUT          reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    _OUTPUT         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IF              reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CASE            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FOR             reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REPEAT          reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WHILE           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PROCEDURE       reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CALL            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FUNCTION        reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RETURN          reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OPENFILE        reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    READFILE        reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WRITEFILE       reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEEK            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TYPE            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PASS            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IMPORT          reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CLASS           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ID              reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT             reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DATE            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    BOOLEAN         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CHAR            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STRING          reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REAL            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INTEGER         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NEW             reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COMMA           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    UNTIL           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDWHILE        reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDTYPE         reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDCLASS        reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ELSE            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDIF           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEMICOLON       reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NEXT            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    THEN            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DO              reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OTHERWISE       reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TO              reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COLON           reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STEP            reduce using rule 68 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 166

    (150) expression -> NEW ID LEFT_PAREN . parameters RIGHT_PAREN
    (89) parameters -> . parameters COMMA expression
    (90) parameters -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    parameters                     shift and go to state 226
    expression                     shift and go to state 116

state 167

    (103) statement -> CALL ID LEFT_PAREN . parameters RIGHT_PAREN
    (104) statement -> CALL ID LEFT_PAREN . RIGHT_PAREN
    (89) parameters -> . parameters COMMA expression
    (90) parameters -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 228
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    parameters                     shift and go to state 227
    expression                     shift and go to state 116

state 168

    (105) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 230
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 229
    declare_parameter              shift and go to state 221

state 169

    (128) statement -> OPENFILE expression FOR . READ
    (129) statement -> OPENFILE expression FOR . WRITE
    (130) statement -> OPENFILE expression FOR . APPEND
    (131) statement -> OPENFILE expression FOR . RANDOM

    READ            shift and go to state 231
    WRITE           shift and go to state 232
    APPEND          shift and go to state 233
    RANDOM          shift and go to state 234


state 170

    (132) statement -> READFILE expression COMMA . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> READFILE expression COMMA . ID

    ID              shift and go to state 235


state 171

    (134) statement -> WRITEFILE expression COMMA . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 236

state 172

    (136) statement -> SEEK expression COMMA . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 237

state 173

    (137) statement -> TYPE ID statements . ENDTYPE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDTYPE         shift and go to state 238
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 174

    (139) statement -> TYPE ID EQUAL . LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> TYPE ID EQUAL . POINTER ID
    (151) statement -> TYPE ID EQUAL . SET OF ID

    LEFT_PAREN      shift and go to state 239
    POINTER         shift and go to state 240
    SET             shift and go to state 241


state 175

    (147) statement -> CLASS ID statements . ENDCLASS
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDCLASS        shift and go to state 242
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 176

    (148) statement -> CLASS ID INHERITS . ID statements ENDCLASS

    ID              shift and go to state 243


state 177

    (124) expression -> MOD LEFT_PAREN parameters . RIGHT_PAREN
    (89) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 244
    COMMA           shift and go to state 182


state 178

    (125) expression -> DIV LEFT_PAREN parameters . RIGHT_PAREN
    (89) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 245
    COMMA           shift and go to state 182


state 179

    (49) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    ASSIGN          reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OR              reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MOD             reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    N_DIV           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONNECT         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DOT             reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    POINTER         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DELETE          reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PUBLIC          reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PRIVATE         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    _OUTPUT         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLASS           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEW             reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COMMA           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    THEN            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DO              reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OTHERWISE       reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TO              reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COLON           reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STEP            reduce using rule 49 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 180

    (21) indexes -> indexes COMMA . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 246

state 181

    (123) expression -> ID LEFT_PAREN parameters RIGHT_PAREN .

    ASSIGN          reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OR              reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MOD             reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    N_DIV           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DOT             reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    POINTER         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DELETE          reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PUBLIC          reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PRIVATE         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    _OUTPUT         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLASS           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEW             reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDCLASS        reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DO              reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OTHERWISE       reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STEP            reduce using rule 123 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)


state 182

    (89) parameters -> parameters COMMA . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 247

state 183

    (4) statement -> DECLARE ID COLON ID .

    DELETE          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    DECLARE         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PUBLIC          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PRIVATE         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CONSTANT        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    INPUT           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    OUTPUT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    _OUTPUT         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    IF              reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CASE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    FOR             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    REPEAT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    WHILE           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PROCEDURE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CALL            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    FUNCTION        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    RETURN          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    OPENFILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    READFILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    WRITEFILE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CLOSEFILE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    SEEK            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    TYPE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PASS            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    IMPORT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CLASS           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    LEFT_SQUARE     reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ID              reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    NOT             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    MINUS           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PLUS            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    LEFT_PAREN      reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    DATE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    BOOLEAN         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CHAR            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    STRING          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    REAL            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    INTEGER         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    MOD             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    DIV             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    POINTER         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    NEW             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    $end            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    UNTIL           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDWHILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDTYPE         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDCLASS        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ELSE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDIF           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDPROCEDURE    reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    SEMICOLON       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    NEXT            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDFUNCTION     reduce using rule 4 (statement -> DECLARE ID COLON ID .)


state 184

    (14) statement -> DECLARE ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 248


state 185

    (6) statement -> DECLARE ids COLON ID .

    DELETE          reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    DECLARE         reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    PUBLIC          reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    PRIVATE         reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    CONSTANT        reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    INPUT           reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    OUTPUT          reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    _OUTPUT         reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    IF              reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    CASE            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    FOR             reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    REPEAT          reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    WHILE           reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    PROCEDURE       reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    CALL            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    FUNCTION        reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    RETURN          reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    OPENFILE        reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    READFILE        reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    WRITEFILE       reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    CLOSEFILE       reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    SEEK            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    TYPE            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    PASS            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    IMPORT          reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    CLASS           reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    LEFT_SQUARE     reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    ID              reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    NOT             reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    MINUS           reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    PLUS            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    LEFT_PAREN      reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    DATE            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    BOOLEAN         reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    CHAR            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    STRING          reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    REAL            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    INTEGER         reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    MOD             reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    DIV             reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    POINTER         reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    NEW             reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    $end            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    UNTIL           reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    ENDWHILE        reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    ENDTYPE         reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    ENDCLASS        reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    ELSE            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    ENDIF           reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    ENDPROCEDURE    reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    SEMICOLON       reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    NEXT            reduce using rule 6 (statement -> DECLARE ids COLON ID .)
    ENDFUNCTION     reduce using rule 6 (statement -> DECLARE ids COLON ID .)


state 186

    (8) ids -> ids COMMA ID .

    COLON           reduce using rule 8 (ids -> ids COMMA ID .)
    COMMA           reduce using rule 8 (ids -> ids COMMA ID .)


state 187

    (5) statement -> PUBLIC ID COLON ID .

    DELETE          reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    DECLARE         reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    PUBLIC          reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    PRIVATE         reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    CONSTANT        reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    INPUT           reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    OUTPUT          reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    _OUTPUT         reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    IF              reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    CASE            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    FOR             reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    REPEAT          reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    WHILE           reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    PROCEDURE       reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    CALL            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    FUNCTION        reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    RETURN          reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    OPENFILE        reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    READFILE        reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    WRITEFILE       reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    CLOSEFILE       reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    SEEK            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    TYPE            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    PASS            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    IMPORT          reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    CLASS           reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    LEFT_SQUARE     reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    ID              reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    NOT             reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    MINUS           reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    PLUS            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    LEFT_PAREN      reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    DATE            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    BOOLEAN         reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    CHAR            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    STRING          reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    REAL            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    INTEGER         reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    MOD             reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    DIV             reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    POINTER         reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    NEW             reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    $end            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    UNTIL           reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    ENDWHILE        reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    ENDTYPE         reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    ENDCLASS        reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    ELSE            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    ENDIF           reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    ENDPROCEDURE    reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    SEMICOLON       reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    NEXT            reduce using rule 5 (statement -> PUBLIC ID COLON ID .)
    ENDFUNCTION     reduce using rule 5 (statement -> PUBLIC ID COLON ID .)


state 188

    (15) statement -> PUBLIC ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 249


state 189

    (7) statement -> PUBLIC ids COLON ID .

    DELETE          reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    DECLARE         reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    PUBLIC          reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    PRIVATE         reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    CONSTANT        reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    INPUT           reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    OUTPUT          reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    _OUTPUT         reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    IF              reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    CASE            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    FOR             reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    REPEAT          reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    WHILE           reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    PROCEDURE       reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    CALL            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    FUNCTION        reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    RETURN          reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    OPENFILE        reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    READFILE        reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    WRITEFILE       reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    CLOSEFILE       reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    SEEK            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    TYPE            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    PASS            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    IMPORT          reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    CLASS           reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    LEFT_SQUARE     reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    ID              reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    NOT             reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    MINUS           reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    PLUS            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    LEFT_PAREN      reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    DATE            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    BOOLEAN         reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    CHAR            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    STRING          reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    REAL            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    INTEGER         reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    MOD             reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    DIV             reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    POINTER         reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    NEW             reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    $end            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    UNTIL           reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    ENDWHILE        reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    ENDTYPE         reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    ENDCLASS        reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    ELSE            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    ENDIF           reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    ENDPROCEDURE    reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    SEMICOLON       reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    NEXT            reduce using rule 7 (statement -> PUBLIC ids COLON ID .)
    ENDFUNCTION     reduce using rule 7 (statement -> PUBLIC ids COLON ID .)


state 190

    (95) statement -> PUBLIC PROCEDURE ID LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> PUBLIC PROCEDURE ID LEFT_PAREN . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 251
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 250
    declare_parameter              shift and go to state 221

state 191

    (96) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 253
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 252
    declare_parameter              shift and go to state 221

state 192

    (109) statement -> PUBLIC FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> PUBLIC FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> PUBLIC FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> PUBLIC FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> PUBLIC FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 255
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 254
    declare_parameter              shift and go to state 221

state 193

    (10) statement -> PRIVATE ID COLON ID .

    DELETE          reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    DECLARE         reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    PUBLIC          reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    PRIVATE         reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    CONSTANT        reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    INPUT           reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    OUTPUT          reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    _OUTPUT         reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    IF              reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    CASE            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    FOR             reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    REPEAT          reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    WHILE           reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    PROCEDURE       reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    CALL            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    FUNCTION        reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    RETURN          reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    OPENFILE        reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    READFILE        reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    WRITEFILE       reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    CLOSEFILE       reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    SEEK            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    TYPE            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    PASS            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    IMPORT          reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    CLASS           reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    LEFT_SQUARE     reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    ID              reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    NOT             reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    MINUS           reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    PLUS            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    LEFT_PAREN      reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    DATE            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    BOOLEAN         reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    CHAR            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    STRING          reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    REAL            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    INTEGER         reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    MOD             reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    DIV             reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    POINTER         reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    NEW             reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    $end            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    UNTIL           reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    ENDWHILE        reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    ENDTYPE         reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    ENDCLASS        reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    ELSE            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    ENDIF           reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    ENDPROCEDURE    reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    SEMICOLON       reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    NEXT            reduce using rule 10 (statement -> PRIVATE ID COLON ID .)
    ENDFUNCTION     reduce using rule 10 (statement -> PRIVATE ID COLON ID .)


state 194

    (16) statement -> PRIVATE ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 256


state 195

    (11) statement -> PRIVATE ids COLON ID .

    DELETE          reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    DECLARE         reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    PUBLIC          reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    PRIVATE         reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    CONSTANT        reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    INPUT           reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    OUTPUT          reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    _OUTPUT         reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    IF              reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    CASE            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    FOR             reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    REPEAT          reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    WHILE           reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    PROCEDURE       reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    CALL            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    FUNCTION        reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    RETURN          reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    OPENFILE        reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    READFILE        reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    WRITEFILE       reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    CLOSEFILE       reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    SEEK            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    TYPE            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    PASS            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    IMPORT          reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    CLASS           reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    LEFT_SQUARE     reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    ID              reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    NOT             reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    MINUS           reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    PLUS            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    LEFT_PAREN      reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    DATE            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    BOOLEAN         reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    CHAR            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    STRING          reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    REAL            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    INTEGER         reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    MOD             reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    DIV             reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    POINTER         reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    NEW             reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    $end            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    UNTIL           reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    ENDWHILE        reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    ENDTYPE         reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    ENDCLASS        reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    ELSE            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    ENDIF           reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    ENDPROCEDURE    reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    SEMICOLON       reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    NEXT            reduce using rule 11 (statement -> PRIVATE ids COLON ID .)
    ENDFUNCTION     reduce using rule 11 (statement -> PRIVATE ids COLON ID .)


state 196

    (99) statement -> PRIVATE PROCEDURE ID LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> PRIVATE PROCEDURE ID LEFT_PAREN . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 258
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 257
    declare_parameter              shift and go to state 221

state 197

    (100) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 260
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 259
    declare_parameter              shift and go to state 221

state 198

    (113) statement -> PRIVATE FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> PRIVATE FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> PRIVATE FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> PRIVATE FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> PRIVATE FUNCTION ID LEFT_PAREN . RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (75) declare_parameters -> . declare_parameters COMMA declare_parameter
    (76) declare_parameters -> . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    RIGHT_PAREN     shift and go to state 262
    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameters             shift and go to state 261
    declare_parameter              shift and go to state 221

state 199

    (12) statement -> CONSTANT ID EQUAL expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    DELETE          reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    DECLARE         reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    PUBLIC          reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    PRIVATE         reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    CONSTANT        reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    INPUT           reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    OUTPUT          reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    _OUTPUT         reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    IF              reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    CASE            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    FOR             reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    REPEAT          reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    WHILE           reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    PROCEDURE       reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    CALL            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    FUNCTION        reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    RETURN          reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    OPENFILE        reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    READFILE        reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    WRITEFILE       reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    CLOSEFILE       reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    SEEK            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    TYPE            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    PASS            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    IMPORT          reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    CLASS           reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    LEFT_SQUARE     reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    ID              reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    NOT             reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    LEFT_PAREN      reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    DATE            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    BOOLEAN         reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    CHAR            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    STRING          reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    REAL            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    INTEGER         reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    POINTER         reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    NEW             reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    $end            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    UNTIL           reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    ENDWHILE        reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    ENDTYPE         reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    ENDCLASS        reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    ELSE            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    ENDIF           reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    ENDPROCEDURE    reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    SEMICOLON       reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    NEXT            reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    ENDFUNCTION     reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77

  ! MINUS           [ reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .) ]
  ! PLUS            [ reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .) ]
  ! MOD             [ reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .) ]
  ! DIV             [ reduce using rule 12 (statement -> CONSTANT ID EQUAL expression .) ]
  ! POINTER         [ shift and go to state 78 ]


state 200

    (13) statement -> CONSTANT ID ASSIGN expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    DECLARE         reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    PUBLIC          reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    PRIVATE         reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    CONSTANT        reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    INPUT           reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    OUTPUT          reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    _OUTPUT         reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    IF              reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    CASE            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    FOR             reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    REPEAT          reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    WHILE           reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    PROCEDURE       reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    CALL            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    FUNCTION        reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    RETURN          reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    OPENFILE        reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    READFILE        reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    WRITEFILE       reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    CLOSEFILE       reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    SEEK            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    TYPE            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    PASS            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    IMPORT          reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    CLASS           reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    LEFT_SQUARE     reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    ID              reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    NOT             reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    LEFT_PAREN      reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    DATE            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    BOOLEAN         reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    CHAR            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    STRING          reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    REAL            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    INTEGER         reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    NEW             reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    $end            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    UNTIL           reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    ENDWHILE        reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    ENDTYPE         reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    ENDCLASS        reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    ELSE            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    ENDIF           reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    SEMICOLON       reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    NEXT            reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    ENDFUNCTION     reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .) ]
  ! MOD             [ reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .) ]
  ! DIV             [ reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .) ]
  ! POINTER         [ reduce using rule 13 (statement -> CONSTANT ID ASSIGN expression .) ]


state 201

    (25) array_items -> array_items COMMA expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    RIGHT_SQUARE    reduce using rule 25 (array_items -> array_items COMMA expression .)
    COMMA           reduce using rule 25 (array_items -> array_items COMMA expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 202

    (30) output_expression -> output_expression COMMA expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    COMMA           reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    DELETE          reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    DECLARE         reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    PUBLIC          reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    PRIVATE         reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    CONSTANT        reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    INPUT           reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    OUTPUT          reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    _OUTPUT         reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    IF              reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    CASE            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    FOR             reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    REPEAT          reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    WHILE           reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    PROCEDURE       reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    CALL            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    FUNCTION        reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    RETURN          reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    OPENFILE        reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    READFILE        reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    WRITEFILE       reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    CLOSEFILE       reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    SEEK            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    TYPE            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    PASS            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    IMPORT          reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    CLASS           reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    LEFT_SQUARE     reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    ID              reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    NOT             reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    LEFT_PAREN      reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    DATE            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    BOOLEAN         reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    CHAR            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    STRING          reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    REAL            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    INTEGER         reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    NEW             reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    $end            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    UNTIL           reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    ENDWHILE        reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    ENDTYPE         reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    ENDCLASS        reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    ELSE            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    ENDIF           reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    SEMICOLON       reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    NEXT            reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    ENDFUNCTION     reduce using rule 30 (output_expression -> output_expression COMMA expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 30 (output_expression -> output_expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 30 (output_expression -> output_expression COMMA expression .) ]
  ! MOD             [ reduce using rule 30 (output_expression -> output_expression COMMA expression .) ]
  ! DIV             [ reduce using rule 30 (output_expression -> output_expression COMMA expression .) ]
  ! POINTER         [ reduce using rule 30 (output_expression -> output_expression COMMA expression .) ]


state 203

    (32) statement -> IF expression THEN statements . ELSE statements ENDIF
    (33) statement -> IF expression THEN statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ELSE            shift and go to state 263
    ENDIF           shift and go to state 264
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statement                      shift and go to state 46

state 204

    (39) case_expression -> expression . TO expression
    (40) case_expression -> expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    TO              shift and go to state 265
    COLON           reduce using rule 40 (case_expression -> expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 205

    (34) statement -> CASE OF expression cases . ENDCASE
    (35) cases -> cases . case
    (37) case -> . case_expression COLON statements SEMICOLON
    (38) case -> . otherwise_statement SEMICOLON
    (39) case_expression -> . expression TO expression
    (40) case_expression -> . expression
    (41) otherwise_statement -> . OTHERWISE COLON statements
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDCASE         shift and go to state 266
    OTHERWISE       shift and go to state 209
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 204
    case                           shift and go to state 267
    case_expression                shift and go to state 207
    otherwise_statement            shift and go to state 208

state 206

    (36) cases -> case .

    ENDCASE         reduce using rule 36 (cases -> case .)
    OTHERWISE       reduce using rule 36 (cases -> case .)
    LEFT_SQUARE     reduce using rule 36 (cases -> case .)
    ID              reduce using rule 36 (cases -> case .)
    NOT             reduce using rule 36 (cases -> case .)
    MINUS           reduce using rule 36 (cases -> case .)
    PLUS            reduce using rule 36 (cases -> case .)
    LEFT_PAREN      reduce using rule 36 (cases -> case .)
    DATE            reduce using rule 36 (cases -> case .)
    BOOLEAN         reduce using rule 36 (cases -> case .)
    CHAR            reduce using rule 36 (cases -> case .)
    STRING          reduce using rule 36 (cases -> case .)
    REAL            reduce using rule 36 (cases -> case .)
    INTEGER         reduce using rule 36 (cases -> case .)
    MOD             reduce using rule 36 (cases -> case .)
    DIV             reduce using rule 36 (cases -> case .)
    POINTER         reduce using rule 36 (cases -> case .)
    NEW             reduce using rule 36 (cases -> case .)


state 207

    (37) case -> case_expression . COLON statements SEMICOLON

    COLON           shift and go to state 268


state 208

    (38) case -> otherwise_statement . SEMICOLON

    SEMICOLON       shift and go to state 269


state 209

    (41) otherwise_statement -> OTHERWISE . COLON statements

    COLON           shift and go to state 270


state 210

    (42) statement -> FOR ID ASSIGN expression . TO expression STEP expression statements NEXT ID
    (43) statement -> FOR ID ASSIGN expression . TO expression statements NEXT ID
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    TO              shift and go to state 271
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 211

    (44) statement -> REPEAT statements UNTIL expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    DECLARE         reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    PUBLIC          reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    PRIVATE         reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    CONSTANT        reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    INPUT           reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    OUTPUT          reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    _OUTPUT         reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    IF              reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    CASE            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    FOR             reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    REPEAT          reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    WHILE           reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    PROCEDURE       reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    CALL            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    FUNCTION        reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    RETURN          reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    OPENFILE        reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    READFILE        reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    WRITEFILE       reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    CLOSEFILE       reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    SEEK            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    TYPE            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    PASS            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    IMPORT          reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    CLASS           reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    LEFT_SQUARE     reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    ID              reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    NOT             reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    LEFT_PAREN      reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    DATE            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    BOOLEAN         reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    CHAR            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    STRING          reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    REAL            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    INTEGER         reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    NEW             reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    $end            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    UNTIL           reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    ENDWHILE        reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    ENDTYPE         reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    ENDCLASS        reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    ELSE            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    ENDIF           reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    ENDPROCEDURE    reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    SEMICOLON       reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    NEXT            reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    ENDFUNCTION     reduce using rule 44 (statement -> REPEAT statements UNTIL expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 44 (statement -> REPEAT statements UNTIL expression .) ]
  ! PLUS            [ reduce using rule 44 (statement -> REPEAT statements UNTIL expression .) ]
  ! MOD             [ reduce using rule 44 (statement -> REPEAT statements UNTIL expression .) ]
  ! DIV             [ reduce using rule 44 (statement -> REPEAT statements UNTIL expression .) ]
  ! POINTER         [ reduce using rule 44 (statement -> REPEAT statements UNTIL expression .) ]


state 212

    (45) statement -> WHILE expression DO statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDWHILE        shift and go to state 272
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statement                      shift and go to state 46

state 213

    (46) statement -> WHILE expression statements ENDWHILE .

    DELETE          reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    DECLARE         reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    PUBLIC          reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    PRIVATE         reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    CONSTANT        reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    INPUT           reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    OUTPUT          reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    _OUTPUT         reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    IF              reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    CASE            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    FOR             reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    REPEAT          reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    WHILE           reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    PROCEDURE       reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    CALL            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    FUNCTION        reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    RETURN          reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    OPENFILE        reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    READFILE        reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    WRITEFILE       reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    CLOSEFILE       reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    SEEK            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    TYPE            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    PASS            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    IMPORT          reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    CLASS           reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    LEFT_SQUARE     reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    ID              reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    NOT             reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    MINUS           reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    PLUS            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    DATE            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    BOOLEAN         reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    CHAR            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    STRING          reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    REAL            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    INTEGER         reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    MOD             reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    DIV             reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    POINTER         reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    NEW             reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    $end            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    UNTIL           reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    ENDWHILE        reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    ENDTYPE         reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    ENDCLASS        reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    ELSE            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    ENDIF           reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    SEMICOLON       reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    NEXT            reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 46 (statement -> WHILE expression statements ENDWHILE .)


state 214

    (124) expression -> MOD LEFT_PAREN . parameters RIGHT_PAREN
    (68) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (89) parameters -> . parameters COMMA expression
    (90) parameters -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    parameters                     shift and go to state 177
    expression                     shift and go to state 273

state 215

    (125) expression -> DIV LEFT_PAREN . parameters RIGHT_PAREN
    (68) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (89) parameters -> . parameters COMMA expression
    (90) parameters -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    parameters                     shift and go to state 178
    expression                     shift and go to state 273

state 216

    (65) expression -> expression PLUS expression .
    (64) expression -> PLUS expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! reduce/reduce conflict for OR resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MOD resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for N_DIV resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DOT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for POINTER resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DELETE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for _OUTPUT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PASS resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for IMPORT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CLASS resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LEFT_SQUARE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DATE resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 64 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NEW resolved using rule 64 (expression -> PLUS expression .)
    DO              reduce using rule 65 (expression -> expression PLUS expression .)
    OTHERWISE       reduce using rule 65 (expression -> expression PLUS expression .)
    STEP            reduce using rule 65 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 64 (expression -> PLUS expression .)
    OR              reduce using rule 64 (expression -> PLUS expression .)
    AND             reduce using rule 64 (expression -> PLUS expression .)
    EQUAL           reduce using rule 64 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 64 (expression -> PLUS expression .)
    LESS            reduce using rule 64 (expression -> PLUS expression .)
    GREATER         reduce using rule 64 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 64 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 64 (expression -> PLUS expression .)
    MOD             reduce using rule 64 (expression -> PLUS expression .)
    DIV             reduce using rule 64 (expression -> PLUS expression .)
    MUL             reduce using rule 64 (expression -> PLUS expression .)
    N_DIV           reduce using rule 64 (expression -> PLUS expression .)
    PLUS            reduce using rule 64 (expression -> PLUS expression .)
    MINUS           reduce using rule 64 (expression -> PLUS expression .)
    CONNECT         reduce using rule 64 (expression -> PLUS expression .)
    DOT             reduce using rule 64 (expression -> PLUS expression .)
    POINTER         reduce using rule 64 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 64 (expression -> PLUS expression .)
    DELETE          reduce using rule 64 (expression -> PLUS expression .)
    DECLARE         reduce using rule 64 (expression -> PLUS expression .)
    PUBLIC          reduce using rule 64 (expression -> PLUS expression .)
    PRIVATE         reduce using rule 64 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 64 (expression -> PLUS expression .)
    INPUT           reduce using rule 64 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 64 (expression -> PLUS expression .)
    _OUTPUT         reduce using rule 64 (expression -> PLUS expression .)
    IF              reduce using rule 64 (expression -> PLUS expression .)
    CASE            reduce using rule 64 (expression -> PLUS expression .)
    FOR             reduce using rule 64 (expression -> PLUS expression .)
    REPEAT          reduce using rule 64 (expression -> PLUS expression .)
    WHILE           reduce using rule 64 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 64 (expression -> PLUS expression .)
    CALL            reduce using rule 64 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 64 (expression -> PLUS expression .)
    RETURN          reduce using rule 64 (expression -> PLUS expression .)
    OPENFILE        reduce using rule 64 (expression -> PLUS expression .)
    READFILE        reduce using rule 64 (expression -> PLUS expression .)
    WRITEFILE       reduce using rule 64 (expression -> PLUS expression .)
    CLOSEFILE       reduce using rule 64 (expression -> PLUS expression .)
    SEEK            reduce using rule 64 (expression -> PLUS expression .)
    TYPE            reduce using rule 64 (expression -> PLUS expression .)
    PASS            reduce using rule 64 (expression -> PLUS expression .)
    IMPORT          reduce using rule 64 (expression -> PLUS expression .)
    CLASS           reduce using rule 64 (expression -> PLUS expression .)
    LEFT_SQUARE     reduce using rule 64 (expression -> PLUS expression .)
    ID              reduce using rule 64 (expression -> PLUS expression .)
    NOT             reduce using rule 64 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 64 (expression -> PLUS expression .)
    DATE            reduce using rule 64 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 64 (expression -> PLUS expression .)
    CHAR            reduce using rule 64 (expression -> PLUS expression .)
    STRING          reduce using rule 64 (expression -> PLUS expression .)
    REAL            reduce using rule 64 (expression -> PLUS expression .)
    INTEGER         reduce using rule 64 (expression -> PLUS expression .)
    NEW             reduce using rule 64 (expression -> PLUS expression .)
    TO              reduce using rule 64 (expression -> PLUS expression .)
    COLON           reduce using rule 64 (expression -> PLUS expression .)
    NEXT            reduce using rule 64 (expression -> PLUS expression .)

  ! OR              [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! N_DIV           [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! CONNECT         [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! POINTER         [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! DELETE          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! DECLARE         [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! PUBLIC          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! PRIVATE         [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! CONSTANT        [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! INPUT           [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! OUTPUT          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! _OUTPUT         [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! IF              [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! CASE            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! FOR             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! REPEAT          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! WHILE           [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! PROCEDURE       [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! CALL            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! FUNCTION        [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! RETURN          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! OPENFILE        [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! READFILE        [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! WRITEFILE       [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! CLOSEFILE       [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! SEEK            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! TYPE            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! PASS            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! IMPORT          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! CLASS           [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! LEFT_SQUARE     [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! ID              [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! NOT             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! DATE            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! BOOLEAN         [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! CHAR            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! STRING          [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! REAL            [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! INTEGER         [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! NEW             [ reduce using rule 65 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! MOD             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! MUL             [ shift and go to state 72 ]
  ! N_DIV           [ shift and go to state 73 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 217

    (66) expression -> expression MINUS expression .
    (63) expression -> MINUS expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! reduce/reduce conflict for OR resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MOD resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for N_DIV resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DOT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for POINTER resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DELETE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for _OUTPUT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PASS resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IMPORT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CLASS resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LEFT_SQUARE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DATE resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 63 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NEW resolved using rule 63 (expression -> MINUS expression .)
    DO              reduce using rule 66 (expression -> expression MINUS expression .)
    OTHERWISE       reduce using rule 66 (expression -> expression MINUS expression .)
    STEP            reduce using rule 66 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 63 (expression -> MINUS expression .)
    OR              reduce using rule 63 (expression -> MINUS expression .)
    AND             reduce using rule 63 (expression -> MINUS expression .)
    EQUAL           reduce using rule 63 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 63 (expression -> MINUS expression .)
    LESS            reduce using rule 63 (expression -> MINUS expression .)
    GREATER         reduce using rule 63 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 63 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 63 (expression -> MINUS expression .)
    MOD             reduce using rule 63 (expression -> MINUS expression .)
    DIV             reduce using rule 63 (expression -> MINUS expression .)
    MUL             reduce using rule 63 (expression -> MINUS expression .)
    N_DIV           reduce using rule 63 (expression -> MINUS expression .)
    PLUS            reduce using rule 63 (expression -> MINUS expression .)
    MINUS           reduce using rule 63 (expression -> MINUS expression .)
    CONNECT         reduce using rule 63 (expression -> MINUS expression .)
    DOT             reduce using rule 63 (expression -> MINUS expression .)
    POINTER         reduce using rule 63 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 63 (expression -> MINUS expression .)
    DELETE          reduce using rule 63 (expression -> MINUS expression .)
    DECLARE         reduce using rule 63 (expression -> MINUS expression .)
    PUBLIC          reduce using rule 63 (expression -> MINUS expression .)
    PRIVATE         reduce using rule 63 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 63 (expression -> MINUS expression .)
    INPUT           reduce using rule 63 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 63 (expression -> MINUS expression .)
    _OUTPUT         reduce using rule 63 (expression -> MINUS expression .)
    IF              reduce using rule 63 (expression -> MINUS expression .)
    CASE            reduce using rule 63 (expression -> MINUS expression .)
    FOR             reduce using rule 63 (expression -> MINUS expression .)
    REPEAT          reduce using rule 63 (expression -> MINUS expression .)
    WHILE           reduce using rule 63 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 63 (expression -> MINUS expression .)
    CALL            reduce using rule 63 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 63 (expression -> MINUS expression .)
    RETURN          reduce using rule 63 (expression -> MINUS expression .)
    OPENFILE        reduce using rule 63 (expression -> MINUS expression .)
    READFILE        reduce using rule 63 (expression -> MINUS expression .)
    WRITEFILE       reduce using rule 63 (expression -> MINUS expression .)
    CLOSEFILE       reduce using rule 63 (expression -> MINUS expression .)
    SEEK            reduce using rule 63 (expression -> MINUS expression .)
    TYPE            reduce using rule 63 (expression -> MINUS expression .)
    PASS            reduce using rule 63 (expression -> MINUS expression .)
    IMPORT          reduce using rule 63 (expression -> MINUS expression .)
    CLASS           reduce using rule 63 (expression -> MINUS expression .)
    LEFT_SQUARE     reduce using rule 63 (expression -> MINUS expression .)
    ID              reduce using rule 63 (expression -> MINUS expression .)
    NOT             reduce using rule 63 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 63 (expression -> MINUS expression .)
    DATE            reduce using rule 63 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 63 (expression -> MINUS expression .)
    CHAR            reduce using rule 63 (expression -> MINUS expression .)
    STRING          reduce using rule 63 (expression -> MINUS expression .)
    REAL            reduce using rule 63 (expression -> MINUS expression .)
    INTEGER         reduce using rule 63 (expression -> MINUS expression .)
    NEW             reduce using rule 63 (expression -> MINUS expression .)
    TO              reduce using rule 63 (expression -> MINUS expression .)
    COLON           reduce using rule 63 (expression -> MINUS expression .)
    NEXT            reduce using rule 63 (expression -> MINUS expression .)

  ! OR              [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! N_DIV           [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! CONNECT         [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! POINTER         [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DELETE          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DECLARE         [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PUBLIC          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PRIVATE         [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! CONSTANT        [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! INPUT           [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! OUTPUT          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! _OUTPUT         [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! IF              [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! CASE            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! FOR             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! REPEAT          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! WHILE           [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PROCEDURE       [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! CALL            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! FUNCTION        [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! RETURN          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! OPENFILE        [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! READFILE        [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! WRITEFILE       [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! CLOSEFILE       [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! SEEK            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! TYPE            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! PASS            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! IMPORT          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! CLASS           [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! LEFT_SQUARE     [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! ID              [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! DATE            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! BOOLEAN         [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! CHAR            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! STRING          [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! REAL            [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! INTEGER         [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! NEW             [ reduce using rule 66 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 62 ]
  ! AND             [ shift and go to state 63 ]
  ! EQUAL           [ shift and go to state 64 ]
  ! NOT_EQUAL       [ shift and go to state 65 ]
  ! LESS            [ shift and go to state 66 ]
  ! GREATER         [ shift and go to state 67 ]
  ! LESS_EQUAL      [ shift and go to state 68 ]
  ! GREATER_EQUAL   [ shift and go to state 69 ]
  ! MOD             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! MUL             [ shift and go to state 72 ]
  ! N_DIV           [ shift and go to state 73 ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! CONNECT         [ shift and go to state 76 ]
  ! DOT             [ shift and go to state 77 ]
  ! POINTER         [ shift and go to state 78 ]


state 218

    (77) declare_parameter -> ID . COLON ID
    (78) declare_parameter -> ID . COLON ARRAY
    (83) declare_parameter -> ID . COLON ARRAY OF ID
    (86) declare_parameter -> ID . LEFT_SQUARE RIGHT_SQUARE COLON ID

    COLON           shift and go to state 274
    LEFT_SQUARE     shift and go to state 275


state 219

    (91) statement -> PROCEDURE ID LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 276
    COMMA           shift and go to state 277


state 220

    (93) statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 278
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 221

    (76) declare_parameters -> declare_parameter .

    RIGHT_PAREN     reduce using rule 76 (declare_parameters -> declare_parameter .)
    COMMA           reduce using rule 76 (declare_parameters -> declare_parameter .)


state 222

    (79) declare_parameter -> BYREF . ID COLON ID
    (80) declare_parameter -> BYREF . ID COLON ARRAY
    (84) declare_parameter -> BYREF . ID COLON ARRAY OF ID
    (87) declare_parameter -> BYREF . ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    ID              shift and go to state 279


state 223

    (81) declare_parameter -> BYVAL . ID COLON ID
    (82) declare_parameter -> BYVAL . ID COLON ARRAY
    (85) declare_parameter -> BYVAL . ID COLON ARRAY OF ID
    (88) declare_parameter -> BYVAL . ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    ID              shift and go to state 280


state 224

    (92) statement -> PROCEDURE NEW LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 281
    COMMA           shift and go to state 277


state 225

    (94) statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 282
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 226

    (150) expression -> NEW ID LEFT_PAREN parameters . RIGHT_PAREN
    (89) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 283
    COMMA           shift and go to state 182


state 227

    (103) statement -> CALL ID LEFT_PAREN parameters . RIGHT_PAREN
    (89) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 284
    COMMA           shift and go to state 182


state 228

    (104) statement -> CALL ID LEFT_PAREN RIGHT_PAREN .

    DELETE          reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    DECLARE         reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    PUBLIC          reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    PRIVATE         reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    CONSTANT        reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    INPUT           reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    OUTPUT          reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    _OUTPUT         reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    IF              reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    CASE            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    FOR             reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    REPEAT          reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    WHILE           reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    PROCEDURE       reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    CALL            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    FUNCTION        reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    RETURN          reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    OPENFILE        reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    READFILE        reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    WRITEFILE       reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    SEEK            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    TYPE            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    PASS            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    IMPORT          reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    CLASS           reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    ID              reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    NOT             reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    MINUS           reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    PLUS            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    DATE            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    BOOLEAN         reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    CHAR            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    STRING          reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    REAL            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    INTEGER         reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    MOD             reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    DIV             reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    POINTER         reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    NEW             reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    $end            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    UNTIL           reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    ENDWHILE        reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    ENDTYPE         reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    ENDCLASS        reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    ELSE            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    ENDIF           reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    SEMICOLON       reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    NEXT            reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 104 (statement -> CALL ID LEFT_PAREN RIGHT_PAREN .)


state 229

    (105) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 285
    COMMA           shift and go to state 277


state 230

    (107) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (108) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION
    (118) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ARRAY OF ID statements ENDFUNCTION

    RETURNS         shift and go to state 286


state 231

    (128) statement -> OPENFILE expression FOR READ .

    DELETE          reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    DECLARE         reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    PUBLIC          reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    PRIVATE         reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    CONSTANT        reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    INPUT           reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    OUTPUT          reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    _OUTPUT         reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    IF              reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    CASE            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    FOR             reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    REPEAT          reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    WHILE           reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    PROCEDURE       reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    CALL            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    FUNCTION        reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    RETURN          reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    OPENFILE        reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    READFILE        reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    WRITEFILE       reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    CLOSEFILE       reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    SEEK            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    TYPE            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    PASS            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    IMPORT          reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    CLASS           reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    LEFT_SQUARE     reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    ID              reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    NOT             reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    MINUS           reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    PLUS            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    LEFT_PAREN      reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    DATE            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    BOOLEAN         reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    CHAR            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    STRING          reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    REAL            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    INTEGER         reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    MOD             reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    DIV             reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    POINTER         reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    NEW             reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    $end            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    UNTIL           reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    ENDWHILE        reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    ENDTYPE         reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    ENDCLASS        reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    ELSE            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    ENDIF           reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    ENDPROCEDURE    reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    SEMICOLON       reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    NEXT            reduce using rule 128 (statement -> OPENFILE expression FOR READ .)
    ENDFUNCTION     reduce using rule 128 (statement -> OPENFILE expression FOR READ .)


state 232

    (129) statement -> OPENFILE expression FOR WRITE .

    DELETE          reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    DECLARE         reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    PUBLIC          reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    PRIVATE         reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    CONSTANT        reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    INPUT           reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    OUTPUT          reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    _OUTPUT         reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    IF              reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    CASE            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    FOR             reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    REPEAT          reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    WHILE           reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    PROCEDURE       reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    CALL            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    FUNCTION        reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    RETURN          reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    OPENFILE        reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    READFILE        reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    WRITEFILE       reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    CLOSEFILE       reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    SEEK            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    TYPE            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    PASS            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    IMPORT          reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    CLASS           reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    LEFT_SQUARE     reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    ID              reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    NOT             reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    MINUS           reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    PLUS            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    LEFT_PAREN      reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    DATE            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    BOOLEAN         reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    CHAR            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    STRING          reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    REAL            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    INTEGER         reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    MOD             reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    DIV             reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    POINTER         reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    NEW             reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    $end            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    UNTIL           reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    ENDWHILE        reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    ENDTYPE         reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    ENDCLASS        reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    ELSE            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    ENDIF           reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    ENDPROCEDURE    reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    SEMICOLON       reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    NEXT            reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)
    ENDFUNCTION     reduce using rule 129 (statement -> OPENFILE expression FOR WRITE .)


state 233

    (130) statement -> OPENFILE expression FOR APPEND .

    DELETE          reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    DECLARE         reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    PUBLIC          reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    PRIVATE         reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    CONSTANT        reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    INPUT           reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    OUTPUT          reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    _OUTPUT         reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    IF              reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    CASE            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    FOR             reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    REPEAT          reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    WHILE           reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    PROCEDURE       reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    CALL            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    FUNCTION        reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    RETURN          reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    OPENFILE        reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    READFILE        reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    WRITEFILE       reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    CLOSEFILE       reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    SEEK            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    TYPE            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    PASS            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    IMPORT          reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    CLASS           reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    LEFT_SQUARE     reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    ID              reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    NOT             reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    MINUS           reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    PLUS            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    LEFT_PAREN      reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    DATE            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    BOOLEAN         reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    CHAR            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    STRING          reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    REAL            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    INTEGER         reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    MOD             reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    DIV             reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    POINTER         reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    NEW             reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    $end            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    UNTIL           reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    ENDWHILE        reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    ENDTYPE         reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    ENDCLASS        reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    ELSE            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    ENDIF           reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    ENDPROCEDURE    reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    SEMICOLON       reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    NEXT            reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)
    ENDFUNCTION     reduce using rule 130 (statement -> OPENFILE expression FOR APPEND .)


state 234

    (131) statement -> OPENFILE expression FOR RANDOM .

    DELETE          reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    DECLARE         reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    PUBLIC          reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    PRIVATE         reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    CONSTANT        reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    INPUT           reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    OUTPUT          reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    _OUTPUT         reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    IF              reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    CASE            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    FOR             reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    REPEAT          reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    WHILE           reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    PROCEDURE       reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    CALL            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    FUNCTION        reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    RETURN          reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    OPENFILE        reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    READFILE        reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    WRITEFILE       reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    CLOSEFILE       reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    SEEK            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    TYPE            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    PASS            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    IMPORT          reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    CLASS           reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    LEFT_SQUARE     reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    ID              reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    NOT             reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    MINUS           reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    PLUS            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    LEFT_PAREN      reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    DATE            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    BOOLEAN         reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    CHAR            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    STRING          reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    REAL            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    INTEGER         reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    MOD             reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    DIV             reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    POINTER         reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    NEW             reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    $end            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    UNTIL           reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    ENDWHILE        reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    ENDTYPE         reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    ENDCLASS        reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    ELSE            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    ENDIF           reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    ENDPROCEDURE    reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    SEMICOLON       reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    NEXT            reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)
    ENDFUNCTION     reduce using rule 131 (statement -> OPENFILE expression FOR RANDOM .)


state 235

    (132) statement -> READFILE expression COMMA ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> READFILE expression COMMA ID .

  ! shift/reduce conflict for LEFT_SQUARE resolved as shift
    LEFT_SQUARE     shift and go to state 287
    DELETE          reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    DECLARE         reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    PUBLIC          reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    PRIVATE         reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    CONSTANT        reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    INPUT           reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    OUTPUT          reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    _OUTPUT         reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    IF              reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    CASE            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    FOR             reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    REPEAT          reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    WHILE           reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    PROCEDURE       reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    CALL            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    FUNCTION        reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    RETURN          reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    OPENFILE        reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    READFILE        reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    WRITEFILE       reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    CLOSEFILE       reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    SEEK            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    TYPE            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    PASS            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    IMPORT          reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    CLASS           reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    ID              reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    NOT             reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    MINUS           reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    PLUS            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    LEFT_PAREN      reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    DATE            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    BOOLEAN         reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    CHAR            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    STRING          reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    REAL            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    INTEGER         reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    MOD             reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    DIV             reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    POINTER         reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    NEW             reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    $end            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    UNTIL           reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    ENDWHILE        reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    ENDTYPE         reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    ENDCLASS        reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    ELSE            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    ENDIF           reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    ENDPROCEDURE    reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    SEMICOLON       reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    NEXT            reduce using rule 133 (statement -> READFILE expression COMMA ID .)
    ENDFUNCTION     reduce using rule 133 (statement -> READFILE expression COMMA ID .)

  ! LEFT_SQUARE     [ reduce using rule 133 (statement -> READFILE expression COMMA ID .) ]


state 236

    (134) statement -> WRITEFILE expression COMMA expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    DECLARE         reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    PUBLIC          reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    PRIVATE         reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    CONSTANT        reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    INPUT           reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    OUTPUT          reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    _OUTPUT         reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    IF              reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    CASE            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    FOR             reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    REPEAT          reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    WHILE           reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    PROCEDURE       reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    CALL            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    FUNCTION        reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    RETURN          reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    OPENFILE        reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    READFILE        reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    WRITEFILE       reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    CLOSEFILE       reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    SEEK            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    TYPE            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    PASS            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    IMPORT          reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    CLASS           reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    LEFT_SQUARE     reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    ID              reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    NOT             reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    LEFT_PAREN      reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    DATE            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    BOOLEAN         reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    CHAR            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    STRING          reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    REAL            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    INTEGER         reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    NEW             reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    $end            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    UNTIL           reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    ENDWHILE        reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    ENDTYPE         reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    ENDCLASS        reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    ELSE            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    ENDIF           reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    SEMICOLON       reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    NEXT            reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    ENDFUNCTION     reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .) ]
  ! MOD             [ reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .) ]
  ! DIV             [ reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .) ]
  ! POINTER         [ reduce using rule 134 (statement -> WRITEFILE expression COMMA expression .) ]


state 237

    (136) statement -> SEEK expression COMMA expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for POINTER resolved as shift
    DELETE          reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    DECLARE         reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    PUBLIC          reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    PRIVATE         reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    CONSTANT        reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    INPUT           reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    OUTPUT          reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    _OUTPUT         reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    IF              reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    CASE            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    FOR             reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    REPEAT          reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    WHILE           reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    PROCEDURE       reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    CALL            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    FUNCTION        reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    RETURN          reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    OPENFILE        reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    READFILE        reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    WRITEFILE       reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    CLOSEFILE       reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    SEEK            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    TYPE            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    PASS            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    IMPORT          reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    CLASS           reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    LEFT_SQUARE     reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    ID              reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    NOT             reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    LEFT_PAREN      reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    DATE            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    BOOLEAN         reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    CHAR            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    STRING          reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    REAL            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    INTEGER         reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    NEW             reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    $end            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    UNTIL           reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    ENDWHILE        reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    ENDTYPE         reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    ENDCLASS        reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    ELSE            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    ENDIF           reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    SEMICOLON       reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    NEXT            reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    ENDFUNCTION     reduce using rule 136 (statement -> SEEK expression COMMA expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! MINUS           [ reduce using rule 136 (statement -> SEEK expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 136 (statement -> SEEK expression COMMA expression .) ]
  ! MOD             [ reduce using rule 136 (statement -> SEEK expression COMMA expression .) ]
  ! DIV             [ reduce using rule 136 (statement -> SEEK expression COMMA expression .) ]
  ! POINTER         [ reduce using rule 136 (statement -> SEEK expression COMMA expression .) ]


state 238

    (137) statement -> TYPE ID statements ENDTYPE .

    DELETE          reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    DECLARE         reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    PUBLIC          reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    PRIVATE         reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    CONSTANT        reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    INPUT           reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    OUTPUT          reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    _OUTPUT         reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    IF              reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    CASE            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    FOR             reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    REPEAT          reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    WHILE           reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    PROCEDURE       reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    CALL            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    FUNCTION        reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    RETURN          reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    OPENFILE        reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    READFILE        reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    WRITEFILE       reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    CLOSEFILE       reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    SEEK            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    TYPE            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    PASS            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    IMPORT          reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    CLASS           reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    LEFT_SQUARE     reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    ID              reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    NOT             reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    MINUS           reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    PLUS            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    LEFT_PAREN      reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    DATE            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    BOOLEAN         reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    CHAR            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    STRING          reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    REAL            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    INTEGER         reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    MOD             reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    DIV             reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    POINTER         reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    NEW             reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    $end            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    UNTIL           reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    ENDWHILE        reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    ENDTYPE         reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    ENDCLASS        reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    ELSE            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    ENDIF           reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    ENDPROCEDURE    reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    SEMICOLON       reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    NEXT            reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)
    ENDFUNCTION     reduce using rule 137 (statement -> TYPE ID statements ENDTYPE .)


state 239

    (139) statement -> TYPE ID EQUAL LEFT_PAREN . enumerate_items RIGHT_PAREN
    (140) enumerate_items -> . enumerate_items COMMA ID
    (141) enumerate_items -> . ID

    ID              shift and go to state 288

    enumerate_items                shift and go to state 289

state 240

    (144) statement -> TYPE ID EQUAL POINTER . ID

    ID              shift and go to state 290


state 241

    (151) statement -> TYPE ID EQUAL SET . OF ID

    OF              shift and go to state 291


state 242

    (147) statement -> CLASS ID statements ENDCLASS .

    DELETE          reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    DECLARE         reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    PUBLIC          reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    PRIVATE         reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    CONSTANT        reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    INPUT           reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    OUTPUT          reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    _OUTPUT         reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    IF              reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    CASE            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    FOR             reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    REPEAT          reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    WHILE           reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    PROCEDURE       reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    CALL            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    FUNCTION        reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    RETURN          reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    OPENFILE        reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    READFILE        reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    WRITEFILE       reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    CLOSEFILE       reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    SEEK            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    TYPE            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    PASS            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    IMPORT          reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    CLASS           reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    LEFT_SQUARE     reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    ID              reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    NOT             reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    MINUS           reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    PLUS            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    LEFT_PAREN      reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    DATE            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    BOOLEAN         reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    CHAR            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    STRING          reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    REAL            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    INTEGER         reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    MOD             reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    DIV             reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    POINTER         reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    NEW             reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    $end            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    UNTIL           reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    ENDWHILE        reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    ENDTYPE         reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    ENDCLASS        reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    ELSE            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    ENDIF           reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    ENDPROCEDURE    reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    SEMICOLON       reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    NEXT            reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)
    ENDFUNCTION     reduce using rule 147 (statement -> CLASS ID statements ENDCLASS .)


state 243

    (148) statement -> CLASS ID INHERITS ID . statements ENDCLASS
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 292
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 244

    (124) expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .

    ASSIGN          reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    OR              reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    MOD             reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    N_DIV           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    DOT             reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    POINTER         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    DELETE          reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    PUBLIC          reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    PRIVATE         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    _OUTPUT         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    CLASS           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    NEW             reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    ENDCLASS        reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    DO              reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    OTHERWISE       reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)
    STEP            reduce using rule 124 (expression -> MOD LEFT_PAREN parameters RIGHT_PAREN .)


state 245

    (125) expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .

    ASSIGN          reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    OR              reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    MOD             reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    N_DIV           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    DOT             reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    POINTER         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    DELETE          reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    PUBLIC          reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    PRIVATE         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    _OUTPUT         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    CLASS           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    NEW             reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    ENDCLASS        reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    DO              reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    OTHERWISE       reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)
    STEP            reduce using rule 125 (expression -> DIV LEFT_PAREN parameters RIGHT_PAREN .)


state 246

    (21) indexes -> indexes COMMA expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    RIGHT_SQUARE    reduce using rule 21 (indexes -> indexes COMMA expression .)
    COMMA           reduce using rule 21 (indexes -> indexes COMMA expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 247

    (89) parameters -> parameters COMMA expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    RIGHT_PAREN     reduce using rule 89 (parameters -> parameters COMMA expression .)
    COMMA           reduce using rule 89 (parameters -> parameters COMMA expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 248

    (14) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (17) dimensions -> . dimensions COMMA dimension
    (18) dimensions -> . dimension
    (19) dimension -> . expression COLON expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    dimensions                     shift and go to state 293
    dimension                      shift and go to state 294
    expression                     shift and go to state 295

state 249

    (15) statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (17) dimensions -> . dimensions COMMA dimension
    (18) dimensions -> . dimension
    (19) dimension -> . expression COLON expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    dimensions                     shift and go to state 296
    dimension                      shift and go to state 294
    expression                     shift and go to state 295

state 250

    (95) statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 297
    COMMA           shift and go to state 277


state 251

    (97) statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 298
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 252

    (96) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 299
    COMMA           shift and go to state 277


state 253

    (98) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 300
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 254

    (109) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 301
    COMMA           shift and go to state 277


state 255

    (111) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (112) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION
    (120) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ARRAY OF ID statements ENDFUNCTION

    RETURNS         shift and go to state 302


state 256

    (16) statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (17) dimensions -> . dimensions COMMA dimension
    (18) dimensions -> . dimension
    (19) dimension -> . expression COLON expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    dimensions                     shift and go to state 303
    dimension                      shift and go to state 294
    expression                     shift and go to state 295

state 257

    (99) statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 304
    COMMA           shift and go to state 277


state 258

    (101) statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 305
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 259

    (100) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 306
    COMMA           shift and go to state 277


state 260

    (102) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 307
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 261

    (113) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (75) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 308
    COMMA           shift and go to state 277


state 262

    (115) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (116) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION
    (122) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN . RETURNS ARRAY OF ID statements ENDFUNCTION

    RETURNS         shift and go to state 309


state 263

    (32) statement -> IF expression THEN statements ELSE . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statements                     shift and go to state 310
    statement                      shift and go to state 2

state 264

    (33) statement -> IF expression THEN statements ENDIF .

    DELETE          reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    DECLARE         reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    PUBLIC          reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    PRIVATE         reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    CONSTANT        reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    INPUT           reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    OUTPUT          reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    _OUTPUT         reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    IF              reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    CASE            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    FOR             reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    REPEAT          reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    WHILE           reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    PROCEDURE       reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    CALL            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    FUNCTION        reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    RETURN          reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    OPENFILE        reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    READFILE        reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    WRITEFILE       reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    CLOSEFILE       reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    SEEK            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    TYPE            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    PASS            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    IMPORT          reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    CLASS           reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    LEFT_SQUARE     reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    ID              reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    NOT             reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    MINUS           reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    PLUS            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    LEFT_PAREN      reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    DATE            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    BOOLEAN         reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    CHAR            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    STRING          reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    REAL            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    INTEGER         reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    MOD             reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    DIV             reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    POINTER         reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    NEW             reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    $end            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    UNTIL           reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    ENDWHILE        reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    ENDTYPE         reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    ENDCLASS        reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    ELSE            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    ENDIF           reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    ENDPROCEDURE    reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    SEMICOLON       reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    NEXT            reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)
    ENDFUNCTION     reduce using rule 33 (statement -> IF expression THEN statements ENDIF .)


state 265

    (39) case_expression -> expression TO . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 311

state 266

    (34) statement -> CASE OF expression cases ENDCASE .

    DELETE          reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    DECLARE         reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    PUBLIC          reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    PRIVATE         reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    CONSTANT        reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    INPUT           reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    OUTPUT          reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    _OUTPUT         reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    IF              reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    CASE            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    FOR             reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    REPEAT          reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    WHILE           reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    PROCEDURE       reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    CALL            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    FUNCTION        reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    RETURN          reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    OPENFILE        reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    READFILE        reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    WRITEFILE       reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    CLOSEFILE       reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    SEEK            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    TYPE            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    PASS            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    IMPORT          reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    CLASS           reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    LEFT_SQUARE     reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    ID              reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    NOT             reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    MINUS           reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    PLUS            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    LEFT_PAREN      reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    DATE            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    BOOLEAN         reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    CHAR            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    STRING          reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    REAL            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    INTEGER         reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    MOD             reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    DIV             reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    POINTER         reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    NEW             reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    $end            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    UNTIL           reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    ENDWHILE        reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    ENDTYPE         reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    ENDCLASS        reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    ELSE            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    ENDIF           reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    ENDPROCEDURE    reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    SEMICOLON       reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    NEXT            reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)
    ENDFUNCTION     reduce using rule 34 (statement -> CASE OF expression cases ENDCASE .)


state 267

    (35) cases -> cases case .

    ENDCASE         reduce using rule 35 (cases -> cases case .)
    OTHERWISE       reduce using rule 35 (cases -> cases case .)
    LEFT_SQUARE     reduce using rule 35 (cases -> cases case .)
    ID              reduce using rule 35 (cases -> cases case .)
    NOT             reduce using rule 35 (cases -> cases case .)
    MINUS           reduce using rule 35 (cases -> cases case .)
    PLUS            reduce using rule 35 (cases -> cases case .)
    LEFT_PAREN      reduce using rule 35 (cases -> cases case .)
    DATE            reduce using rule 35 (cases -> cases case .)
    BOOLEAN         reduce using rule 35 (cases -> cases case .)
    CHAR            reduce using rule 35 (cases -> cases case .)
    STRING          reduce using rule 35 (cases -> cases case .)
    REAL            reduce using rule 35 (cases -> cases case .)
    INTEGER         reduce using rule 35 (cases -> cases case .)
    MOD             reduce using rule 35 (cases -> cases case .)
    DIV             reduce using rule 35 (cases -> cases case .)
    POINTER         reduce using rule 35 (cases -> cases case .)
    NEW             reduce using rule 35 (cases -> cases case .)


state 268

    (37) case -> case_expression COLON . statements SEMICOLON
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 312
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 269

    (38) case -> otherwise_statement SEMICOLON .

    ENDCASE         reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    OTHERWISE       reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    LEFT_SQUARE     reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    ID              reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    NOT             reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    MINUS           reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    PLUS            reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    LEFT_PAREN      reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    DATE            reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    BOOLEAN         reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    CHAR            reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    STRING          reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    REAL            reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    INTEGER         reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    MOD             reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    DIV             reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    POINTER         reduce using rule 38 (case -> otherwise_statement SEMICOLON .)
    NEW             reduce using rule 38 (case -> otherwise_statement SEMICOLON .)


state 270

    (41) otherwise_statement -> OTHERWISE COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 313
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 271

    (42) statement -> FOR ID ASSIGN expression TO . expression STEP expression statements NEXT ID
    (43) statement -> FOR ID ASSIGN expression TO . expression statements NEXT ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 314

state 272

    (45) statement -> WHILE expression DO statements ENDWHILE .

    DELETE          reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    DECLARE         reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    PUBLIC          reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    PRIVATE         reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    CONSTANT        reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    INPUT           reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    OUTPUT          reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    _OUTPUT         reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    IF              reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    CASE            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    FOR             reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    REPEAT          reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    WHILE           reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    PROCEDURE       reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    CALL            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    FUNCTION        reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    RETURN          reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    OPENFILE        reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    READFILE        reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    WRITEFILE       reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    CLOSEFILE       reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    SEEK            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    TYPE            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    PASS            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    IMPORT          reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    CLASS           reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    LEFT_SQUARE     reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    ID              reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    NOT             reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    MINUS           reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    PLUS            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    DATE            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    BOOLEAN         reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    CHAR            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    STRING          reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    REAL            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    INTEGER         reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    MOD             reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    DIV             reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    POINTER         reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    NEW             reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    $end            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    UNTIL           reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDWHILE        reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDTYPE         reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDCLASS        reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    ELSE            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDIF           reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    SEMICOLON       reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    NEXT            reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 45 (statement -> WHILE expression DO statements ENDWHILE .)


state 273

    (68) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (90) parameters -> expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

  ! shift/reduce conflict for RIGHT_PAREN resolved as shift
    RIGHT_PAREN     shift and go to state 165
    COMMA           reduce using rule 90 (parameters -> expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78

  ! RIGHT_PAREN     [ reduce using rule 90 (parameters -> expression .) ]


state 274

    (77) declare_parameter -> ID COLON . ID
    (78) declare_parameter -> ID COLON . ARRAY
    (83) declare_parameter -> ID COLON . ARRAY OF ID

    ID              shift and go to state 315
    ARRAY           shift and go to state 316


state 275

    (86) declare_parameter -> ID LEFT_SQUARE . RIGHT_SQUARE COLON ID

    RIGHT_SQUARE    shift and go to state 317


state 276

    (91) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 318
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 277

    (75) declare_parameters -> declare_parameters COMMA . declare_parameter
    (77) declare_parameter -> . ID COLON ID
    (78) declare_parameter -> . ID COLON ARRAY
    (79) declare_parameter -> . BYREF ID COLON ID
    (80) declare_parameter -> . BYREF ID COLON ARRAY
    (81) declare_parameter -> . BYVAL ID COLON ID
    (82) declare_parameter -> . BYVAL ID COLON ARRAY
    (83) declare_parameter -> . ID COLON ARRAY OF ID
    (84) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (85) declare_parameter -> . BYVAL ID COLON ARRAY OF ID
    (86) declare_parameter -> . ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (87) declare_parameter -> . BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID
    (88) declare_parameter -> . BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID

    ID              shift and go to state 218
    BYREF           shift and go to state 222
    BYVAL           shift and go to state 223

    declare_parameter              shift and go to state 319

state 278

    (93) statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 320
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 279

    (79) declare_parameter -> BYREF ID . COLON ID
    (80) declare_parameter -> BYREF ID . COLON ARRAY
    (84) declare_parameter -> BYREF ID . COLON ARRAY OF ID
    (87) declare_parameter -> BYREF ID . LEFT_SQUARE RIGHT_SQUARE COLON ID

    COLON           shift and go to state 321
    LEFT_SQUARE     shift and go to state 322


state 280

    (81) declare_parameter -> BYVAL ID . COLON ID
    (82) declare_parameter -> BYVAL ID . COLON ARRAY
    (85) declare_parameter -> BYVAL ID . COLON ARRAY OF ID
    (88) declare_parameter -> BYVAL ID . LEFT_SQUARE RIGHT_SQUARE COLON ID

    COLON           shift and go to state 323
    LEFT_SQUARE     shift and go to state 324


state 281

    (92) statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 325
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 282

    (94) statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 326
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 283

    (150) expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .

    ASSIGN          reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    OR              reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    MOD             reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    N_DIV           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DOT             reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    POINTER         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DELETE          reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    PUBLIC          reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    PRIVATE         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    _OUTPUT         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLASS           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEW             reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDCLASS        reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DO              reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    OTHERWISE       reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    STEP            reduce using rule 150 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)


state 284

    (103) statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .

    DELETE          reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PUBLIC          reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PRIVATE         reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    _OUTPUT         reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLASS           reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    MOD             reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    POINTER         reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEW             reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDCLASS        reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 103 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)


state 285

    (105) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (106) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY OF ID statements ENDFUNCTION

    RETURNS         shift and go to state 327


state 286

    (107) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (108) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION
    (118) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 328
    ARRAY           shift and go to state 329


state 287

    (132) statement -> READFILE expression COMMA ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (21) indexes -> . indexes COMMA expression
    (22) indexes -> . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 113
    indexes                        shift and go to state 330

state 288

    (141) enumerate_items -> ID .

    RIGHT_PAREN     reduce using rule 141 (enumerate_items -> ID .)
    COMMA           reduce using rule 141 (enumerate_items -> ID .)


state 289

    (139) statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items . RIGHT_PAREN
    (140) enumerate_items -> enumerate_items . COMMA ID

    RIGHT_PAREN     shift and go to state 331
    COMMA           shift and go to state 332


state 290

    (144) statement -> TYPE ID EQUAL POINTER ID .

    DELETE          reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    DECLARE         reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    PUBLIC          reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    PRIVATE         reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    CONSTANT        reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    INPUT           reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    OUTPUT          reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    _OUTPUT         reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    IF              reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    CASE            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    FOR             reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    REPEAT          reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    WHILE           reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    PROCEDURE       reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    CALL            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    FUNCTION        reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    RETURN          reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    OPENFILE        reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    READFILE        reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    WRITEFILE       reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    CLOSEFILE       reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    SEEK            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    TYPE            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    PASS            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    IMPORT          reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    CLASS           reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    LEFT_SQUARE     reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    ID              reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    NOT             reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    MINUS           reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    PLUS            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    LEFT_PAREN      reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    DATE            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    BOOLEAN         reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    CHAR            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    STRING          reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    REAL            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    INTEGER         reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    MOD             reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    DIV             reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    POINTER         reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    NEW             reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    $end            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    UNTIL           reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDWHILE        reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDTYPE         reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDCLASS        reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    ELSE            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDIF           reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDPROCEDURE    reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    SEMICOLON       reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    NEXT            reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDFUNCTION     reduce using rule 144 (statement -> TYPE ID EQUAL POINTER ID .)


state 291

    (151) statement -> TYPE ID EQUAL SET OF . ID

    ID              shift and go to state 333


state 292

    (148) statement -> CLASS ID INHERITS ID statements . ENDCLASS
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDCLASS        shift and go to state 334
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 293

    (14) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (17) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 335
    COMMA           shift and go to state 336


state 294

    (18) dimensions -> dimension .

    RIGHT_SQUARE    reduce using rule 18 (dimensions -> dimension .)
    COMMA           reduce using rule 18 (dimensions -> dimension .)


state 295

    (19) dimension -> expression . COLON expression
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    COLON           shift and go to state 337
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 296

    (15) statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (17) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 338
    COMMA           shift and go to state 336


state 297

    (95) statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 339
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 298

    (97) statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 340
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 299

    (96) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 341
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 300

    (98) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 342
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 301

    (109) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (110) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION
    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY OF ID statements ENDFUNCTION

    RETURNS         shift and go to state 343


state 302

    (111) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (112) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION
    (120) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 344
    ARRAY           shift and go to state 345


state 303

    (16) statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (17) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 346
    COMMA           shift and go to state 336


state 304

    (99) statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 347
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 305

    (101) statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 348
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 306

    (100) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 349
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 307

    (102) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 350
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 308

    (113) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (114) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION
    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY OF ID statements ENDFUNCTION

    RETURNS         shift and go to state 351


state 309

    (115) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (116) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION
    (122) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS . ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 352
    ARRAY           shift and go to state 353


state 310

    (32) statement -> IF expression THEN statements ELSE statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDIF           shift and go to state 354
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statement                      shift and go to state 46

state 311

    (39) case_expression -> expression TO expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    COLON           reduce using rule 39 (case_expression -> expression TO expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 312

    (37) case -> case_expression COLON statements . SEMICOLON
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    SEMICOLON       shift and go to state 355
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 313

    (41) otherwise_statement -> OTHERWISE COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    SEMICOLON       reduce using rule 41 (otherwise_statement -> OTHERWISE COLON statements .)
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 314

    (42) statement -> FOR ID ASSIGN expression TO expression . STEP expression statements NEXT ID
    (43) statement -> FOR ID ASSIGN expression TO expression . statements NEXT ID
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    STEP            shift and go to state 356
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 158
    DIV             shift and go to state 159
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 160
    MINUS           shift and go to state 161
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 162
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statements                     shift and go to state 357
    statement                      shift and go to state 2

state 315

    (77) declare_parameter -> ID COLON ID .

    RIGHT_PAREN     reduce using rule 77 (declare_parameter -> ID COLON ID .)
    COMMA           reduce using rule 77 (declare_parameter -> ID COLON ID .)


state 316

    (78) declare_parameter -> ID COLON ARRAY .
    (83) declare_parameter -> ID COLON ARRAY . OF ID

    RIGHT_PAREN     reduce using rule 78 (declare_parameter -> ID COLON ARRAY .)
    COMMA           reduce using rule 78 (declare_parameter -> ID COLON ARRAY .)
    OF              shift and go to state 358


state 317

    (86) declare_parameter -> ID LEFT_SQUARE RIGHT_SQUARE . COLON ID

    COLON           shift and go to state 359


state 318

    (91) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 360
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 319

    (75) declare_parameters -> declare_parameters COMMA declare_parameter .

    RIGHT_PAREN     reduce using rule 75 (declare_parameters -> declare_parameters COMMA declare_parameter .)
    COMMA           reduce using rule 75 (declare_parameters -> declare_parameters COMMA declare_parameter .)


state 320

    (93) statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 93 (statement -> PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)


state 321

    (79) declare_parameter -> BYREF ID COLON . ID
    (80) declare_parameter -> BYREF ID COLON . ARRAY
    (84) declare_parameter -> BYREF ID COLON . ARRAY OF ID

    ID              shift and go to state 361
    ARRAY           shift and go to state 362


state 322

    (87) declare_parameter -> BYREF ID LEFT_SQUARE . RIGHT_SQUARE COLON ID

    RIGHT_SQUARE    shift and go to state 363


state 323

    (81) declare_parameter -> BYVAL ID COLON . ID
    (82) declare_parameter -> BYVAL ID COLON . ARRAY
    (85) declare_parameter -> BYVAL ID COLON . ARRAY OF ID

    ID              shift and go to state 364
    ARRAY           shift and go to state 365


state 324

    (88) declare_parameter -> BYVAL ID LEFT_SQUARE . RIGHT_SQUARE COLON ID

    RIGHT_SQUARE    shift and go to state 366


state 325

    (92) statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 367
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 326

    (94) statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 94 (statement -> PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)


state 327

    (105) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (106) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION
    (117) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 368
    ARRAY           shift and go to state 369


state 328

    (107) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 370
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 329

    (108) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (118) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY . OF ID statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OF              shift and go to state 372
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 371
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 330

    (132) statement -> READFILE expression COMMA ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (21) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 373
    COMMA           shift and go to state 180


state 331

    (139) statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .

    DELETE          reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    DECLARE         reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PUBLIC          reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PRIVATE         reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CONSTANT        reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    INPUT           reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    OUTPUT          reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    _OUTPUT         reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    IF              reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CASE            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    FOR             reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    REPEAT          reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    WHILE           reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PROCEDURE       reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CALL            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    FUNCTION        reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    RETURN          reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    OPENFILE        reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    READFILE        reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    WRITEFILE       reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    SEEK            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    TYPE            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PASS            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    IMPORT          reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CLASS           reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ID              reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NOT             reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    MINUS           reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PLUS            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    DATE            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    BOOLEAN         reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CHAR            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    STRING          reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    REAL            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    INTEGER         reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    MOD             reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    DIV             reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    POINTER         reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NEW             reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    $end            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    UNTIL           reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDWHILE        reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDTYPE         reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDCLASS        reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ELSE            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDIF           reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    SEMICOLON       reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NEXT            reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 139 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)


state 332

    (140) enumerate_items -> enumerate_items COMMA . ID

    ID              shift and go to state 374


state 333

    (151) statement -> TYPE ID EQUAL SET OF ID .

    DELETE          reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    DECLARE         reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    PUBLIC          reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    PRIVATE         reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    CONSTANT        reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    INPUT           reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    OUTPUT          reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    _OUTPUT         reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    IF              reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    CASE            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    FOR             reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    REPEAT          reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    WHILE           reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    PROCEDURE       reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    CALL            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    FUNCTION        reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    RETURN          reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    OPENFILE        reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    READFILE        reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    WRITEFILE       reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    CLOSEFILE       reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    SEEK            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    TYPE            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    PASS            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    IMPORT          reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    CLASS           reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    LEFT_SQUARE     reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    ID              reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    NOT             reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    MINUS           reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    PLUS            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    LEFT_PAREN      reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    DATE            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    BOOLEAN         reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    CHAR            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    STRING          reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    REAL            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    INTEGER         reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    MOD             reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    DIV             reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    POINTER         reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    NEW             reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    $end            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    UNTIL           reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    ENDWHILE        reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    ENDTYPE         reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    ENDCLASS        reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    ELSE            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    ENDIF           reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    ENDPROCEDURE    reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    SEMICOLON       reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    NEXT            reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)
    ENDFUNCTION     reduce using rule 151 (statement -> TYPE ID EQUAL SET OF ID .)


state 334

    (148) statement -> CLASS ID INHERITS ID statements ENDCLASS .

    DELETE          reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    DECLARE         reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    PUBLIC          reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    PRIVATE         reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    CONSTANT        reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    INPUT           reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    OUTPUT          reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    _OUTPUT         reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    IF              reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    CASE            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    FOR             reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    REPEAT          reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    WHILE           reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    PROCEDURE       reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    CALL            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    FUNCTION        reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    RETURN          reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    OPENFILE        reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    READFILE        reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    WRITEFILE       reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    CLOSEFILE       reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    SEEK            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    TYPE            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    PASS            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    IMPORT          reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    CLASS           reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    LEFT_SQUARE     reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    ID              reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    NOT             reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    MINUS           reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    PLUS            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    LEFT_PAREN      reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    DATE            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    BOOLEAN         reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    CHAR            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    STRING          reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    REAL            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    INTEGER         reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    MOD             reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    DIV             reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    POINTER         reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    NEW             reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    $end            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    UNTIL           reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    ENDWHILE        reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    ENDTYPE         reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    ENDCLASS        reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    ELSE            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    ENDIF           reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    ENDPROCEDURE    reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    SEMICOLON       reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    NEXT            reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)
    ENDFUNCTION     reduce using rule 148 (statement -> CLASS ID INHERITS ID statements ENDCLASS .)


state 335

    (14) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 375


state 336

    (17) dimensions -> dimensions COMMA . dimension
    (19) dimension -> . expression COLON expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    dimension                      shift and go to state 376
    expression                     shift and go to state 295

state 337

    (19) dimension -> expression COLON . expression
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 377

state 338

    (15) statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 378


state 339

    (95) statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 379
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 340

    (97) statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 97 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)


state 341

    (96) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 380
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 342

    (98) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 98 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)


state 343

    (109) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (110) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION
    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 381
    ARRAY           shift and go to state 382


state 344

    (111) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 383
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 345

    (112) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (120) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY . OF ID statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OF              shift and go to state 385
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 384
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 346

    (16) statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 386


state 347

    (99) statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 387
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 348

    (101) statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 101 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)


state 349

    (100) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 388
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 350

    (102) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 102 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE .)


state 351

    (113) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (114) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION
    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 389
    ARRAY           shift and go to state 390


state 352

    (115) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 391
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 353

    (116) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (122) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY . OF ID statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OF              shift and go to state 393
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 392
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 354

    (32) statement -> IF expression THEN statements ELSE statements ENDIF .

    DELETE          reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    DECLARE         reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PUBLIC          reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PRIVATE         reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CONSTANT        reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INPUT           reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OUTPUT          reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    _OUTPUT         reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IF              reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CASE            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FOR             reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REPEAT          reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WHILE           reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PROCEDURE       reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CALL            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FUNCTION        reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    RETURN          reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OPENFILE        reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    READFILE        reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WRITEFILE       reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CLOSEFILE       reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEEK            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    TYPE            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PASS            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IMPORT          reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CLASS           reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    LEFT_SQUARE     reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ID              reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NOT             reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    MINUS           reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PLUS            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    LEFT_PAREN      reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    DATE            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    BOOLEAN         reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CHAR            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    STRING          reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REAL            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INTEGER         reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    MOD             reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    DIV             reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    POINTER         reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEW             reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    $end            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    UNTIL           reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDWHILE        reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDTYPE         reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDCLASS        reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ELSE            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDIF           reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDPROCEDURE    reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEMICOLON       reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEXT            reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDFUNCTION     reduce using rule 32 (statement -> IF expression THEN statements ELSE statements ENDIF .)


state 355

    (37) case -> case_expression COLON statements SEMICOLON .

    ENDCASE         reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    OTHERWISE       reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    LEFT_SQUARE     reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    ID              reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    NOT             reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    MINUS           reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    PLUS            reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    LEFT_PAREN      reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    DATE            reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    BOOLEAN         reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    CHAR            reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    STRING          reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    REAL            reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    INTEGER         reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    MOD             reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    DIV             reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    POINTER         reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)
    NEW             reduce using rule 37 (case -> case_expression COLON statements SEMICOLON .)


state 356

    (42) statement -> FOR ID ASSIGN expression TO expression STEP . expression statements NEXT ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 394

state 357

    (43) statement -> FOR ID ASSIGN expression TO expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    NEXT            shift and go to state 395
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statement                      shift and go to state 46

state 358

    (83) declare_parameter -> ID COLON ARRAY OF . ID

    ID              shift and go to state 396


state 359

    (86) declare_parameter -> ID LEFT_SQUARE RIGHT_SQUARE COLON . ID

    ID              shift and go to state 397


state 360

    (91) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 91 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 361

    (79) declare_parameter -> BYREF ID COLON ID .

    RIGHT_PAREN     reduce using rule 79 (declare_parameter -> BYREF ID COLON ID .)
    COMMA           reduce using rule 79 (declare_parameter -> BYREF ID COLON ID .)


state 362

    (80) declare_parameter -> BYREF ID COLON ARRAY .
    (84) declare_parameter -> BYREF ID COLON ARRAY . OF ID

    RIGHT_PAREN     reduce using rule 80 (declare_parameter -> BYREF ID COLON ARRAY .)
    COMMA           reduce using rule 80 (declare_parameter -> BYREF ID COLON ARRAY .)
    OF              shift and go to state 398


state 363

    (87) declare_parameter -> BYREF ID LEFT_SQUARE RIGHT_SQUARE . COLON ID

    COLON           shift and go to state 399


state 364

    (81) declare_parameter -> BYVAL ID COLON ID .

    RIGHT_PAREN     reduce using rule 81 (declare_parameter -> BYVAL ID COLON ID .)
    COMMA           reduce using rule 81 (declare_parameter -> BYVAL ID COLON ID .)


state 365

    (82) declare_parameter -> BYVAL ID COLON ARRAY .
    (85) declare_parameter -> BYVAL ID COLON ARRAY . OF ID

    RIGHT_PAREN     reduce using rule 82 (declare_parameter -> BYVAL ID COLON ARRAY .)
    COMMA           reduce using rule 82 (declare_parameter -> BYVAL ID COLON ARRAY .)
    OF              shift and go to state 400


state 366

    (88) declare_parameter -> BYVAL ID LEFT_SQUARE RIGHT_SQUARE . COLON ID

    COLON           shift and go to state 401


state 367

    (92) statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 92 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 368

    (105) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 402
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 369

    (106) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (117) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . OF ID statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OF              shift and go to state 404
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 403
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 370

    (107) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 405
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 371

    (108) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 406
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 372

    (118) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF . ID statements ENDFUNCTION

    ID              shift and go to state 407


state 373

    (132) statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DELETE          reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PUBLIC          reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PRIVATE         reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    _OUTPUT         reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLASS           reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MOD             reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    POINTER         reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEW             reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 132 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 374

    (140) enumerate_items -> enumerate_items COMMA ID .

    RIGHT_PAREN     reduce using rule 140 (enumerate_items -> enumerate_items COMMA ID .)
    COMMA           reduce using rule 140 (enumerate_items -> enumerate_items COMMA ID .)


state 375

    (14) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 408


state 376

    (17) dimensions -> dimensions COMMA dimension .

    RIGHT_SQUARE    reduce using rule 17 (dimensions -> dimensions COMMA dimension .)
    COMMA           reduce using rule 17 (dimensions -> dimensions COMMA dimension .)


state 377

    (19) dimension -> expression COLON expression .
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER

    RIGHT_SQUARE    reduce using rule 19 (dimension -> expression COLON expression .)
    COMMA           reduce using rule 19 (dimension -> expression COLON expression .)
    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 70
    DIV             shift and go to state 71
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 78


state 378

    (15) statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 409


state 379

    (95) statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 95 (statement -> PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 380

    (96) statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 96 (statement -> PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 381

    (109) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 410
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 382

    (110) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . OF ID statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OF              shift and go to state 412
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 411
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 383

    (111) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 413
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 384

    (112) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 414
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 385

    (120) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF . ID statements ENDFUNCTION

    ID              shift and go to state 415


state 386

    (16) statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 416


state 387

    (99) statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 99 (statement -> PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 388

    (100) statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PUBLIC          reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PRIVATE         reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    _OUTPUT         reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MOD             reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DIV             reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 100 (statement -> PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 389

    (113) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 417
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 390

    (114) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . OF ID statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OF              shift and go to state 419
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 418
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 391

    (115) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 420
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 392

    (116) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 421
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 393

    (122) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF . ID statements ENDFUNCTION

    ID              shift and go to state 422


state 394

    (42) statement -> FOR ID ASSIGN expression TO expression STEP expression . statements NEXT ID
    (50) expression -> expression . OR expression
    (51) expression -> expression . AND expression
    (53) expression -> expression . EQUAL expression
    (54) expression -> expression . NOT_EQUAL expression
    (55) expression -> expression . LESS expression
    (56) expression -> expression . GREATER expression
    (57) expression -> expression . LESS_EQUAL expression
    (58) expression -> expression . GREATER_EQUAL expression
    (59) expression -> expression . MOD expression
    (60) expression -> expression . DIV expression
    (61) expression -> expression . MUL expression
    (62) expression -> expression . N_DIV expression
    (65) expression -> expression . PLUS expression
    (66) expression -> expression . MINUS expression
    (67) expression -> expression . CONNECT expression
    (138) expression -> expression . DOT expression
    (143) expression -> expression . POINTER
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OR              shift and go to state 62
    AND             shift and go to state 63
    EQUAL           shift and go to state 64
    NOT_EQUAL       shift and go to state 65
    LESS            shift and go to state 66
    GREATER         shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER_EQUAL   shift and go to state 69
    MOD             shift and go to state 158
    DIV             shift and go to state 159
    MUL             shift and go to state 72
    N_DIV           shift and go to state 73
    PLUS            shift and go to state 160
    MINUS           shift and go to state 161
    CONNECT         shift and go to state 76
    DOT             shift and go to state 77
    POINTER         shift and go to state 162
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statements                     shift and go to state 423
    statement                      shift and go to state 2

state 395

    (43) statement -> FOR ID ASSIGN expression TO expression statements NEXT . ID

    ID              shift and go to state 424


state 396

    (83) declare_parameter -> ID COLON ARRAY OF ID .

    RIGHT_PAREN     reduce using rule 83 (declare_parameter -> ID COLON ARRAY OF ID .)
    COMMA           reduce using rule 83 (declare_parameter -> ID COLON ARRAY OF ID .)


state 397

    (86) declare_parameter -> ID LEFT_SQUARE RIGHT_SQUARE COLON ID .

    RIGHT_PAREN     reduce using rule 86 (declare_parameter -> ID LEFT_SQUARE RIGHT_SQUARE COLON ID .)
    COMMA           reduce using rule 86 (declare_parameter -> ID LEFT_SQUARE RIGHT_SQUARE COLON ID .)


state 398

    (84) declare_parameter -> BYREF ID COLON ARRAY OF . ID

    ID              shift and go to state 425


state 399

    (87) declare_parameter -> BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON . ID

    ID              shift and go to state 426


state 400

    (85) declare_parameter -> BYVAL ID COLON ARRAY OF . ID

    ID              shift and go to state 427


state 401

    (88) declare_parameter -> BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON . ID

    ID              shift and go to state 428


state 402

    (105) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 429
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 403

    (106) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 430
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 404

    (117) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF . ID statements ENDFUNCTION

    ID              shift and go to state 431


state 405

    (107) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLASS           reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MOD             reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DIV             reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    POINTER         reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEW             reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 107 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 406

    (108) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PUBLIC          reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PRIVATE         reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLASS           reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MOD             reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DIV             reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    POINTER         reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEW             reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 108 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 407

    (118) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 432
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 408

    (14) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DELETE          reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DECLARE         reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PUBLIC          reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PRIVATE         reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    _OUTPUT         reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PROCEDURE       reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CALL            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FUNCTION        reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    RETURN          reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OPENFILE        reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    READFILE        reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WRITEFILE       reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLOSEFILE       reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEEK            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    TYPE            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PASS            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IMPORT          reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLASS           reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_SQUARE     reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MINUS           reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PLUS            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_PAREN      reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DATE            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    BOOLEAN         reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MOD             reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DIV             reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    POINTER         reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEW             reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDTYPE         reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDCLASS        reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDPROCEDURE    reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEMICOLON       reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDFUNCTION     reduce using rule 14 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 409

    (15) statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DELETE          reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DECLARE         reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PUBLIC          reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PRIVATE         reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    _OUTPUT         reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PROCEDURE       reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CALL            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FUNCTION        reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    RETURN          reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OPENFILE        reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    READFILE        reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WRITEFILE       reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLOSEFILE       reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEEK            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    TYPE            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PASS            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IMPORT          reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLASS           reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_SQUARE     reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MINUS           reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PLUS            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_PAREN      reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DATE            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    BOOLEAN         reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MOD             reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DIV             reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    POINTER         reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEW             reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDTYPE         reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDCLASS        reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDPROCEDURE    reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEMICOLON       reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDFUNCTION     reduce using rule 15 (statement -> PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 410

    (109) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 433
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 411

    (110) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 434
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 412

    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF . ID statements ENDFUNCTION

    ID              shift and go to state 435


state 413

    (111) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLASS           reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MOD             reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DIV             reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    POINTER         reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEW             reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 111 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 414

    (112) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PUBLIC          reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PRIVATE         reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLASS           reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MOD             reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DIV             reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    POINTER         reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEW             reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 112 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 415

    (120) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 436
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 416

    (16) statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DELETE          reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DECLARE         reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PUBLIC          reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PRIVATE         reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    _OUTPUT         reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PROCEDURE       reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CALL            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FUNCTION        reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    RETURN          reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OPENFILE        reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    READFILE        reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WRITEFILE       reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLOSEFILE       reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEEK            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    TYPE            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PASS            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IMPORT          reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLASS           reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_SQUARE     reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MINUS           reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PLUS            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_PAREN      reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DATE            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    BOOLEAN         reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MOD             reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DIV             reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    POINTER         reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEW             reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDTYPE         reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDCLASS        reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDPROCEDURE    reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEMICOLON       reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDFUNCTION     reduce using rule 16 (statement -> PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 417

    (113) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 437
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 418

    (114) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 438
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 419

    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF . ID statements ENDFUNCTION

    ID              shift and go to state 439


state 420

    (115) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLASS           reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MOD             reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DIV             reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    POINTER         reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEW             reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 115 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 421

    (116) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PUBLIC          reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PRIVATE         reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLASS           reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MOD             reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DIV             reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    POINTER         reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEW             reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 116 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 422

    (122) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 440
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 423

    (42) statement -> FOR ID ASSIGN expression TO expression STEP expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    NEXT            shift and go to state 441
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    expression                     shift and go to state 9
    statement                      shift and go to state 46

state 424

    (43) statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .

    DELETE          reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    DECLARE         reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PUBLIC          reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PRIVATE         reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CONSTANT        reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INPUT           reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OUTPUT          reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    _OUTPUT         reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IF              reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CASE            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FOR             reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REPEAT          reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WHILE           reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PROCEDURE       reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CALL            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FUNCTION        reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    RETURN          reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OPENFILE        reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    READFILE        reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WRITEFILE       reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CLOSEFILE       reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEEK            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    TYPE            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PASS            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IMPORT          reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CLASS           reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    LEFT_SQUARE     reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ID              reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NOT             reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    MINUS           reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PLUS            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    DATE            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    BOOLEAN         reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CHAR            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    STRING          reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REAL            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INTEGER         reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    MOD             reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    DIV             reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    POINTER         reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEW             reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    $end            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    UNTIL           reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDWHILE        reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDTYPE         reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDCLASS        reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ELSE            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDIF           reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEMICOLON       reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEXT            reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 43 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)


state 425

    (84) declare_parameter -> BYREF ID COLON ARRAY OF ID .

    RIGHT_PAREN     reduce using rule 84 (declare_parameter -> BYREF ID COLON ARRAY OF ID .)
    COMMA           reduce using rule 84 (declare_parameter -> BYREF ID COLON ARRAY OF ID .)


state 426

    (87) declare_parameter -> BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID .

    RIGHT_PAREN     reduce using rule 87 (declare_parameter -> BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID .)
    COMMA           reduce using rule 87 (declare_parameter -> BYREF ID LEFT_SQUARE RIGHT_SQUARE COLON ID .)


state 427

    (85) declare_parameter -> BYVAL ID COLON ARRAY OF ID .

    RIGHT_PAREN     reduce using rule 85 (declare_parameter -> BYVAL ID COLON ARRAY OF ID .)
    COMMA           reduce using rule 85 (declare_parameter -> BYVAL ID COLON ARRAY OF ID .)


state 428

    (88) declare_parameter -> BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID .

    RIGHT_PAREN     reduce using rule 88 (declare_parameter -> BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID .)
    COMMA           reduce using rule 88 (declare_parameter -> BYVAL ID LEFT_SQUARE RIGHT_SQUARE COLON ID .)


state 429

    (105) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLASS           reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MOD             reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DIV             reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    POINTER         reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEW             reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 105 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 430

    (106) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PUBLIC          reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PRIVATE         reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLASS           reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MOD             reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DIV             reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    POINTER         reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEW             reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 106 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 431

    (117) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 442
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 432

    (118) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 443
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 433

    (109) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLASS           reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MOD             reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DIV             reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    POINTER         reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEW             reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 109 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 434

    (110) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PUBLIC          reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PRIVATE         reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLASS           reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MOD             reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DIV             reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    POINTER         reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEW             reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 110 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 435

    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 444
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 436

    (120) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 445
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 437

    (113) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLASS           reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MOD             reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DIV             reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    POINTER         reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEW             reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 113 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 438

    (114) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PUBLIC          reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PRIVATE         reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLASS           reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MOD             reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DIV             reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    POINTER         reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEW             reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 114 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 439

    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statements                     shift and go to state 446
    statement                      shift and go to state 2
    expression                     shift and go to state 9

state 440

    (122) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 447
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 441

    (42) statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT . ID

    ID              shift and go to state 448


state 442

    (117) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 449
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 443

    (118) statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .

    DELETE          reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INPUT           reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IF              reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CASE            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FOR             reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WHILE           reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CALL            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    RETURN          reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    READFILE        reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEEK            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    TYPE            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PASS            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLASS           reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ID              reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NOT             reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MINUS           reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PLUS            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DATE            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CHAR            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    STRING          reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REAL            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MOD             reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DIV             reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    POINTER         reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEW             reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    $end            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ELSE            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEXT            reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 118 (statement -> FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)


state 444

    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 450
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 445

    (120) statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .

    DELETE          reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INPUT           reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IF              reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CASE            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FOR             reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WHILE           reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CALL            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    RETURN          reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    READFILE        reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEEK            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    TYPE            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PASS            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLASS           reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ID              reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NOT             reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MINUS           reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PLUS            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DATE            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CHAR            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    STRING          reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REAL            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MOD             reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DIV             reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    POINTER         reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEW             reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    $end            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ELSE            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEXT            reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 120 (statement -> PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)


state 446

    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . PUBLIC ID COLON ID
    (6) statement -> . DECLARE ids COLON ID
    (7) statement -> . PUBLIC ids COLON ID
    (10) statement -> . PRIVATE ID COLON ID
    (11) statement -> . PRIVATE ids COLON ID
    (12) statement -> . CONSTANT ID EQUAL expression
    (13) statement -> . CONSTANT ID ASSIGN expression
    (14) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (15) statement -> . PUBLIC ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . PRIVATE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (20) statement -> . expression ASSIGN expression
    (27) statement -> . INPUT expression
    (28) statement -> . OUTPUT output_expression
    (29) statement -> . _OUTPUT output_expression
    (32) statement -> . IF expression THEN statements ELSE statements ENDIF
    (33) statement -> . IF expression THEN statements ENDIF
    (34) statement -> . CASE OF expression cases ENDCASE
    (42) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (43) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (44) statement -> . REPEAT statements UNTIL expression
    (45) statement -> . WHILE expression DO statements ENDWHILE
    (46) statement -> . WHILE expression statements ENDWHILE
    (47) statement -> . expression
    (91) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (92) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (93) statement -> . PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (94) statement -> . PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (95) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (96) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (97) statement -> . PUBLIC PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (98) statement -> . PUBLIC PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (99) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (100) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (101) statement -> . PRIVATE PROCEDURE ID LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (102) statement -> . PRIVATE PROCEDURE NEW LEFT_PAREN RIGHT_PAREN statements ENDPROCEDURE
    (103) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (104) statement -> . CALL ID LEFT_PAREN RIGHT_PAREN
    (105) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (106) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (107) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (108) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (109) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (110) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (111) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (112) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (113) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (114) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (115) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (116) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (117) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (118) statement -> . FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (119) statement -> . PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (120) statement -> . PUBLIC FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (121) statement -> . PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (122) statement -> . PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (127) statement -> . RETURN expression
    (128) statement -> . OPENFILE expression FOR READ
    (129) statement -> . OPENFILE expression FOR WRITE
    (130) statement -> . OPENFILE expression FOR APPEND
    (131) statement -> . OPENFILE expression FOR RANDOM
    (132) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (133) statement -> . READFILE expression COMMA ID
    (134) statement -> . WRITEFILE expression COMMA expression
    (135) statement -> . CLOSEFILE expression
    (136) statement -> . SEEK expression COMMA expression
    (137) statement -> . TYPE ID statements ENDTYPE
    (139) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (144) statement -> . TYPE ID EQUAL POINTER ID
    (145) statement -> . PASS
    (146) statement -> . IMPORT expression
    (147) statement -> . CLASS ID statements ENDCLASS
    (148) statement -> . CLASS ID INHERITS ID statements ENDCLASS
    (151) statement -> . TYPE ID EQUAL SET OF ID
    (23) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (24) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (48) expression -> . ID
    (49) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (50) expression -> . expression OR expression
    (51) expression -> . expression AND expression
    (52) expression -> . NOT expression
    (53) expression -> . expression EQUAL expression
    (54) expression -> . expression NOT_EQUAL expression
    (55) expression -> . expression LESS expression
    (56) expression -> . expression GREATER expression
    (57) expression -> . expression LESS_EQUAL expression
    (58) expression -> . expression GREATER_EQUAL expression
    (59) expression -> . expression MOD expression
    (60) expression -> . expression DIV expression
    (61) expression -> . expression MUL expression
    (62) expression -> . expression N_DIV expression
    (63) expression -> . MINUS expression
    (64) expression -> . PLUS expression
    (65) expression -> . expression PLUS expression
    (66) expression -> . expression MINUS expression
    (67) expression -> . expression CONNECT expression
    (68) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (69) expression -> . DATE
    (70) expression -> . BOOLEAN
    (71) expression -> . CHAR
    (72) expression -> . STRING
    (73) expression -> . REAL
    (74) expression -> . INTEGER
    (123) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (124) expression -> . MOD LEFT_PAREN parameters RIGHT_PAREN
    (125) expression -> . DIV LEFT_PAREN parameters RIGHT_PAREN
    (126) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (138) expression -> . expression DOT expression
    (142) expression -> . POINTER expression
    (143) expression -> . expression POINTER
    (149) expression -> . NEW ID
    (150) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 451
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    PUBLIC          shift and go to state 6
    PRIVATE         shift and go to state 7
    CONSTANT        shift and go to state 8
    INPUT           shift and go to state 11
    OUTPUT          shift and go to state 12
    _OUTPUT         shift and go to state 13
    IF              shift and go to state 14
    CASE            shift and go to state 15
    FOR             shift and go to state 16
    REPEAT          shift and go to state 17
    WHILE           shift and go to state 18
    PROCEDURE       shift and go to state 19
    CALL            shift and go to state 22
    FUNCTION        shift and go to state 23
    RETURN          shift and go to state 24
    OPENFILE        shift and go to state 25
    READFILE        shift and go to state 26
    WRITEFILE       shift and go to state 27
    CLOSEFILE       shift and go to state 28
    SEEK            shift and go to state 29
    TYPE            shift and go to state 30
    PASS            shift and go to state 32
    IMPORT          shift and go to state 33
    CLASS           shift and go to state 34
    LEFT_SQUARE     shift and go to state 10
    ID              shift and go to state 4
    NOT             shift and go to state 35
    MINUS           shift and go to state 38
    PLUS            shift and go to state 39
    LEFT_PAREN      shift and go to state 20
    DATE            shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42
    STRING          shift and go to state 43
    REAL            shift and go to state 44
    INTEGER         shift and go to state 45
    MOD             shift and go to state 36
    DIV             shift and go to state 37
    POINTER         shift and go to state 31
    NEW             shift and go to state 21

    statement                      shift and go to state 46
    expression                     shift and go to state 9

state 447

    (122) statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .

    DELETE          reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INPUT           reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IF              reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CASE            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FOR             reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WHILE           reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CALL            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    RETURN          reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    READFILE        reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEEK            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    TYPE            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PASS            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLASS           reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ID              reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NOT             reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MINUS           reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PLUS            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DATE            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CHAR            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    STRING          reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REAL            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MOD             reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DIV             reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    POINTER         reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEW             reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    $end            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ELSE            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEXT            reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 122 (statement -> PRIVATE FUNCTION ID LEFT_PAREN RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)


state 448

    (42) statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .

    DELETE          reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    DECLARE         reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PUBLIC          reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PRIVATE         reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CONSTANT        reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    INPUT           reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    OUTPUT          reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    _OUTPUT         reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    IF              reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CASE            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    FOR             reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    REPEAT          reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    WHILE           reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PROCEDURE       reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CALL            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    FUNCTION        reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    RETURN          reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    OPENFILE        reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    READFILE        reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    WRITEFILE       reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CLOSEFILE       reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    SEEK            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    TYPE            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PASS            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    IMPORT          reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CLASS           reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    LEFT_SQUARE     reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ID              reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NOT             reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    MINUS           reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PLUS            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    DATE            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    BOOLEAN         reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CHAR            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    STRING          reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    REAL            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    INTEGER         reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    MOD             reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    DIV             reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    POINTER         reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NEW             reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    $end            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    UNTIL           reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDWHILE        reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDTYPE         reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDCLASS        reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ELSE            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDIF           reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    SEMICOLON       reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NEXT            reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 42 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)


state 449

    (117) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .

    DELETE          reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INPUT           reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IF              reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CASE            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FOR             reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WHILE           reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CALL            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    RETURN          reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    READFILE        reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEEK            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    TYPE            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PASS            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLASS           reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ID              reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NOT             reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MINUS           reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PLUS            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DATE            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CHAR            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    STRING          reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REAL            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MOD             reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DIV             reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    POINTER         reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEW             reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    $end            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ELSE            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEXT            reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 117 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)


state 450

    (119) statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .

    DELETE          reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INPUT           reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IF              reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CASE            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FOR             reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WHILE           reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CALL            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    RETURN          reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    READFILE        reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEEK            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    TYPE            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PASS            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLASS           reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ID              reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NOT             reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MINUS           reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PLUS            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DATE            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CHAR            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    STRING          reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REAL            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MOD             reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DIV             reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    POINTER         reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEW             reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    $end            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ELSE            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEXT            reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 119 (statement -> PUBLIC FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)


state 451

    (121) statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .

    DELETE          reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PUBLIC          reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PRIVATE         reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INPUT           reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    _OUTPUT         reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IF              reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CASE            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FOR             reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WHILE           reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CALL            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    RETURN          reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    READFILE        reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEEK            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    TYPE            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PASS            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLASS           reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ID              reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NOT             reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MINUS           reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PLUS            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DATE            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CHAR            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    STRING          reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REAL            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MOD             reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DIV             reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    POINTER         reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEW             reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    $end            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ELSE            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEXT            reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 121 (statement -> PRIVATE FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFT_SQUARE in state 4 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for MOD in state 9 resolved as shift
WARNING: shift/reduce conflict for DIV in state 9 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 9 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 9 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 9 resolved as shift
WARNING: shift/reduce conflict for COLON in state 50 resolved as shift
WARNING: shift/reduce conflict for COLON in state 52 resolved as shift
WARNING: shift/reduce conflict for COLON in state 56 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 84 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 94 resolved as shift
WARNING: shift/reduce conflict for MOD in state 97 resolved as shift
WARNING: shift/reduce conflict for DIV in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 97 resolved as shift
WARNING: shift/reduce conflict for MOD in state 101 resolved as shift
WARNING: shift/reduce conflict for DIV in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 101 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for MOD in state 104 resolved as shift
WARNING: shift/reduce conflict for DIV in state 104 resolved as shift
WARNING: shift/reduce conflict for MUL in state 104 resolved as shift
WARNING: shift/reduce conflict for N_DIV in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 104 resolved as shift
WARNING: shift/reduce conflict for DOT in state 104 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 104 resolved as shift
WARNING: shift/reduce conflict for MOD in state 105 resolved as shift
WARNING: shift/reduce conflict for DIV in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 105 resolved as shift
WARNING: shift/reduce conflict for MOD in state 132 resolved as shift
WARNING: shift/reduce conflict for DIV in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 132 resolved as shift
WARNING: shift/reduce conflict for OR in state 147 resolved as shift
WARNING: shift/reduce conflict for AND in state 147 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for LESS in state 147 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 147 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 147 resolved as shift
WARNING: shift/reduce conflict for MOD in state 147 resolved as shift
WARNING: shift/reduce conflict for DIV in state 147 resolved as shift
WARNING: shift/reduce conflict for MUL in state 147 resolved as shift
WARNING: shift/reduce conflict for N_DIV in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 147 resolved as shift
WARNING: shift/reduce conflict for DOT in state 147 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 147 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for LESS in state 148 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 148 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 148 resolved as shift
WARNING: shift/reduce conflict for MOD in state 148 resolved as shift
WARNING: shift/reduce conflict for DIV in state 148 resolved as shift
WARNING: shift/reduce conflict for MUL in state 148 resolved as shift
WARNING: shift/reduce conflict for N_DIV in state 148 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 148 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 148 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 148 resolved as shift
WARNING: shift/reduce conflict for DOT in state 148 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 148 resolved as shift
WARNING: shift/reduce conflict for LEFT_SQUARE in state 162 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for NOT in state 162 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 162 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 162 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 162 resolved as shift
WARNING: shift/reduce conflict for DATE in state 162 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 162 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 162 resolved as shift
WARNING: shift/reduce conflict for STRING in state 162 resolved as shift
WARNING: shift/reduce conflict for REAL in state 162 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 162 resolved as shift
WARNING: shift/reduce conflict for MOD in state 162 resolved as shift
WARNING: shift/reduce conflict for DIV in state 162 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 162 resolved as shift
WARNING: shift/reduce conflict for NEW in state 162 resolved as shift
WARNING: shift/reduce conflict for MOD in state 200 resolved as shift
WARNING: shift/reduce conflict for DIV in state 200 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 200 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 200 resolved as shift
WARNING: shift/reduce conflict for POINTER in state 200 resolved as shift
WARNING: shift/reduce conflict for MOD in state 202 resolved as shift
